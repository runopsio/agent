;;;----------------------------------------------------------------------------------
;;; Generated by protoc-gen-clojure.  DO NOT EDIT
;;;
;;; GRPC io.grpc.Agent Client Implementation
;;;----------------------------------------------------------------------------------
(ns io.grpc.Agent.client
  (:require [io.grpc :refer :all]
            [clojure.core.async :as async]
            [protojure.grpc.client.utils :refer [send-unary-params invoke-unary]]
            [promesa.core :as p]
            [protojure.grpc.client.api :as grpc]))

;-----------------------------------------------------------------------------
; GRPC Client Implementation
;-----------------------------------------------------------------------------

(defn AgentConnection
  ([client params reply] (AgentConnection client {} params reply))
  ([client metadata params reply]
  (let [desc {:service "io.grpc.Agent"
              :method  "AgentConnection"
              :input   {:f io.grpc/new-Message :ch params}
              :output  {:f io.grpc/pb->Message :ch reply}
              :metadata metadata}]
    (grpc/invoke client desc))))

(defn Event
  ([client params] (Event client {} params))
  ([client metadata params]
  (let [input (async/chan 1)
        output (async/chan 1)
        desc {:service "io.grpc.Agent"
              :method  "Event"
              :input   {:f io.grpc/new-EventRequest :ch input}
              :output  {:f io.grpc/pb->RuntimeConfigurationResponse :ch output}
              :metadata metadata}]
    (-> (send-unary-params input params)
        (p/then (fn [_] (invoke-unary client desc output)))))))

