syntax = "proto3";
package io.grpc;

message Message {
  string type = 1;
  string body = 2;
}

message EventRequest {
  map<string, string> runtime_data = 1;
}

message ConnectionConfig {
  int32 backoff_http_poll = 1;
  int32 backoff_grpc_connect_subscribe = 2;
  int32 grpc_connect_channel_timeout = 3;
}

message RuntimeConfigurationResponse {
  string id = 1;
  string org = 2;
  string hc_dataset = 3;
  string hc_api_key = 4;
  string sentry_dsn = 5;
  string sentry_env = 6;
  ConnectionConfig connection_config = 7;
  string dlp_auth_b64 = 8;
  repeated string dlp_fields = 9;
}

service Agent {
  rpc AgentConnection (stream Message) returns (stream Message);

  // legacy
  rpc Event(EventRequest) returns (RuntimeConfigurationResponse);
}
