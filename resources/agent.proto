syntax = "proto3";
package io.grpc;

message SubscriberRequest {
  string tags = 1;
}

message EventRequest {
  map<string, string> runtime_data = 1;
}

message RuntimeConfigurationResponse {
  string id = 1;
  string hc_dataset = 2;
  string hc_api_key = 3;
  string sentry_dsn = 4;
  string sentry_env = 5;
  int32 http_poll_interval_in_seconds = 6;
}

message TaskResponse {
  int32 id = 1;
  string type = 2;
  string script = 3;
  string secret_provider = 4;
  string secret_path = 5;
  string secret_mapping = 6;
  string config = 7;
  string x_b3_trace_id = 8;
  string x_b3_parent_span_id = 9;
}

message LogsRequest {
  int32 id = 1;
  string status = 2;
  string logs = 3;
}

message LogsResponse {
  string message = 1;
}

message HealthRequest{}

service Agent {
  rpc Event(EventRequest) returns (RuntimeConfigurationResponse);
  rpc Subscribe (SubscriberRequest) returns (stream TaskResponse);
  rpc Webhook (LogsRequest) returns (LogsResponse);
  rpc Health (HealthRequest) returns (HealthRequest);
}
