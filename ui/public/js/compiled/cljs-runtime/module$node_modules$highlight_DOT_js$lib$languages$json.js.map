{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$json.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgDpHD,MAAOC,CAAAA,OAAP,CAvCAC,QAAa,CAACC,IAAD,CAAO,CAwBlB,MAAO,CACLC,KAAM,MADD,CAELC,SAAU,CAzBMC,CAChBC,UAAW,MADKD,CAEhBE,MAAO,6BAFSF,CAGhBG,UAAW,IAHKH,CAyBN,CApBQI,CAClBC,MAAO,WADWD,CAElBH,UAAW,aAFOG,CAGlBD,UAAW,CAHOC,CAoBR,CAGRP,IAAKS,CAAAA,iBAHG,CAVKC,CACfC,cAGE,iBAJaD,CAUL,CAKRV,IAAKY,CAAAA,aALG,CAMRZ,IAAKa,CAAAA,mBANG,CAORb,IAAKc,CAAAA,oBAPG,CAFL,CAWLC,QAAS,KAXJ,CAxBW,CATgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/json.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$json\"] = function(global,require,module,exports) {\n/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols, web\n*/\n\nfunction json(hljs) {\n  const ATTRIBUTE = {\n    className: 'attr',\n    begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    relevance: 1.01\n  };\n  const PUNCTUATION = {\n    match: /[{}[\\],:]/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n  // normally we would rely on `keywords` for this but using a mode here allows us\n  // to use the very tight `illegal: \\S` rule later to flag any other character\n  // as illegal indicating that despite looking like JSON we do not truly have\n  // JSON and thus improve false-positively greatly since JSON will try and claim\n  // all sorts of JSON looking stuff\n  const LITERALS = {\n    beginKeywords: [\n      \"true\",\n      \"false\",\n      \"null\"\n    ].join(\" \")\n  };\n\n  return {\n    name: 'JSON',\n    contains: [\n      ATTRIBUTE,\n      PUNCTUATION,\n      hljs.QUOTE_STRING_MODE,\n      LITERALS,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    illegal: '\\\\S'\n  };\n}\n\nmodule.exports = json;\n\n};"],
"names":["shadow$provide","global","require","module","exports","json","hljs","name","contains","ATTRIBUTE","className","begin","relevance","PUNCTUATION","match","QUOTE_STRING_MODE","LITERALS","beginKeywords","C_NUMBER_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","illegal"]
}
