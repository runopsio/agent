shadow$provide.module$node_modules$readable_stream$node_modules$string_decoder$lib$string_decoder=function(global,require,module,exports){function _normalizeEncoding(enc){if(!enc)return"utf8";for(var retried;;)switch(enc){case "utf8":case "utf-8":return"utf8";case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":return"utf16le";case "latin1":case "binary":return"latin1";case "base64":case "ascii":case "hex":return enc;default:if(retried)return;enc=(""+enc).toLowerCase();retried=!0}}function StringDecoder(encoding){var nenc=
_normalizeEncoding(encoding);if("string"!==typeof nenc&&(Buffer.isEncoding===isEncoding||!isEncoding(encoding)))throw Error("Unknown encoding: "+encoding);this.encoding=nenc||encoding;switch(this.encoding){case "utf16le":this.text=utf16Text;this.end=utf16End;encoding=4;break;case "utf8":this.fillLast=utf8FillLast;encoding=4;break;case "base64":this.text=base64Text;this.end=base64End;encoding=3;break;default:this.write=simpleWrite;this.end=simpleEnd;return}this.lastTotal=this.lastNeed=0;this.lastChar=
Buffer.allocUnsafe(encoding)}function utf8CheckByte(byte){return 127>=byte?0:6===byte>>5?2:14===byte>>4?3:30===byte>>3?4:2===byte>>6?-1:-2}function utf8CheckIncomplete(self,buf,i){var j=buf.length-1;if(j<i)return 0;var nb=utf8CheckByte(buf[j]);if(0<=nb)return 0<nb&&(self.lastNeed=nb-1),nb;if(--j<i||-2===nb)return 0;nb=utf8CheckByte(buf[j]);if(0<=nb)return 0<nb&&(self.lastNeed=nb-2),nb;if(--j<i||-2===nb)return 0;nb=utf8CheckByte(buf[j]);return 0<=nb?(0<nb&&(2===nb?nb=0:self.lastNeed=nb-3),nb):0}function utf8FillLast(buf){var p=
this.lastTotal-this.lastNeed;a:if(128!==(buf[0]&192)){this.lastNeed=0;var r="�"}else{if(1<this.lastNeed&&1<buf.length){if(128!==(buf[1]&192)){this.lastNeed=1;r="�";break a}if(2<this.lastNeed&&2<buf.length&&128!==(buf[2]&192)){this.lastNeed=2;r="�";break a}}r=void 0}if(void 0!==r)return r;if(this.lastNeed<=buf.length)return buf.copy(this.lastChar,p,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);buf.copy(this.lastChar,p,0,buf.length);this.lastNeed-=buf.length}function utf16Text(buf,
i){if(0===(buf.length-i)%2){if(i=buf.toString("utf16le",i)){var c=i.charCodeAt(i.length-1);if(55296<=c&&56319>=c)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=buf[buf.length-2],this.lastChar[1]=buf[buf.length-1],i.slice(0,-1)}return i}this.lastNeed=1;this.lastTotal=2;this.lastChar[0]=buf[buf.length-1];return buf.toString("utf16le",i,buf.length-1)}function utf16End(buf){buf=buf&&buf.length?this.write(buf):"";return this.lastNeed?buf+this.lastChar.toString("utf16le",0,this.lastTotal-this.lastNeed):
buf}function base64Text(buf,i){var n=(buf.length-i)%3;if(0===n)return buf.toString("base64",i);this.lastNeed=3-n;this.lastTotal=3;1===n?this.lastChar[0]=buf[buf.length-1]:(this.lastChar[0]=buf[buf.length-2],this.lastChar[1]=buf[buf.length-1]);return buf.toString("base64",i,buf.length-n)}function base64End(buf){buf=buf&&buf.length?this.write(buf):"";return this.lastNeed?buf+this.lastChar.toString("base64",0,3-this.lastNeed):buf}function simpleWrite(buf){return buf.toString(this.encoding)}function simpleEnd(buf){return buf&&
buf.length?this.write(buf):""}var Buffer=require("module$node_modules$readable_stream$node_modules$safe_buffer$index").Buffer,isEncoding=Buffer.isEncoding||function(encoding){encoding=""+encoding;switch(encoding&&encoding.toLowerCase()){case "hex":case "utf8":case "utf-8":case "ascii":case "binary":case "base64":case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":case "raw":return!0;default:return!1}};exports.StringDecoder=StringDecoder;StringDecoder.prototype.write=function(buf){if(0===buf.length)return"";
if(this.lastNeed){var r=this.fillLast(buf);if(void 0===r)return"";var i=this.lastNeed;this.lastNeed=0}else i=0;return i<buf.length?r?r+this.text(buf,i):this.text(buf,i):r||""};StringDecoder.prototype.end=function(buf){buf=buf&&buf.length?this.write(buf):"";return this.lastNeed?buf+"�":buf};StringDecoder.prototype.text=function(buf,i){var total=utf8CheckIncomplete(this,buf,i);if(!this.lastNeed)return buf.toString("utf8",i);this.lastTotal=total;total=buf.length-(total-this.lastNeed);buf.copy(this.lastChar,
0,total);return buf.toString("utf8",i,total)};StringDecoder.prototype.fillLast=function(buf){if(this.lastNeed<=buf.length)return buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,buf.length);this.lastNeed-=buf.length}}
//# sourceMappingURL=module$node_modules$readable_stream$node_modules$string_decoder$lib$string_decoder.js.map
