shadow$provide.module$node_modules$$sentry$minimal$dist$index=function(global,require,module,exports){function callOnHub(method){for(var args=[],_i=1;_i<arguments.length;_i++)args[_i-1]=arguments[_i];if((_i=hub_1.getCurrentHub())&&_i[method])return _i[method].apply(_i,tslib_1.__spread(args));throw Error("No hub defined or "+method+" was not found on the hub, please open a bug report.");}Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),hub_1=
require("module$node_modules$$sentry$hub$dist$index");exports.captureException=function(exception$jscomp$0,captureContext){try{throw Error("Sentry syntheticException");}catch(exception){var syntheticException=exception}return callOnHub("captureException",exception$jscomp$0,{captureContext,originalException:exception$jscomp$0,syntheticException})};exports.captureMessage=function(message,captureContext){try{throw Error(message);}catch(exception){var syntheticException=exception}return callOnHub("captureMessage",
message,"string"===typeof captureContext?captureContext:void 0,tslib_1.__assign({originalException:message,syntheticException},"string"!==typeof captureContext?{captureContext}:void 0))};exports.captureEvent=function(event){return callOnHub("captureEvent",event)};exports.configureScope=function(callback){callOnHub("configureScope",callback)};exports.addBreadcrumb=function(breadcrumb){callOnHub("addBreadcrumb",breadcrumb)};exports.setContext=function(name,context){callOnHub("setContext",name,context)};
exports.setExtras=function(extras){callOnHub("setExtras",extras)};exports.setTags=function(tags){callOnHub("setTags",tags)};exports.setExtra=function(key,extra){callOnHub("setExtra",key,extra)};exports.setTag=function(key,value){callOnHub("setTag",key,value)};exports.setUser=function(user){callOnHub("setUser",user)};exports.withScope=function(callback){callOnHub("withScope",callback)};exports._callOnClient=function(method){for(var args=[],_i=1;_i<arguments.length;_i++)args[_i-1]=arguments[_i];callOnHub.apply(void 0,
tslib_1.__spread(["_invokeClient",method],args))};exports.startTransaction=function(context,customSamplingContext){return callOnHub("startTransaction",tslib_1.__assign({},context),customSamplingContext)}}
//# sourceMappingURL=module$node_modules$$sentry$minimal$dist$index.js.map
