{"version":3,"sources":["webapp/settings/views/main.cljs"],"mappings":"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","names":["webapp.settings.views.main/layout","title","subtitle","content","webapp.components.headings/h4","webapp.settings.views.main/slack-integration","_","link","webapp.settings.views.main/github-connection","webapp.settings.views.main/stripe-link","webapp.settings.views.main/slack-connection","re-frame.core/dispatch","webapp.settings.views.main/personal-settings","webapp.components.headings/h2","webapp.settings.views.main/org-settings","orgs-response","reagent.core.atom","webapp.http.runops-api/request","res","cljs.core/reset!","webapp.components.divider/main","cljs.core/deref","webapp.settings.views.main/main","user","re_frame.core.subscribe","cljs.core.println","user-groups","admin?","p1__32852#","cljs.core/some","cljs.core._EQ_","webapp.components.headings/h1"],"sourcesContent":["(ns webapp.settings.views.main\n  (:require\n   [re-frame.core :as rf]\n   [reagent.core :as r]\n   [webapp.subs :as subs]\n   [webapp.settings.events]\n   [webapp.components.divider :as divider]\n   [webapp.components.headings :as h]\n   [webapp.http.runops-api :as runops-api]))\n\n(defn- layout [title subtitle content]\n  [:div.grid.grid-cols-5.gap-large\n   [:div.col-span-2\n    [h/h4 title {:class \"mb-regular\"}]\n    [:span.text-sm.text-gray-700 (when subtitle subtitle)]]\n   [:div.col-span-3 content]])\n\n(defn- slack-integration [_]\n  (fn [link]\n    [layout \"Slack integration\"\n     \"Integrate your organization Slack to get more power from Runops\"\n     [:div\n      [:a.flex.gap-regular.items-center.justify-center.border.rounded-lg.p-regular.cursor-pointer.hover:bg-gray-100.transition\n       {:href link\n        :target \"_blank\"}\n       [:figure.w-12\n        [:img {:src \"/images/Slack_icon_2019.svg\"\n               :alt \"Slack icon\"}]]\n       [:span\n        {:class \"text-sm\"}\n        \"Integrate your organization Slack with Runops\"]]]]))\n\n(defn- github-connection [_]\n  (fn [link]\n    [layout \"Github connection\"\n     \"Connect your Github account to get the power of templates at tasks\"\n     [:div\n      [:a.flex.gap-regular.items-center.justify-center.border.rounded-lg.p-regular.cursor-pointer.hover:bg-gray-100.transition\n       {:href link\n        :target \"_blank\"}\n       [:figure.w-12\n        [:img {:src \"/images/github-mark-icon.png\"\n               :alt \"Github icon\"}]]\n       [:span\n        {:class \"text-sm\"}\n        \"Integrate with Github\"]]]]))\n\n(defn- stripe-link [_]\n  (fn [link]\n    [layout \"Stripe access\"\n     \"Access Stripe to check your billing information\"\n     [:div\n      [:a.flex.gap-regular.items-center.justify-center.border.rounded-lg.p-regular.cursor-pointer.hover:bg-gray-100.transition\n       {:href link\n        :target \"_blank\"}\n       [:figure.w-16\n        [:img {:src \"/images/stripe-logo.svg\"\n               :alt \"Stripe icon\"}]]\n       [:span\n        {:class \"text-sm\"}\n        \"Acess Stripe by clicking here\"]]]]))\n\n(defn- slack-connection [_]\n  (fn []\n    [layout \"Slack connection\"\n     \"Connect your Slack user and get the best of Runops on running your queries and scripts\"\n     [:div\n      [:a.flex.gap-regular.items-center.justify-center.border.rounded-lg.p-regular.cursor-pointer.hover:bg-gray-100.transition\n       {:on-click #(rf/dispatch [:check-slack-integration])\n        :target \"_blank\"}\n       [:figure.w-12\n        [:img {:src \"/images/Slack_icon_2019.svg\"\n               :alt \"Slack icon\"}]]\n       [:span\n        {:class \"text-sm\"}\n        \"Connect your user on Slack\"]]]]))\n\n(defn- personal-settings []\n  [:div\n   {:class (str \"flex flex-col gap-large mb-large\")}\n   [h/h2 \"Personal settings\" {:class \"mb-regular\"}]\n   [slack-connection]])\n\n(defn- org-settings []\n  (let [orgs-response (r/atom nil)\n        _ (runops-api/request {:method \"GET\"\n                               :uri \"/v1/orgs\"\n                               :on-success (fn [res]\n                                             (reset! orgs-response res))})]\n    (fn []\n      [:div\n       {:class (str \"flex flex-col gap-large\")}\n       [divider/main]\n       [h/h2 \"Organization settings\" {:class \"mb-regular\"}]\n       [slack-integration (:slack_integration_url @orgs-response)]\n       [github-connection (:github_integration_url @orgs-response)]\n       (when (not (nil? (:stripe_customer_portal_url @orgs-response)))\n         [:div {:class \"flex flex-col gap-large\"}\n          [h/h2 :Billing {:class \"mb-large\"}]\n          [divider/main]\n          [stripe-link (:stripe_customer_portal_url @orgs-response)]])])))\n\n(defn main []\n  (let [orgs-response (r/atom nil)\n        user (rf/subscribe [::subs/user])]\n    (runops-api/request {:method \"GET\"\n                         :uri \"/v1/orgs\"\n                         :on-success (fn [res]\n                                       (reset! orgs-response res))\n                         :on-failure #(println \"couldn't get admin resources\")})\n    (fn []\n      (let [user-groups (:groups @user)\n            admin? (some #(= \"admin\" %) user-groups)]\n        [:div.mb-large\n         [h/h1 :Settings {:class \"mb-large\"}]\n         [:div\n          [divider/main]]\n         [personal-settings]\n         (when admin? [org-settings])]))))\n"]}