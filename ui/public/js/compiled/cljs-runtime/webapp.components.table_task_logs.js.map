{"version":3,"sources":["webapp/components/table_task_logs.cljs"],"mappings":";;;AAIA,yCAAA,zCAAMA,0FACHC,KAAKC;AADR,AAEE,IAAMC,YAAU,uCAAA,vCAACC;IACXC,iBAAe,AAACC,oDAAY,WAAKC,IAAIC;AAAT,AAAA,kDAAA,4DAAA,NAAwBA,+DAAcD;GAAMN;AAD9E,AAEE,AAACQ,0CAAgB;AAAA,AACE,CAAM,AAAQ,AAAWN,yBAAY,KAAKO,uEAAS,AAAWP,kBAAW,qBAAA,2CAAA,0DAAA,1HAACQ,qHAAeT,gEAAcG;;AACvGO;;;AAJrB,0FAAA,mDAAA,2CAAA,wDAAA,4BAAA,mDAOcT","names":["webapp.components.table-task-logs/main","head","body","reference","js/module$node_modules$react$index.useRef","head-formatted","cljs.core.map_indexed","idx","value","js/module$node_modules$react$index.useEffect","js/module$node_modules$$datagridxl$datagridxl2$datagridxl$datagridxl2_umd","cljs.core/clj->js","js/undefined"],"sourcesContent":["(ns webapp.components.table-task-logs\n  (:require [\"@datagridxl/datagridxl2\" :as DataGrid]\n            [\"react\" :as react]))\n\n(defn main\n  [head body]\n  (let [reference (react/useRef nil)\n        head-formatted (map-indexed (fn [idx value] {:title value :source idx}) head)]\n    (react/useEffect (fn []\n                       (set! (.-grid (.-current reference)) (new DataGrid (.-current reference) (clj->js {:data body :columns head-formatted})))\n                       js/undefined))\n\n    [:div {:class \"flex flex-col w-full h-72\"\n           :ref reference}]))\n"]}