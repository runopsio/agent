{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$thrift.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA2EtHD,MAAOC,CAAAA,OAAP,CAlEAC,QAAe,CAACC,IAAD,CAAO,CACpB,MAAMC,MAAQ,4CAAA,CAAA,KAAA,CAAA,GAAA,CA0Bd,OAAO,CACLC,KAAM,QADD,CAELC,SAAU,CACRC,QAnBaC,kGAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAkBL,CAERC,KAAML,KAFE,CAGRM,QAAS,YAHD,CAFL,CAOLC,SAAU,CACRR,IAAKS,CAAAA,iBADG,CAERT,IAAKU,CAAAA,WAFG,CAGRV,IAAKW,CAAAA,mBAHG,CAIRX,IAAKY,CAAAA,oBAJG,CAKR,CACEC,UAAW,OADb;AAEEC,cAAe,+BAFjB,CAGEC,IAAK,IAHP,CAIEC,QAAS,IAJX,CAKER,SAAU,CACRR,IAAKiB,CAAAA,OAAL,CAAajB,IAAKkB,CAAAA,UAAlB,CAA8B,CAE5BC,OAAQ,CACNC,eAAgB,CAAA,CADV,CAENC,WAAY,CAAA,CAFN,CAFoB,CAA9B,CADQ,CALZ,CALQ,CAoBR,CACEC,MAAO,2BADT,CAEEnB,SAAU,CACRG,KAAM,CAAC,GAAGL,KAAJ,CAAW,KAAX,CAAkB,MAAlB,CAA0B,KAA1B,CADE,CAFZ,CAKEc,IAAK,MALP,CAMEP,SAAU,CAAE,MAAF,CANZ,CApBQ,CAPL,CA3Ba,CATgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/thrift.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$thrift\"] = function(global,require,module,exports) {\n/*\nLanguage: Thrift\nAuthor: Oleg Efimov <efimovov@gmail.com>\nDescription: Thrift message definition format\nWebsite: https://thrift.apache.org\nCategory: protocols\n*/\n\nfunction thrift(hljs) {\n  const TYPES = [\n    \"bool\",\n    \"byte\",\n    \"i16\",\n    \"i32\",\n    \"i64\",\n    \"double\",\n    \"string\",\n    \"binary\"\n  ];\n  const KEYWORDS = [\n    \"namespace\",\n    \"const\",\n    \"typedef\",\n    \"struct\",\n    \"enum\",\n    \"service\",\n    \"exception\",\n    \"void\",\n    \"oneway\",\n    \"set\",\n    \"list\",\n    \"map\",\n    \"required\",\n    \"optional\"\n  ];\n  return {\n    name: 'Thrift',\n    keywords: {\n      keyword: KEYWORDS,\n      type: TYPES,\n      literal: 'true false'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'struct enum service exception',\n        end: /\\{/,\n        illegal: /\\n/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            // hack: eating everything after the first title\n            starts: {\n              endsWithParent: true,\n              excludeEnd: true\n            }\n          })\n        ]\n      },\n      {\n        begin: '\\\\b(set|list|map)\\\\s*<',\n        keywords: {\n          type: [...TYPES, \"set\", \"list\", \"map\"]\n        },\n        end: '>',\n        contains: [ 'self' ]\n      }\n    ]\n  };\n}\n\nmodule.exports = thrift;\n\n};"],
"names":["shadow$provide","global","require","module","exports","thrift","hljs","TYPES","name","keywords","keyword","KEYWORDS","type","literal","contains","QUOTE_STRING_MODE","NUMBER_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","className","beginKeywords","end","illegal","inherit","TITLE_MODE","starts","endsWithParent","excludeEnd","begin"]
}
