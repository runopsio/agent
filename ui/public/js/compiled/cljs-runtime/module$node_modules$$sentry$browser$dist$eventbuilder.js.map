{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$eventbuilder.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/eventbuilder.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$eventbuilder\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = require(\"@sentry/types\");\nvar utils_1 = require(\"@sentry/utils\");\nvar parsers_1 = require(\"./parsers\");\nvar tracekit_1 = require(\"./tracekit\");\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nfunction eventFromException(options, exception, hint) {\n    var syntheticException = (hint && hint.syntheticException) || undefined;\n    var event = eventFromUnknownInput(exception, syntheticException, {\n        attachStacktrace: options.attachStacktrace,\n    });\n    utils_1.addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n    event.level = types_1.Severity.Error;\n    if (hint && hint.event_id) {\n        event.event_id = hint.event_id;\n    }\n    return utils_1.SyncPromise.resolve(event);\n}\nexports.eventFromException = eventFromException;\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(options, message, level, hint) {\n    if (level === void 0) { level = types_1.Severity.Info; }\n    var syntheticException = (hint && hint.syntheticException) || undefined;\n    var event = eventFromString(message, syntheticException, {\n        attachStacktrace: options.attachStacktrace,\n    });\n    event.level = level;\n    if (hint && hint.event_id) {\n        event.event_id = hint.event_id;\n    }\n    return utils_1.SyncPromise.resolve(event);\n}\nexports.eventFromMessage = eventFromMessage;\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(exception, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event;\n    if (utils_1.isErrorEvent(exception) && exception.error) {\n        // If it is an ErrorEvent with `error` property, extract it to get actual Error\n        var errorEvent = exception;\n        // eslint-disable-next-line no-param-reassign\n        exception = errorEvent.error;\n        event = parsers_1.eventFromStacktrace(tracekit_1.computeStackTrace(exception));\n        return event;\n    }\n    // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n    // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n    // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n    //\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n    // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n    if (utils_1.isDOMError(exception) || utils_1.isDOMException(exception)) {\n        var domException = exception;\n        if ('stack' in exception) {\n            event = parsers_1.eventFromStacktrace(tracekit_1.computeStackTrace(exception));\n        }\n        else {\n            var name_1 = domException.name || (utils_1.isDOMError(domException) ? 'DOMError' : 'DOMException');\n            var message = domException.message ? name_1 + \": \" + domException.message : name_1;\n            event = eventFromString(message, syntheticException, options);\n            utils_1.addExceptionTypeValue(event, message);\n        }\n        if ('code' in domException) {\n            event.tags = tslib_1.__assign(tslib_1.__assign({}, event.tags), { 'DOMException.code': \"\" + domException.code });\n        }\n        return event;\n    }\n    if (utils_1.isError(exception)) {\n        // we have a real Error object, do nothing\n        event = parsers_1.eventFromStacktrace(tracekit_1.computeStackTrace(exception));\n        return event;\n    }\n    if (utils_1.isPlainObject(exception) || utils_1.isEvent(exception)) {\n        // If it is plain Object or Event, serialize it manually and extract options\n        // This will allow us to group events based on top-level keys\n        // which is much better than creating new group when any key/value change\n        var objectException = exception;\n        event = parsers_1.eventFromPlainObject(objectException, syntheticException, options.rejection);\n        utils_1.addExceptionMechanism(event, {\n            synthetic: true,\n        });\n        return event;\n    }\n    // If none of previous checks were valid, then it means that it's not:\n    // - an instance of DOMError\n    // - an instance of DOMException\n    // - an instance of Event\n    // - an instance of Error\n    // - a valid ErrorEvent (one with an error property)\n    // - a plain Object\n    //\n    // So bail out and capture it as a simple message:\n    event = eventFromString(exception, syntheticException, options);\n    utils_1.addExceptionTypeValue(event, \"\" + exception, undefined);\n    utils_1.addExceptionMechanism(event, {\n        synthetic: true,\n    });\n    return event;\n}\nexports.eventFromUnknownInput = eventFromUnknownInput;\n/**\n * @hidden\n */\nfunction eventFromString(input, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event = {\n        message: input,\n    };\n    if (options.attachStacktrace && syntheticException) {\n        var stacktrace = tracekit_1.computeStackTrace(syntheticException);\n        var frames_1 = parsers_1.prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\nexports.eventFromString = eventFromString;\n//# sourceMappingURL=eventbuilder.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","eventFromUnknownInput","exception","syntheticException","options","utils_1","isErrorEvent","error","event","parsers_1","eventFromStacktrace","tracekit_1","computeStackTrace","isDOMError","isDOMException","domException","name_1","name","message","eventFromString","addExceptionTypeValue","tags","tslib_1","__assign","code","isError","isPlainObject","isEvent","eventFromPlainObject","rejection","addExceptionMechanism","synthetic","undefined","input","attachStacktrace","stacktrace","frames_1","prepareFramesForEvent","stack","frames","Object","defineProperty","value","types_1","eventFromException","hint","level","Severity","Error","event_id","SyncPromise","resolve","eventFromMessage","Info"]
}
