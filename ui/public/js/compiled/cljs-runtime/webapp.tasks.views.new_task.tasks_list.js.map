{"version":3,"sources":["webapp/tasks/views/new_task/tasks_list.cljs"],"mappings":"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","names":["webapp.tasks.views.new-task.tasks-list/open-modal","task","_","re-frame.core/dispatch","webapp.tasks.views.new-task.task-details/main","js/webapp","js/webapp.tasks","js/webapp.tasks.views","js/webapp.tasks.views.new-task","js/webapp.tasks.views.new-task.tasks-list","js/webapp.tasks.views.new-task.tasks-list.refresh-tasks","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__31641","cljs.core/MultiFn","cljs.core.symbol","webapp.tasks.views.new-task.tasks-list/refresh-tasks","cljs.core/identity","webapp.tasks.views.new-task.tasks-list/main","tasks","re_frame.core.subscribe","cljs.core/deref","iter__4652__auto__","s__31643","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__31645","cljs.core/chunk-buffer","i__31644","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__31642","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","webapp.formatters/time-ago","cljs.core/chunk-first"],"sourcesContent":["(ns webapp.tasks.views.new-task.tasks-list\n  (:require\n   [re-frame.core :as rf]\n   [webapp.subs :as subs]\n   [webapp.formatters :as formatters]\n   [webapp.tasks.views.new-task.task-details :as task-details]\n   ))\n\n(defn- open-modal [task]\n  (let [_  (rf/dispatch [:get-task-by-id task])\n        _ (rf/dispatch [:open-modal\n                        [task-details/main] :large])]))\n\n(defmulti ^:private refresh-tasks identity)\n(defmethod ^:private refresh-tasks :loading [_]\n  [:div.flex.text-xs.flex-grow.items-center.justify-end\n   [:figure.w-4\n    [:img.animate-spin {:src \"/icons/icon-refresh.svg\"}]]\n   [:span [:i \"loading\"] ]])\n(defmethod ^:private refresh-tasks :default [_]\n  [:div.flex.text-xs.cursor-pointer.flex-grow.items-center.justify-end\n   {:on-click #(rf/dispatch [:get-tasks])}\n   [:figure.w-4\n    [:img {:src \"/icons/icon-refresh-blue.svg\"}]]\n   [:span.text-blue-500 \"refresh\" ]])\n\n(defn main []\n  (let [tasks (rf/subscribe [::subs/tasks])\n        _ (rf/dispatch [:get-tasks])]\n    (fn []\n      [:div.bg-white.pb-regular.mb-x-large\n       [:header.flex.mb-small.px-small\n        [:div.font-bold \"History\"]\n        [refresh-tasks (:status @tasks)]]\n       [:section\n        (for [task (:results @tasks)]\n          ^{:key (:id task)}\n          [:div.border-b.hover:bg-gray-100.p-small.cursor-pointer\n           {:on-click #(open-modal task)}\n           [:header.flex\n            [:div.text-xs.text-gray-500 (:id task)]\n            [:div.text-xs.text-gray-900.truncate.overflow-hidden.flex-grow.text-right.italic\n             (:status task)]]\n           [:div {:class \"text-xs text-gray-500\"}\n            (formatters/time-ago (:created task))]\n           [:section\n            {:class \"py-small\"}\n            [:div\n             {:class \"text-xs text-gray-900 font-bold truncate overflow-hidden\"}\n             (:target task)]\n            [:div\n             {:class \"text-xs text-gray-500 font-light truncate overflow-hidden\"}\n             (:script task)]]])]\n       [:footer.px-small.py-regular.text-sm.text-blue-500.cursor-pointer\n        \"Load more\"]])))\n"]}