{"version":3,"sources":["webapp/targets/views/main.cljs"],"mappings":"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","names":["js/webapp","js/webapp.targets","js/webapp.targets.views","js/webapp.targets.views.main","js/webapp.targets.views.main.item-state","webapp.targets.views.main/item-state","reagent.core.atom","webapp.targets.views.main/toggle-dropdown-status","item","cljs.core.swap_BANG_","cljs.core/assoc-in","cljs.core/not","cljs.core/deref","cljs.core.get_in","webapp.targets.views.main/confirm-target-deactivation","target","webapp.components.headings/h2","webapp.components.divider/main","webapp.components.button/secondary","re-frame.core/dispatch","webapp.components.button/primary","webapp.targets.views.main/deactivate","webapp.targets.views.main/item-dropdown","webapp.targets.views.main/list-item","feature-flags","re_frame.core.subscribe","review-type","cljs.core._EQ_","webapp.components.table/row","webapp.components.typography/small","webapp.formatters/list-to-comma-string","webapp.components.popover/right","webapp.targets.views.main/targets-list","targets","webapp.components.table/header","webapp.components.table/rows","cljs.core.doall","cljs.core.map","webapp.targets.views.main/section-header","cljs.core/count","webapp.targets.views.target-form-modal/form","webapp.targets.views.main/next-page","webapp.targets.views.main/panel","targets-next-page","cljs.core/empty?"],"sourcesContent":["(ns webapp.targets.views.main\n  (:require [re-frame.core :as rf]\n            [reagent.core :as r]\n            [webapp.components.typography :as typo]\n            [webapp.components.popover :as popover]\n            [webapp.targets.events :as events]\n            [webapp.subs :as subs]\n            [webapp.formatters :as f]\n            [webapp.components.headings :as headings]\n            [webapp.components.divider :as divider]\n            [webapp.components.button :as button]\n            [webapp.components.table :as table]\n            [webapp.targets.views.target-form-modal :as target-form-modal]))\n\n(defonce item-state (r/atom {}))\n\n;; TODO find a better place to this kind of logic to be placed\n(defn toggle-dropdown-status [item]\n  (swap! item-state assoc-in\n         [(:name item) :dropdown-status]\n         (not (get-in @item-state [(:name item) :dropdown-status]))))\n\n(defn confirm-target-deactivation\n  [target]\n  [:div\n   [headings/h2 \"Target deactivation\" {:class \"mb-regular\"}]\n   (divider/main)\n   [:p.mb-regular\n    \"Do you really want to deactivate \"\n    [:b (:name target)]\n    \" target?\"]\n   (divider/main)\n   [:div.grid.grid-cols-2.gap-regular\n    (button/secondary {:text \"Cancel\"\n                       :on-click #(rf/dispatch [:close-modal])})\n    (button/primary {:text \"Confirm deactivation\"\n                     :on-click #(rf/dispatch\n                                 [::events/deactivate-target (:name target)])})]])\n\n(defn deactivate [item]\n  (toggle-dropdown-status item)\n  (rf/dispatch [:open-modal (confirm-target-deactivation item)]))\n\n(defn item-dropdown [item]\n  [:ul.text-right\n   [:li.border-b.py-small.px-regular\n    [:a.text-sm\n     {:href (str \"/targets/\" (:name item))}\n     \"Edit\"]]\n   [:li.py-small.px-regular\n    [:a.text-red-600.text-sm\n     {:href \"#\"\n      :on-click #(deactivate item)}\n     \"Deactivate\"]]])\n\n(defn list-item\n  [item]\n  (let [feature-flags @(rf/subscribe [::subs/feature-flags])\n        review-type (if (= \"team\" (:review_type item)) \"groups\" (:review_type item))]\n    (table/row\n     [:div.grid.grid-cols-12\n      [:div.col-span-3\n       [:small.font-semibold.text-gray-700.block (:name item)]\n       [:small.block.text-gray-500 (:email item)]]\n      (typo/small (:type item) {:class \"text-gray-500 col-span-1\"})\n      (typo/small review-type {:class \"text-gray-500 col-span-1\"})\n      (typo/small (:reviewers item) {:class \"text-gray-500 col-span-2\"})\n      (typo/small\n       (f/list-to-comma-string\n        (if (:groups-flag feature-flags)\n          (:groups item)\n          (:roles item)))\n       {:class \"text-gray-500 col-span-1\"})\n      (typo/small (:runner_provider item) {:class \"text-gray-500 col-span-2\"})\n      (typo/small (:tags item) {:class \"text-gray-500 col-span-1\"})\n      [:div.justify-self-end.relative\n       [:figure.w-5.cursor-pointer\n        {:on-click #(swap! item-state assoc-in\n                           [(:name item) :dropdown-status]\n                           (not (get-in @item-state [(:name item) :dropdown-status])))}\n        [:img {:src \"/icons/icon-dots-vertical.svg\"}]]\n       (popover/right {:open (get-in @item-state [(:name item) :dropdown-status])\n                       :component (item-dropdown item)\n                       :on-click-outside #(swap! item-state assoc-in\n                                                 [(:name item) :dropdown-status]\n                                                 false)})]]\n     {:key (:name item)})))\n\n(defn targets-list\n  [targets]\n  (let [feature-flags @(rf/subscribe [::subs/feature-flags])]\n    [:div\n     (table/header\n      [:div.grid.grid-cols-12\n       [:small.col-span-3 \"Name\"]\n       [:small.col-span-1 \"Type\"]\n       [:small.col-span-1 \"Review\"]\n       [:small.col-span-2 \"Reviewers\"]\n       [:small.col-span-1 (if (:groups-flag feature-flags)\n                            \"Groups\" \"Roles\")]\n       [:small.col-span-2 \"Provider\"]\n       [:small.col-span-1 \"Tags\"]]\n      nil)\n\n     (table/rows (doall (map list-item targets)))]))\n\n(defn section-header\n  [targets]\n  [:div.grid.grid-cols-4.items-center.mb-large\n   [headings/h2 (str (count targets) \" Target\" (if (< (count targets) 2) \"\" \"s\"))]\n   [:div.search-bar.col-span-2]\n   [:div\n    (button/primary {:text \"Create target\"\n                     :on-click #(rf/dispatch [:open-modal [target-form-modal/form nil :create]])})]])\n\n(defn next-page []\n  [:div.flex.pt-regular.justify-center\n   [:div.w-48\n    (button/primary {:text \"Load more\"\n                     :on-click #(rf/dispatch [::events/get-next-page])})]])\n\n(defn panel []\n  (let [targets @(rf/subscribe [::subs/targets])\n        targets-next-page @(rf/subscribe [::subs/targets-next-page])]\n    (rf/dispatch [::events/get-targets])\n    [:div\n     (section-header targets)\n     (targets-list targets)\n     (when-not (empty? (:results targets-next-page)) (next-page))]))\n"]}