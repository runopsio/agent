{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$request.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/@sentry/tracing/dist/browser/request.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$request\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@sentry/utils\");\nvar spanstatus_1 = require(\"../spanstatus\");\nvar utils_2 = require(\"../utils\");\nexports.DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\nexports.defaultRequestInstrumentationOptions = {\n    traceFetch: true,\n    traceXHR: true,\n    tracingOrigins: exports.DEFAULT_TRACING_ORIGINS,\n};\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    var _a = tslib_1.__assign(tslib_1.__assign({}, exports.defaultRequestInstrumentationOptions), _options), traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n    // We should cache url -> decision so that we don't have to compute\n    // regexp everytime we create a request.\n    var urlMap = {};\n    var defaultShouldCreateSpan = function (url) {\n        if (urlMap[url]) {\n            return urlMap[url];\n        }\n        var origins = tracingOrigins;\n        urlMap[url] =\n            origins.some(function (origin) { return utils_1.isMatchingPattern(url, origin); }) &&\n                !utils_1.isMatchingPattern(url, 'sentry_key');\n        return urlMap[url];\n    };\n    // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n    // That's why we filter out already unwanted Spans from tracingOrigins\n    var shouldCreateSpan = defaultShouldCreateSpan;\n    if (typeof shouldCreateSpanForRequest === 'function') {\n        shouldCreateSpan = function (url) {\n            return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n        };\n    }\n    var spans = {};\n    if (traceFetch) {\n        utils_1.addInstrumentationHandler({\n            callback: function (handlerData) {\n                fetchCallback(handlerData, shouldCreateSpan, spans);\n            },\n            type: 'fetch',\n        });\n    }\n    if (traceXHR) {\n        utils_1.addInstrumentationHandler({\n            callback: function (handlerData) {\n                xhrCallback(handlerData, shouldCreateSpan, spans);\n            },\n            type: 'xhr',\n        });\n    }\n}\nexports.instrumentOutgoingRequests = instrumentOutgoingRequests;\n/**\n * Create and track fetch request spans\n */\nfunction fetchCallback(handlerData, shouldCreateSpan, spans) {\n    if (!utils_2.hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n        return;\n    }\n    if (handlerData.endTimestamp && handlerData.fetchData.__span) {\n        var span = spans[handlerData.fetchData.__span];\n        if (span) {\n            if (handlerData.response) {\n                // TODO (kmclb) remove this once types PR goes through\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                span.setHttpStatus(handlerData.response.status);\n            }\n            else if (handlerData.error) {\n                span.setStatus(spanstatus_1.SpanStatus.InternalError);\n            }\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[handlerData.fetchData.__span];\n        }\n        return;\n    }\n    var activeTransaction = utils_2.getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: tslib_1.__assign(tslib_1.__assign({}, handlerData.fetchData), { type: 'fetch' }),\n            description: handlerData.fetchData.method + \" \" + handlerData.fetchData.url,\n            op: 'http.client',\n        });\n        handlerData.fetchData.__span = span.spanId;\n        spans[span.spanId] = span;\n        var request = (handlerData.args[0] = handlerData.args[0]);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var options = (handlerData.args[1] = handlerData.args[1] || {});\n        var headers = options.headers;\n        if (utils_1.isInstanceOf(request, Request)) {\n            headers = request.headers;\n        }\n        if (headers) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (typeof headers.append === 'function') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                headers.append('sentry-trace', span.toTraceparent());\n            }\n            else if (Array.isArray(headers)) {\n                headers = tslib_1.__spread(headers, [['sentry-trace', span.toTraceparent()]]);\n            }\n            else {\n                headers = tslib_1.__assign(tslib_1.__assign({}, headers), { 'sentry-trace': span.toTraceparent() });\n            }\n        }\n        else {\n            headers = { 'sentry-trace': span.toTraceparent() };\n        }\n        options.headers = headers;\n    }\n}\nexports.fetchCallback = fetchCallback;\n/**\n * Create and track xhr request spans\n */\nfunction xhrCallback(handlerData, shouldCreateSpan, spans) {\n    var _a, _b;\n    if (!utils_2.hasTracingEnabled() || ((_a = handlerData.xhr) === null || _a === void 0 ? void 0 : _a.__sentry_own_request__) ||\n        !(((_b = handlerData.xhr) === null || _b === void 0 ? void 0 : _b.__sentry_xhr__) && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))) {\n        return;\n    }\n    var xhr = handlerData.xhr.__sentry_xhr__;\n    // check first if the request has finished and is tracked by an existing span which should now end\n    if (handlerData.endTimestamp && handlerData.xhr.__sentry_xhr_span_id__) {\n        var span = spans[handlerData.xhr.__sentry_xhr_span_id__];\n        if (span) {\n            span.setHttpStatus(xhr.status_code);\n            span.finish();\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete spans[handlerData.xhr.__sentry_xhr_span_id__];\n        }\n        return;\n    }\n    // if not, create a new span to track it\n    var activeTransaction = utils_2.getActiveTransaction();\n    if (activeTransaction) {\n        var span = activeTransaction.startChild({\n            data: tslib_1.__assign(tslib_1.__assign({}, xhr.data), { type: 'xhr', method: xhr.method, url: xhr.url }),\n            description: xhr.method + \" \" + xhr.url,\n            op: 'http.client',\n        });\n        handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n        spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n        if (handlerData.xhr.setRequestHeader) {\n            try {\n                handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n            }\n            catch (_) {\n                // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n            }\n        }\n    }\n}\nexports.xhrCallback = xhrCallback;\n//# sourceMappingURL=request.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","fetchCallback","handlerData","shouldCreateSpan","spans","utils_2","hasTracingEnabled","fetchData","url","endTimestamp","__span","span","response","setHttpStatus","status","error","setStatus","spanstatus_1","SpanStatus","InternalError","finish","activeTransaction","getActiveTransaction","startChild","data","tslib_1","__assign","type","description","method","op","spanId","request","args","options","headers","utils_1","isInstanceOf","Request","append","toTraceparent","Array","isArray","__spread","xhrCallback","_a","_b","xhr","__sentry_own_request__","__sentry_xhr__","__sentry_xhr_span_id__","status_code","setRequestHeader","_","Object","defineProperty","value","DEFAULT_TRACING_ORIGINS","defaultRequestInstrumentationOptions","traceFetch","traceXHR","tracingOrigins","instrumentOutgoingRequests","_options","shouldCreateSpanForRequest","urlMap","defaultShouldCreateSpan","some","origin","isMatchingPattern","addInstrumentationHandler","callback"]
}
