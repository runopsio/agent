shadow$provide.module$node_modules$$sentry$tracing$dist$integrations$node$mongo=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),utils_1=require("module$node_modules$$sentry$utils$dist$index"),OPERATIONS="aggregate bulkWrite countDocuments createIndex createIndexes deleteMany deleteOne distinct drop dropIndex dropIndexes estimatedDocumentCount find findOne findOneAndDelete findOneAndReplace findOneAndUpdate indexes indexExists indexInformation initializeOrderedBulkOp insertMany insertOne isCapped mapReduce options parallelCollectionScan rename replaceOne stats updateMany updateOne".split(" "),
OPERATION_SIGNATURES={bulkWrite:["operations"],countDocuments:["query"],createIndex:["fieldOrSpec"],createIndexes:["indexSpecs"],deleteMany:["filter"],deleteOne:["filter"],distinct:["key","query"],dropIndex:["indexName"],find:["query"],findOne:["query"],findOneAndDelete:["filter"],findOneAndReplace:["filter","replacement"],findOneAndUpdate:["filter","update"],indexExists:["indexes"],insertMany:["docs"],insertOne:["doc"],mapReduce:["map","reduce"],rename:["newName"],replaceOne:["filter","doc"],updateMany:["filter",
"update"],updateOne:["filter","update"]};global=function(){function Mongo(options){void 0===options&&(options={});this.name=Mongo.id;this._operations=Array.isArray(options.operations)?options.operations:OPERATIONS;this._describeOperations="describeOperations"in options?options.describeOperations:!0;this._useMongoose=!!options.useMongoose}Mongo.prototype.setupOnce=function(_,getCurrentHub){_=this._useMongoose?"mongoose":"mongodb";var pkg=utils_1.loadModule(_);pkg?this._instrumentOperations(pkg.Collection,
this._operations,getCurrentHub):utils_1.logger.error("Mongo Integration was unable to require `"+_+"` package.")};Mongo.prototype._instrumentOperations=function(collection,operations,getCurrentHub){var _this=this;operations.forEach(function(operation){return _this._patchOperation(collection,operation,getCurrentHub)})};Mongo.prototype._patchOperation=function(collection,operation,getCurrentHub){if(operation in collection.prototype){var getSpanContext=this._getSpanContextFromOperationArguments.bind(this);
utils_1.fill(collection.prototype,operation,function(orig){return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var _a,lastArg=args[args.length-1];_i=null===(_a=getCurrentHub().getScope())||void 0===_a?void 0:_a.getSpan();if("function"!==typeof lastArg||"mapReduce"===operation&&2===args.length){var span_1=null===_i||void 0===_i?void 0:_i.startChild(getSpanContext(this,operation,args));args=orig.call.apply(orig,tslib_1.__spread([this],args));if(utils_1.isThenable(args))return args.then(function(res){null===
span_1||void 0===span_1?void 0:span_1.finish();return res});null===span_1||void 0===span_1?void 0:span_1.finish();return args}var span=null===_i||void 0===_i?void 0:_i.startChild(getSpanContext(this,operation,args.slice(0,-1)));return orig.call.apply(orig,tslib_1.__spread([this],args.slice(0,-1),[function(err,result){null===span||void 0===span?void 0:span.finish();lastArg(err,result)}]))}})}};Mongo.prototype._getSpanContextFromOperationArguments=function(collection,operation,args){collection={collectionName:collection.collectionName,
dbName:collection.dbName,namespace:collection.namespace};var spanContext={op:"db",description:operation,data:collection},signature=OPERATION_SIGNATURES[operation],shouldDescribe=Array.isArray(this._describeOperations)?this._describeOperations.includes(operation):this._describeOperations;if(!signature||!shouldDescribe)return spanContext;try{if("mapReduce"===operation){var _a=tslib_1.__read(args,2),map=_a[0],reduce=_a[1];collection[signature[0]]="string"===typeof map?map:map.name||"\x3canonymous\x3e";
collection[signature[1]]="string"===typeof reduce?reduce:reduce.name||"\x3canonymous\x3e"}else for(operation=0;operation<signature.length;operation++)collection[signature[operation]]=JSON.stringify(args[operation])}catch(_oO){}return spanContext};Mongo.id="Mongo";return Mongo}();exports.Mongo=global}
//# sourceMappingURL=module$node_modules$$sentry$tracing$dist$integrations$node$mongo.js.map
