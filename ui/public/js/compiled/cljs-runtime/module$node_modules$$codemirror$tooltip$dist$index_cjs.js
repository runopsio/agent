shadow$provide.module$node_modules$$codemirror$tooltip$dist$index_cjs=function(global,require,module,exports){function windowSpace(){return{top:0,left:0,bottom:innerHeight,right:innerWidth}}Object.defineProperty(exports,"__esModule",{value:!0});var view$jscomp$0=require("module$node_modules$$codemirror$view$dist$index_cjs"),state$jscomp$0=require("module$node_modules$$codemirror$state$dist$index_cjs");const ios="undefined"!=typeof navigator&&!/Edge\/(\d+)/.exec(navigator.userAgent)&&/Apple Computer/.test(navigator.vendor)&&
(/Mobile\/\w+/.test(navigator.userAgent)||2<navigator.maxTouchPoints);class TooltipViewManager{constructor(view,facet,createTooltipView){this.facet=facet;this.createTooltipView=createTooltipView;this.input=view.state.facet(facet);this.tooltips=this.input.filter(t=>t);this.tooltipViews=this.tooltips.map(createTooltipView)}update(update){let input=update.state.facet(this.facet),tooltips=input.filter(x=>x);if(input===this.input){for(var t$jscomp$0 of this.tooltipViews)t$jscomp$0.update&&t$jscomp$0.update(update);
return!1}t$jscomp$0=[];for(let i$jscomp$0=0;i$jscomp$0<tooltips.length;i$jscomp$0++){var tip=tooltips[i$jscomp$0];let known=-1;if(tip){for(let i=0;i<this.tooltips.length;i++){let other=this.tooltips[i];other&&other.create==tip.create&&(known=i)}0>known?t$jscomp$0[i$jscomp$0]=this.createTooltipView(tip):(tip=t$jscomp$0[i$jscomp$0]=this.tooltipViews[known],tip.update&&tip.update(update))}}for(let t of this.tooltipViews)0>t$jscomp$0.indexOf(t)&&t.dom.remove();this.input=input;this.tooltips=tooltips;
this.tooltipViews=t$jscomp$0;return!0}}const tooltipConfig=state$jscomp$0.Facet.define({combine:values=>{var _a,_b,_c;return{position:ios?"absolute":(null===(_a=values.find(conf=>conf.position))||void 0===_a?void 0:_a.position)||"fixed",parent:(null===(_b=values.find(conf=>conf.parent))||void 0===_b?void 0:_b.parent)||null,tooltipSpace:(null===(_c=values.find(conf=>conf.tooltipSpace))||void 0===_c?void 0:_c.tooltipSpace)||windowSpace}}}),tooltipPlugin=view$jscomp$0.ViewPlugin.fromClass(class{constructor(view){var _a;
this.view=view;this.inView=!0;this.lastTransaction=0;this.measureTimeout=-1;let config=view.state.facet(tooltipConfig);this.position=config.position;this.parent=config.parent;this.classes=view.themeClasses;this.createContainer();this.measureReq={read:this.readMeasure.bind(this),write:this.writeMeasure.bind(this),key:this};this.manager=new TooltipViewManager(view,showTooltip,t=>this.createTooltip(t));this.intersectionObserver="function"==typeof IntersectionObserver?new IntersectionObserver(entries=>
{Date.now()>this.lastTransaction-50&&0<entries.length&&1>entries[entries.length-1].intersectionRatio&&this.measureSoon()},{threshold:[1]}):null;this.observeIntersection();null===(_a=view.dom.ownerDocument.defaultView)||void 0===_a?void 0:_a.addEventListener("resize",this.measureSoon=this.measureSoon.bind(this));this.maybeMeasure()}createContainer(){this.parent?(this.container=document.createElement("div"),this.container.style.position="relative",this.container.className=this.view.themeClasses,this.parent.appendChild(this.container)):
this.container=this.view.dom}observeIntersection(){if(this.intersectionObserver){this.intersectionObserver.disconnect();for(let tooltip of this.manager.tooltipViews)this.intersectionObserver.observe(tooltip.dom)}}measureSoon(){0>this.measureTimeout&&(this.measureTimeout=setTimeout(()=>{this.measureTimeout=-1;this.maybeMeasure()},50))}update(update){update.transactions.length&&(this.lastTransaction=Date.now());var updated=this.manager.update(update);updated&&this.observeIntersection();updated=updated||
update.geometryChanged;update=update.state.facet(tooltipConfig);if(update.position!=this.position){this.position=update.position;for(let t of this.manager.tooltipViews)t.dom.style.position=this.position;updated=!0}if(update.parent!=this.parent){this.parent&&this.container.remove();this.parent=update.parent;this.createContainer();for(let t of this.manager.tooltipViews)this.container.appendChild(t.dom);updated=!0}else this.parent&&this.view.themeClasses!=this.classes&&(this.classes=this.container.className=
this.view.themeClasses);updated&&this.maybeMeasure()}createTooltip(tooltip){let tooltipView=tooltip.create(this.view);tooltipView.dom.classList.add("cm-tooltip");tooltip.arrow&&!tooltipView.dom.querySelector("cm-tooltip \x3e cm-tooltip-arrow")&&(tooltip=document.createElement("div"),tooltip.className="cm-tooltip-arrow",tooltipView.dom.appendChild(tooltip));tooltipView.dom.style.position=this.position;tooltipView.dom.style.top="-10000px";this.container.appendChild(tooltipView.dom);tooltipView.mount&&
tooltipView.mount(this.view);return tooltipView}destroy(){var _a,_b;null===(_a=this.view.dom.ownerDocument.defaultView)||void 0===_a?void 0:_a.removeEventListener("resize",this.measureSoon);for(let {dom}of this.manager.tooltipViews)dom.remove();null===(_b=this.intersectionObserver)||void 0===_b?void 0:_b.disconnect();clearTimeout(this.measureTimeout)}readMeasure(){let editor=this.view.dom.getBoundingClientRect();return{editor,parent:this.parent?this.container.getBoundingClientRect():editor,pos:this.manager.tooltips.map(t=>
this.view.coordsAtPos(t.pos)),size:this.manager.tooltipViews.map(({dom})=>dom.getBoundingClientRect()),space:this.view.state.facet(tooltipConfig).tooltipSpace(this.view)}}writeMeasure(measured){let {editor,space}=measured,others=[];for(let i=0;i<this.manager.tooltips.length;i++){var tooltip=this.manager.tooltips[i];let tView=this.manager.tooltipViews[i],{dom}=tView,pos=measured.pos[i],size=measured.size[i];if(!pos||pos.bottom<=Math.max(editor.top,space.top)||pos.top>=Math.min(editor.bottom,space.bottom)||
pos.right<=Math.max(editor.left,space.left)||pos.left>=Math.min(editor.right,space.right)){dom.style.top="-10000px";continue}let arrow=tooltip.arrow?tView.dom.querySelector(".cm-tooltip-arrow"):null,arrowHeight=arrow?7:0;var width=size.right-size.left;let height=size.bottom-size.top,offset=tView.offset||noOffset,ltr=this.view.textDirection==view$jscomp$0.Direction.LTR,left=size.width>space.right-space.left?ltr?space.left:space.right-size.width:ltr?Math.min(pos.left-(arrow?14:0)+offset.x,space.right-
width):Math.max(space.left,pos.left-width+(arrow?14:0)-offset.x),above=!!tooltip.above;!tooltip.strictSide&&(above?pos.top-(size.bottom-size.top)-offset.y<space.top:pos.bottom+(size.bottom-size.top)+offset.y>space.bottom)&&above==space.bottom-pos.bottom>pos.top-space.top&&(above=!above);tooltip=above?pos.top-height-arrowHeight-offset.y:pos.bottom+arrowHeight+offset.y;width=left+width;if(!0!==tView.overlap)for(let r of others)r.left<width&&r.right>left&&r.top<tooltip+height&&r.bottom>tooltip&&(tooltip=
above?r.top-height-2-arrowHeight:r.bottom+arrowHeight+2);"absolute"==this.position?(dom.style.top=tooltip-measured.parent.top+"px",dom.style.left=left-measured.parent.left+"px"):(dom.style.top=tooltip+"px",dom.style.left=left+"px");arrow&&(arrow.style.left=`${pos.left+(ltr?offset.x:-offset.x)-(left+14-7)}px`);!0!==tView.overlap&&others.push({left,top:tooltip,right:width,bottom:tooltip+height});dom.classList.toggle("cm-tooltip-above",above);dom.classList.toggle("cm-tooltip-below",!above);tView.positioned&&
tView.positioned()}}maybeMeasure(){if(this.manager.tooltips.length&&(this.view.inView&&this.view.requestMeasure(this.measureReq),this.inView!=this.view.inView&&(this.inView=this.view.inView,!this.inView)))for(let tv of this.manager.tooltipViews)tv.dom.style.top="-10000px"}},{eventHandlers:{scroll(){this.maybeMeasure()}}});global=view$jscomp$0.EditorView.baseTheme({".cm-tooltip":{zIndex:100},"\x26light .cm-tooltip":{border:"1px solid #bbb",backgroundColor:"#f5f5f5"},"\x26light .cm-tooltip-section:not(:first-child)":{borderTop:"1px solid #bbb"},
"\x26dark .cm-tooltip":{backgroundColor:"#333338",color:"white"},".cm-tooltip-arrow":{height:"7px",width:"14px",position:"absolute",zIndex:-1,overflow:"hidden","\x26:before, \x26:after":{content:"''",position:"absolute",width:0,height:0,borderLeft:"7px solid transparent",borderRight:"7px solid transparent"},".cm-tooltip-above \x26":{bottom:"-7px","\x26:before":{borderTop:"7px solid #bbb"},"\x26:after":{borderTop:"7px solid #f5f5f5",bottom:"1px"}},".cm-tooltip-below \x26":{top:"-7px","\x26:before":{borderBottom:"7px solid #bbb"},
"\x26:after":{borderBottom:"7px solid #f5f5f5",top:"1px"}}},"\x26dark .cm-tooltip .cm-tooltip-arrow":{"\x26:before":{borderTopColor:"#333338",borderBottomColor:"#333338"},"\x26:after":{borderTopColor:"transparent",borderBottomColor:"transparent"}}});const noOffset={x:0,y:0},showTooltip=state$jscomp$0.Facet.define({enables:[tooltipPlugin,global]}),showHoverTooltip=state$jscomp$0.Facet.define();class HoverTooltipHost{constructor(view){this.view=view;this.mounted=!1;this.dom=document.createElement("div");
this.dom.classList.add("cm-tooltip-hover");this.manager=new TooltipViewManager(view,showHoverTooltip,t=>this.createHostedView(t))}static create(view){return new HoverTooltipHost(view)}createHostedView(tooltip){tooltip=tooltip.create(this.view);tooltip.dom.classList.add("cm-tooltip-section");this.dom.appendChild(tooltip.dom);this.mounted&&tooltip.mount&&tooltip.mount(this.view);return tooltip}mount(view){for(let hostedView of this.manager.tooltipViews)hostedView.mount&&hostedView.mount(view);this.mounted=
!0}positioned(){for(let hostedView of this.manager.tooltipViews)hostedView.positioned&&hostedView.positioned()}update(update){this.manager.update(update)}}const showHoverTooltipHost=showTooltip.compute([showHoverTooltip],state=>{state=state.facet(showHoverTooltip).filter(t=>t);return 0===state.length?null:{pos:Math.min(...state.map(t=>t.pos)),end:Math.max(...state.filter(t=>null!=t.end).map(t=>t.end)),create:HoverTooltipHost.create,above:state[0].above,arrow:state.some(t=>t.arrow)}});class HoverPlugin{constructor(view,
source,field,setHover,hoverTime){this.view=view;this.source=source;this.field=field;this.setHover=setHover;this.hoverTime=hoverTime;this.restartTimeout=this.hoverTimeout=-1;this.pending=null;this.lastMove={x:0,y:0,target:view.dom,time:0};this.checkHover=this.checkHover.bind(this);view.dom.addEventListener("mouseleave",this.mouseleave=this.mouseleave.bind(this));view.dom.addEventListener("mousemove",this.mousemove=this.mousemove.bind(this))}update(){this.pending&&(this.pending=null,clearTimeout(this.restartTimeout),
this.restartTimeout=setTimeout(()=>this.startHover(),20))}get active(){return this.view.state.field(this.field)}checkHover(){this.hoverTimeout=-1;if(!this.active){var hovered=Date.now()-this.lastMove.time;hovered<this.hoverTime?this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime-hovered):this.startHover()}}startHover(){clearTimeout(this.restartTimeout);var {lastMove}=this;let pos=this.view.contentDOM.contains(lastMove.target)?this.view.posAtCoords(lastMove):null;if(null!=pos){var posCoords=
this.view.coordsAtPos(pos);if(!(null==posCoords||lastMove.y<posCoords.top||lastMove.y>posCoords.bottom||lastMove.x<posCoords.left-this.view.defaultCharacterWidth||lastMove.x>posCoords.right+this.view.defaultCharacterWidth)){var bidi=this.view.bidiSpans(this.view.state.doc.lineAt(pos)).find(s=>s.from<=pos&&s.to>=pos);bidi=bidi&&bidi.dir==view$jscomp$0.Direction.RTL?-1:1;lastMove=this.source(this.view,pos,lastMove.x<posCoords.left?-bidi:bidi);if(null===lastMove||void 0===lastMove?0:lastMove.then){let pending=
this.pending={pos};lastMove.then(result=>{this.pending==pending&&(this.pending=null,result&&this.view.dispatch({effects:this.setHover.of(result)}))},e=>view$jscomp$0.logException(this.view.state,e,"hover tooltip"))}else lastMove&&this.view.dispatch({effects:this.setHover.of(lastMove)})}}}mousemove(event){var _a;this.lastMove={x:event.clientX,y:event.clientY,target:event.target,time:Date.now()};0>this.hoverTimeout&&(this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime));var tooltip=this.active,
JSCompiler_temp;if(JSCompiler_temp=tooltip){a:{for(JSCompiler_temp=this.lastMove.target;JSCompiler_temp;JSCompiler_temp=JSCompiler_temp.parentNode)if(1==JSCompiler_temp.nodeType&&JSCompiler_temp.classList.contains("cm-tooltip")){JSCompiler_temp=!0;break a}JSCompiler_temp=!1}JSCompiler_temp=!JSCompiler_temp}if(JSCompiler_temp||this.pending){({pos:JSCompiler_temp}=tooltip||this.pending);var end=null!==(_a=null===tooltip||void 0===tooltip?void 0:tooltip.end)&&void 0!==_a?_a:JSCompiler_temp;if(JSCompiler_temp==
end)event=this.view.posAtCoords(this.lastMove)!=JSCompiler_temp;else{a:{tooltip=this.view;var from=JSCompiler_temp;_a=event.clientX;event=event.clientY;JSCompiler_temp=document.createRange();from=tooltip.domAtPos(from);tooltip=tooltip.domAtPos(end);JSCompiler_temp.setEnd(tooltip.node,tooltip.offset);JSCompiler_temp.setStart(from.node,from.offset);tooltip=JSCompiler_temp.getClientRects();JSCompiler_temp.detach();for(JSCompiler_temp=0;JSCompiler_temp<tooltip.length;JSCompiler_temp++)if(from=tooltip[JSCompiler_temp],
6>=Math.max(from.top-event,event-from.bottom,from.left-_a,_a-from.right)){event=!0;break a}event=!1}event=!event}event&&(this.view.dispatch({effects:this.setHover.of(null)}),this.pending=null)}}mouseleave(){clearTimeout(this.hoverTimeout);this.hoverTimeout=-1;this.active&&this.view.dispatch({effects:this.setHover.of(null)})}destroy(){clearTimeout(this.hoverTimeout);this.view.dom.removeEventListener("mouseleave",this.mouseleave);this.view.dom.removeEventListener("mousemove",this.mousemove)}}const closeHoverTooltipEffect=
state$jscomp$0.StateEffect.define();global=closeHoverTooltipEffect.of(null);exports.closeHoverTooltips=global;exports.getTooltip=function(view,tooltip){view=view.plugin(tooltipPlugin);if(!view)return null;tooltip=view.manager.tooltips.indexOf(tooltip);return 0>tooltip?null:view.manager.tooltipViews[tooltip]};exports.hasHoverTooltips=function(state){return state.facet(showHoverTooltip).some(x=>x)};exports.hoverTooltip=function(source,options={}){let setHover=state$jscomp$0.StateEffect.define(),hoverState=
state$jscomp$0.StateField.define({create(){return null},update(value,tr){if(value&&options.hideOnChange&&(tr.docChanged||tr.selection))return null;for(var effect of tr.effects){if(effect.is(setHover))return effect.value;if(effect.is(closeHoverTooltipEffect))return null}if(value&&tr.docChanged){effect=tr.changes.mapPos(value.pos,-1,state$jscomp$0.MapMode.TrackDel);if(null==effect)return null;let copy=Object.assign(Object.create(null),value);copy.pos=effect;null!=value.end&&(copy.end=tr.changes.mapPos(value.end));
return copy}return value},provide:f=>showHoverTooltip.from(f)}),hoverTime=options.hoverTime||600;return[hoverState,view$jscomp$0.ViewPlugin.define(view=>new HoverPlugin(view,source,hoverState,setHover,hoverTime)),showHoverTooltipHost]};exports.repositionTooltips=function(view){var _a;null===(_a=view.plugin(tooltipPlugin))||void 0===_a?void 0:_a.maybeMeasure()};exports.showTooltip=showTooltip;exports.tooltips=function(config={}){return tooltipConfig.of(config)}}
//# sourceMappingURL=module$node_modules$$codemirror$tooltip$dist$index_cjs.js.map
