{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$transaction.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@sentry/tracing/dist/transaction.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$transaction\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hub_1 = require(\"@sentry/hub\");\nvar types_1 = require(\"@sentry/types\");\nvar utils_1 = require(\"@sentry/utils\");\nvar span_1 = require(\"./span\");\n/** JSDoc */\nvar Transaction = /** @class */ (function (_super) {\n    tslib_1.__extends(Transaction, _super);\n    /**\n     * This constructor should never be called manually. Those instrumenting tracing should use\n     * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n     * @internal\n     * @hideconstructor\n     * @hidden\n     */\n    function Transaction(transactionContext, hub) {\n        var _this = _super.call(this, transactionContext) || this;\n        _this._measurements = {};\n        /**\n         * The reference to the current hub.\n         */\n        _this._hub = hub_1.getCurrentHub();\n        if (utils_1.isInstanceOf(hub, hub_1.Hub)) {\n            _this._hub = hub;\n        }\n        _this.name = transactionContext.name || '';\n        _this.metadata = transactionContext.metadata || {};\n        _this._trimEnd = transactionContext.trimEnd;\n        // this is because transactions are also spans, and spans have a transaction pointer\n        _this.transaction = _this;\n        return _this;\n    }\n    /**\n     * JSDoc\n     */\n    Transaction.prototype.setName = function (name) {\n        this.name = name;\n    };\n    /**\n     * Attaches SpanRecorder to the span itself\n     * @param maxlen maximum number of spans that can be recorded\n     */\n    Transaction.prototype.initSpanRecorder = function (maxlen) {\n        if (maxlen === void 0) { maxlen = 1000; }\n        if (!this.spanRecorder) {\n            this.spanRecorder = new span_1.SpanRecorder(maxlen);\n        }\n        this.spanRecorder.add(this);\n    };\n    /**\n     * Set observed measurements for this transaction.\n     * @hidden\n     */\n    Transaction.prototype.setMeasurements = function (measurements) {\n        this._measurements = tslib_1.__assign({}, measurements);\n    };\n    /**\n     * Set metadata for this transaction.\n     * @hidden\n     */\n    Transaction.prototype.setMetadata = function (newMetadata) {\n        this.metadata = tslib_1.__assign(tslib_1.__assign({}, this.metadata), newMetadata);\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.finish = function (endTimestamp) {\n        var _this = this;\n        var _a, _b, _c, _d, _e;\n        // This transaction is already finished, so we should not flush it again.\n        if (this.endTimestamp !== undefined) {\n            return undefined;\n        }\n        if (!this.name) {\n            utils_1.logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n            this.name = '<unlabeled transaction>';\n        }\n        // just sets the end timestamp\n        _super.prototype.finish.call(this, endTimestamp);\n        if (this.sampled !== true) {\n            // At this point if `sampled !== true` we want to discard the transaction.\n            utils_1.logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n            (_e = (_c = (_a = this._hub\n                .getClient()) === null || _a === void 0 ? void 0 : (_b = _a).getTransport) === null || _c === void 0 ? void 0 : (_d = _c.call(_b)).recordLostEvent) === null || _e === void 0 ? void 0 : _e.call(_d, types_1.Outcome.SampleRate, 'transaction');\n            return undefined;\n        }\n        var finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(function (s) { return s !== _this && s.endTimestamp; }) : [];\n        if (this._trimEnd && finishedSpans.length > 0) {\n            this.endTimestamp = finishedSpans.reduce(function (prev, current) {\n                if (prev.endTimestamp && current.endTimestamp) {\n                    return prev.endTimestamp > current.endTimestamp ? prev : current;\n                }\n                return prev;\n            }).endTimestamp;\n        }\n        var transaction = {\n            contexts: {\n                trace: this.getTraceContext(),\n            },\n            spans: finishedSpans,\n            start_timestamp: this.startTimestamp,\n            tags: this.tags,\n            timestamp: this.endTimestamp,\n            transaction: this.name,\n            type: 'transaction',\n            debug_meta: this.metadata,\n        };\n        var hasMeasurements = Object.keys(this._measurements).length > 0;\n        if (hasMeasurements) {\n            utils_1.logger.log('[Measurements] Adding measurements to transaction', JSON.stringify(this._measurements, undefined, 2));\n            transaction.measurements = this._measurements;\n        }\n        utils_1.logger.log(\"[Tracing] Finishing \" + this.op + \" transaction: \" + this.name + \".\");\n        return this._hub.captureEvent(transaction);\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.toContext = function () {\n        var spanContext = _super.prototype.toContext.call(this);\n        return utils_1.dropUndefinedKeys(tslib_1.__assign(tslib_1.__assign({}, spanContext), { name: this.name, trimEnd: this._trimEnd }));\n    };\n    /**\n     * @inheritDoc\n     */\n    Transaction.prototype.updateWithContext = function (transactionContext) {\n        var _a;\n        _super.prototype.updateWithContext.call(this, transactionContext);\n        this.name = (_a = transactionContext.name, (_a !== null && _a !== void 0 ? _a : ''));\n        this._trimEnd = transactionContext.trimEnd;\n        return this;\n    };\n    return Transaction;\n}(span_1.Span));\nexports.Transaction = Transaction;\n//# sourceMappingURL=transaction.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","hub_1","types_1","utils_1","span_1","Transaction","_super","transactionContext","hub","_this","call","_measurements","_hub","getCurrentHub","isInstanceOf","Hub","name","metadata","_trimEnd","trimEnd","transaction","__extends","prototype","setName","Transaction.prototype.setName","initSpanRecorder","Transaction.prototype.initSpanRecorder","maxlen","spanRecorder","SpanRecorder","add","setMeasurements","Transaction.prototype.setMeasurements","measurements","__assign","setMetadata","Transaction.prototype.setMetadata","newMetadata","finish","Transaction.prototype.finish","endTimestamp","_a","_b","_c","_d","_e","undefined","logger","warn","sampled","log","getClient","getTransport","recordLostEvent","Outcome","SampleRate","finishedSpans","spans","filter","s","length","reduce","prev","current","contexts","trace","getTraceContext","start_timestamp","startTimestamp","tags","timestamp","type","debug_meta","keys","JSON","stringify","op","captureEvent","toContext","Transaction.prototype.toContext","spanContext","dropUndefinedKeys","updateWithContext","Transaction.prototype.updateWithContext","Span"]
}
