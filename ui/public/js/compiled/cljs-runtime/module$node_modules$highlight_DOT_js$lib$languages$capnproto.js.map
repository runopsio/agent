{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$capnproto.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuGzHD,MAAOC,CAAAA,OAAP,CA7FAC,QAAkB,CAACC,IAAD,CAAO,CA4CvB,MAAO,CACLC,KAAM,aADD,CAELC,QAAS,CAAC,OAAD,CAFJ,CAGLC,SAAU,CACRC,QA/CaC,qGAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CA8CL,CAERC,SA7BcC,4HAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CA2BN,CAGRC,QAVaC,CACf,MADeA,CAEf,OAFeA,CAOL,CAHL,CAQLC,SAAU,CACRV,IAAKW,CAAAA,iBADG;AAERX,IAAKY,CAAAA,WAFG,CAGRZ,IAAKa,CAAAA,iBAHG,CAIR,CACEC,UAAW,MADb,CAEEC,MAAO,gBAFT,CAGEC,QAAS,IAHX,CAJQ,CASR,CACEF,UAAW,QADb,CAEEC,MAAO,QAFT,CATQ,CAaR,CACED,UAAW,OADb,CAEEG,cAAe,aAFjB,CAGEC,IAAK,IAHP,CAIEF,QAAS,IAJX,CAKEN,SAAU,CAACV,IAAKmB,CAAAA,OAAL,CAAanB,IAAKoB,CAAAA,UAAlB,CAA8B,CACvCC,OAAQ,CACNC,eAAgB,CAAA,CADV,CAENC,WAAY,CAAA,CAFN,CAD+B,CAA9B,CAAD,CALZ,CAbQ,CAyBR,CACET,UAAW,OADb,CAEEG,cAAe,WAFjB,CAGEC,IAAK,IAHP,CAIEF,QAAS,IAJX,CAKEN,SAAU,CAACV,IAAKmB,CAAAA,OAAL,CAAanB,IAAKoB,CAAAA,UAAlB,CAA8B,CACvCC,OAAQ,CACNC,eAAgB,CAAA,CADV,CAENC,WAAY,CAAA,CAFN,CAD+B,CAA9B,CAAD,CALZ,CAzBQ,CARL,CA5CgB,CAVgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/capnproto.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$capnproto\"] = function(global,require,module,exports) {\n/*\nLanguage: Cap\u2019n Proto\nAuthor: Oleg Efimov <efimovov@gmail.com>\nDescription: Cap\u2019n Proto message definition format\nWebsite: https://capnproto.org/capnp-tool.html\nCategory: protocols\n*/\n\n/** @type LanguageFn */\nfunction capnproto(hljs) {\n  const KEYWORDS = [\n    \"struct\",\n    \"enum\",\n    \"interface\",\n    \"union\",\n    \"group\",\n    \"import\",\n    \"using\",\n    \"const\",\n    \"annotation\",\n    \"extends\",\n    \"in\",\n    \"of\",\n    \"on\",\n    \"as\",\n    \"with\",\n    \"from\",\n    \"fixed\"\n  ];\n  const BUILT_INS = [\n    \"Void\",\n    \"Bool\",\n    \"Int8\",\n    \"Int16\",\n    \"Int32\",\n    \"Int64\",\n    \"UInt8\",\n    \"UInt16\",\n    \"UInt32\",\n    \"UInt64\",\n    \"Float32\",\n    \"Float64\",\n    \"Text\",\n    \"Data\",\n    \"AnyPointer\",\n    \"AnyStruct\",\n    \"Capability\",\n    \"List\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\"\n  ];\n  return {\n    name: 'Cap\u2019n Proto',\n    aliases: ['capnp'],\n    keywords: {\n      keyword: KEYWORDS,\n      built_in: BUILT_INS,\n      literal: LITERALS\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: /@0x[\\w\\d]{16};/,\n        illegal: /\\n/\n      },\n      {\n        className: 'symbol',\n        begin: /@\\d+\\b/\n      },\n      {\n        className: 'class',\n        beginKeywords: 'struct enum',\n        end: /\\{/,\n        illegal: /\\n/,\n        contains: [hljs.inherit(hljs.TITLE_MODE, {\n          starts: {\n            endsWithParent: true,\n            excludeEnd: true\n          } // hack: eating everything after the first title\n        })]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'interface',\n        end: /\\{/,\n        illegal: /\\n/,\n        contains: [hljs.inherit(hljs.TITLE_MODE, {\n          starts: {\n            endsWithParent: true,\n            excludeEnd: true\n          } // hack: eating everything after the first title\n        })]\n      }\n    ]\n  };\n}\n\nmodule.exports = capnproto;\n\n};"],
"names":["shadow$provide","global","require","module","exports","capnproto","hljs","name","aliases","keywords","keyword","KEYWORDS","built_in","BUILT_INS","literal","LITERALS","contains","QUOTE_STRING_MODE","NUMBER_MODE","HASH_COMMENT_MODE","className","begin","illegal","beginKeywords","end","inherit","TITLE_MODE","starts","endsWithParent","excludeEnd"]
}
