{
"version":3,
"file":"module$node_modules$$sentry$minimal$dist$index.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@sentry/minimal/dist/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$minimal$dist$index\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hub_1 = require(\"@sentry/hub\");\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = hub_1.getCurrentHub();\n    if (hub && hub[method]) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return hub[method].apply(hub, tslib_1.__spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction captureException(exception, captureContext) {\n    var syntheticException;\n    try {\n        throw new Error('Sentry syntheticException');\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n        captureContext: captureContext,\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\nexports.captureException = captureException;\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(message, captureContext) {\n    var syntheticException;\n    try {\n        throw new Error(message);\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    // This is necessary to provide explicit scopes upgrade, without changing the original\n    // arity of the `captureMessage(message, level)` method.\n    var level = typeof captureContext === 'string' ? captureContext : undefined;\n    var context = typeof captureContext !== 'string' ? { captureContext: captureContext } : undefined;\n    return callOnHub('captureMessage', message, level, tslib_1.__assign({ originalException: message, syntheticException: syntheticException }, context));\n}\nexports.captureMessage = captureMessage;\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\nexports.captureEvent = captureEvent;\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\nexports.configureScope = configureScope;\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\nexports.addBreadcrumb = addBreadcrumb;\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n    callOnHub('setContext', name, context);\n}\nexports.setContext = setContext;\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n    callOnHub('setExtras', extras);\n}\nexports.setExtras = setExtras;\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n    callOnHub('setTags', tags);\n}\nexports.setTags = setTags;\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n    callOnHub('setExtra', key, extra);\n}\nexports.setExtra = setExtra;\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n    callOnHub('setTag', key, value);\n}\nexports.setTag = setTag;\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n    callOnHub('setUser', user);\n}\nexports.setUser = setUser;\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n    callOnHub('withScope', callback);\n}\nexports.withScope = withScope;\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, tslib_1.__spread(['_invokeClient', method], args));\n}\nexports._callOnClient = _callOnClient;\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(context, customSamplingContext) {\n    return callOnHub('startTransaction', tslib_1.__assign({}, context), customSamplingContext);\n}\nexports.startTransaction = startTransaction;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","callOnHub","method","args","_i","arguments","length","hub","hub_1","getCurrentHub","apply","tslib_1","__spread","Error","Object","defineProperty","value","captureException","exception","captureContext","syntheticException","originalException","captureMessage","message","level","undefined","__assign","context","captureEvent","event","configureScope","callback","addBreadcrumb","breadcrumb","setContext","name","setExtras","extras","setTags","tags","setExtra","key","extra","setTag","setUser","user","withScope","_callOnClient","startTransaction","customSamplingContext"]
}
