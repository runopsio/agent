{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$tcl.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA6BnHC,QAASA,OAAM,CAAC,GAAGC,IAAJ,CAAU,CAEvB,MADeA,KAAKC,CAAAA,GAAL,CAAUC,CAAD,EAAO,CAlBH,CAAA,CAkBUA,CAnBtC,CACkB,QAAlB,GAAI,MAkBkCA,EAlBtC,CAkBsCA,CAlBtC,CAkBsCA,CAhB5BC,CAAAA,MAHV,CAAgB,IAmBe,OAAA,EAAA,CAAhB,CAA2BC,CAAAA,IAA3BC,CAAgC,EAAhCA,CADQ,CAoMzBR,MAAOC,CAAAA,OAAP,CAxLAQ,QAAY,CAACC,IAAD,CAAO,CACjB,MAAMC,UAAY,wBAAlB,CAEMC,OAAS,CACbC,UAAW,QADE,CAEbC,SAAU,CAACJ,IAAKK,CAAAA,kBAAN,CAA0BL,IAAKM,CAAAA,aAA/B,CAFG,CA8Hf,OAAO,CACLC,KAAM,KADD,CAELC,QAAS,CAAC,IAAD,CAFJ,CAGLC,SA5HeC,86BAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAyHV;AAILC,SAAU,CACRX,IAAKY,CAAAA,OAAL,CAAa,WAAb,CAA0B,GAA1B,CADQ,CAERZ,IAAKY,CAAAA,OAAL,CAAa,WAAb,CAA0B,GAA1B,CAFQ,CAGR,CACEC,cAAe,MADjB,CAEEC,IAAK,OAFP,CAGEC,WAAY,CAAA,CAHd,CAIEJ,SAAU,CACR,CACER,UAAW,OADb,CAEEa,MAAO,iDAFT,CAGEF,IAAK,cAHP,CAIEG,eAAgB,CAAA,CAJlB,CAKEF,WAAY,CAAA,CALd,CADQ,CAJZ,CAHQ,CAiBR,CACEZ,UAAW,UADb,CAEEC,SAAU,CACR,CACEY,MAAOxB,MAAA,CACL,IADK,CA7KVA,MAAA,CAAO,KAAP,CA+Kc0B,IA/Kd,CAAkB,IAAlB,CA6KU,CAGLjB,SAHK,CAIL,KAJK,CAKLA,SALK,CAML,IANK,CADT,CADQ,CAWR,CACEe,MAAO,0CADT,CAEEF,IAAK,KAFP,CAGEH,SAAU,CACRT,MADQ,CAHZ,CAXQ,CAFZ,CAjBQ,CAuCR,CACEC,UAAW,QADb,CAEEQ,SAAU,CAACX,IAAKmB,CAAAA,gBAAN,CAFZ,CAGEf,SAAU,CACRJ,IAAKoB,CAAAA,OAAL,CAAapB,IAAKqB,CAAAA,iBAAlB;AAAqC,CAACC,QAAS,IAAV,CAArC,CADQ,CAHZ,CAvCQ,CA8CRpB,MA9CQ,CAJL,CAjIU,CAzCgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/tcl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$tcl\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(?:', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Tcl\nDescription: Tcl is a very simple programming language.\nAuthor: Radek Liska <radekliska@gmail.com>\nWebsite: https://www.tcl.tk/about/language.html\n*/\n\nfunction tcl(hljs) {\n  const TCL_IDENT = /[a-zA-Z_][a-zA-Z0-9_]*/;\n\n  const NUMBER = {\n    className: 'number',\n    variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]\n  };\n\n  const KEYWORDS = [\n    \"after\",\n    \"append\",\n    \"apply\",\n    \"array\",\n    \"auto_execok\",\n    \"auto_import\",\n    \"auto_load\",\n    \"auto_mkindex\",\n    \"auto_mkindex_old\",\n    \"auto_qualify\",\n    \"auto_reset\",\n    \"bgerror\",\n    \"binary\",\n    \"break\",\n    \"catch\",\n    \"cd\",\n    \"chan\",\n    \"clock\",\n    \"close\",\n    \"concat\",\n    \"continue\",\n    \"dde\",\n    \"dict\",\n    \"encoding\",\n    \"eof\",\n    \"error\",\n    \"eval\",\n    \"exec\",\n    \"exit\",\n    \"expr\",\n    \"fblocked\",\n    \"fconfigure\",\n    \"fcopy\",\n    \"file\",\n    \"fileevent\",\n    \"filename\",\n    \"flush\",\n    \"for\",\n    \"foreach\",\n    \"format\",\n    \"gets\",\n    \"glob\",\n    \"global\",\n    \"history\",\n    \"http\",\n    \"if\",\n    \"incr\",\n    \"info\",\n    \"interp\",\n    \"join\",\n    \"lappend|10\",\n    \"lassign|10\",\n    \"lindex|10\",\n    \"linsert|10\",\n    \"list\",\n    \"llength|10\",\n    \"load\",\n    \"lrange|10\",\n    \"lrepeat|10\",\n    \"lreplace|10\",\n    \"lreverse|10\",\n    \"lsearch|10\",\n    \"lset|10\",\n    \"lsort|10\",\n    \"mathfunc\",\n    \"mathop\",\n    \"memory\",\n    \"msgcat\",\n    \"namespace\",\n    \"open\",\n    \"package\",\n    \"parray\",\n    \"pid\",\n    \"pkg::create\",\n    \"pkg_mkIndex\",\n    \"platform\",\n    \"platform::shell\",\n    \"proc\",\n    \"puts\",\n    \"pwd\",\n    \"read\",\n    \"refchan\",\n    \"regexp\",\n    \"registry\",\n    \"regsub|10\",\n    \"rename\",\n    \"return\",\n    \"safe\",\n    \"scan\",\n    \"seek\",\n    \"set\",\n    \"socket\",\n    \"source\",\n    \"split\",\n    \"string\",\n    \"subst\",\n    \"switch\",\n    \"tcl_endOfWord\",\n    \"tcl_findLibrary\",\n    \"tcl_startOfNextWord\",\n    \"tcl_startOfPreviousWord\",\n    \"tcl_wordBreakAfter\",\n    \"tcl_wordBreakBefore\",\n    \"tcltest\",\n    \"tclvars\",\n    \"tell\",\n    \"time\",\n    \"tm\",\n    \"trace\",\n    \"unknown\",\n    \"unload\",\n    \"unset\",\n    \"update\",\n    \"uplevel\",\n    \"upvar\",\n    \"variable\",\n    \"vwait\",\n    \"while\"\n  ];\n\n  return {\n    name: 'Tcl',\n    aliases: ['tk'],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(';[ \\\\t]*#', '$'),\n      hljs.COMMENT('^[ \\\\t]*#', '$'),\n      {\n        beginKeywords: 'proc',\n        end: '[\\\\{]',\n        excludeEnd: true,\n        contains: [\n          {\n            className: 'title',\n            begin: '[ \\\\t\\\\n\\\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\n            end: '[ \\\\t\\\\n\\\\r]',\n            endsWithParent: true,\n            excludeEnd: true\n          }\n        ]\n      },\n      {\n        className: \"variable\",\n        variants: [\n          {\n            begin: concat(\n              /\\$/,\n              optional(/::/),\n              TCL_IDENT,\n              '(::',\n              TCL_IDENT,\n              ')*'\n            )\n          },\n          {\n            begin: '\\\\$\\\\{(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\n            end: '\\\\}',\n            contains: [\n              NUMBER\n            ]\n          }\n        ]\n      },\n      {\n        className: 'string',\n        contains: [hljs.BACKSLASH_ESCAPE],\n        variants: [\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n        ]\n      },\n      NUMBER\n    ]\n  }\n}\n\nmodule.exports = tcl;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","tcl","hljs","TCL_IDENT","NUMBER","className","variants","BINARY_NUMBER_MODE","C_NUMBER_MODE","name","aliases","keywords","KEYWORDS","contains","COMMENT","beginKeywords","end","excludeEnd","begin","endsWithParent","re","BACKSLASH_ESCAPE","inherit","QUOTE_STRING_MODE","illegal"]
}
