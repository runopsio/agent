shadow$provide.module$node_modules$$sentry$tracing$dist$browser$web_vitals$getLCP=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var bindReporter_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$bindReporter"),getVisibilityWatcher_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$getVisibilityWatcher"),initMetric_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$initMetric"),
observe_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$observe"),onHidden_1=require("module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$onHidden"),reportedMetricIDs={};exports.getLCP=function(onReport,reportAllChanges){var visibilityWatcher=getVisibilityWatcher_1.getVisibilityWatcher(),metric=initMetric_1.initMetric("LCP"),entryHandler=function(entry){var value=entry.startTime;value<visibilityWatcher.firstHiddenTime&&(metric.value=value,metric.entries.push(entry));
report&&report()},po=observe_1.observe("largest-contentful-paint",entryHandler);if(po){var report=bindReporter_1.bindReporter(onReport,metric,reportAllChanges);var stopListening_1=function(){reportedMetricIDs[metric.id]||(po.takeRecords().map(entryHandler),po.disconnect(),reportedMetricIDs[metric.id]=!0,report(!0))};["keydown","click"].forEach(function(type){addEventListener(type,stopListening_1,{once:!0,capture:!0})});onHidden_1.onHidden(stopListening_1,!0)}}}
//# sourceMappingURL=module$node_modules$$sentry$tracing$dist$browser$web_vitals$getLCP.js.map
