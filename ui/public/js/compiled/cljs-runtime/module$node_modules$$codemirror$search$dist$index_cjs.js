shadow$provide.module$node_modules$$codemirror$search$dist$index_cjs=function(global,require,module,exports){function createLineDialog(view){function go(){var match=/^([+-])?(\d+)?(:\d+)?(%)?$/.exec(input.value);if(match){var {state:state$1}=view,startLine=state$1.doc.lineAt(state$1.selection.main.head),[,sign,ln,cl,percent]=match;match=cl?+cl.slice(1):0;var line=ln?+ln:startLine.number;ln&&percent?(line/=100,sign&&(line=line*("-"==sign?-1:1)+startLine.number/state$1.doc.lines),line=Math.round(state$1.doc.lines*
line)):ln&&sign&&(line=line*("-"==sign?-1:1)+startLine.number);state$1=state$1.doc.line(Math.max(1,Math.min(state$1.doc.lines,line)));view.dispatch({effects:dialogEffect.of(!1),selection:state$jscomp$0.EditorSelection.cursor(state$1.from+Math.max(0,Math.min(match,state$1.length))),scrollIntoView:!0});view.focus()}}let input=elt__default["default"]("input",{class:"cm-textfield",name:"line"});return{dom:elt__default["default"]("form",{class:"cm-gotoLine",onkeydown:event=>{27==event.keyCode?(event.preventDefault(),
view.dispatch({effects:dialogEffect.of(!1)}),view.focus()):13==event.keyCode&&(event.preventDefault(),go())},onsubmit:event=>{event.preventDefault();go()}},elt__default["default"]("label",view.state.phrase("Go to line"),": ",input)," ",elt__default["default"]("button",{class:"cm-button",type:"submit"},view.state.phrase("go"))),pos:-10}}function findNextOccurrence(state,query){let {main,ranges}=state.selection;var word$jscomp$0=state.wordAt(main.head);word$jscomp$0=word$jscomp$0&&word$jscomp$0.from==
main.from&&word$jscomp$0.to==main.to;for(let cycled=!1,cursor=new SearchCursor(state.doc,query,ranges[ranges.length-1].to);;)if(cursor.next(),cursor.done){if(cycled)return null;cursor=new SearchCursor(state.doc,query,0,Math.max(0,ranges[ranges.length-1].from-1));cycled=!0}else if(!cycled||!ranges.some(r=>r.from==cursor.value.from)){if(word$jscomp$0){let word=state.wordAt(cursor.value.from);if(!word||word.from!=cursor.value.from||word.to!=cursor.value.to)continue}return cursor.value}}function searchCommand(f){return view=>
{let state=view.state.field(searchState,!1);return state&&state.query.spec.valid?f(view,state):openSearchPanel(view)}}function createSearchPanel(view){return view.state.facet(searchConfigFacet).createPanel(view)}function defaultQuery(state,fallback){var _a,sel=state.selection.main;sel=sel.empty||sel.to>sel.from+100?"":state.sliceDoc(sel.from,sel.to);let caseSensitive=null!==(_a=null===fallback||void 0===fallback?void 0:fallback.caseSensitive)&&void 0!==_a?_a:state.facet(searchConfigFacet).caseSensitive;
return fallback&&!sel?fallback:new SearchQuery({search:sel.replace(/\n/g,"\\n"),caseSensitive})}function announceMatch(view$1,{from,to}){var lineStart=view$1.state.doc.lineAt(from).from,lineEnd=view$1.state.doc.lineAt(to).to;let start=Math.max(lineStart,from-30),end=Math.min(lineEnd,to+30);to=view$1.state.sliceDoc(start,end);if(start!=lineStart)for(lineStart=0;30>lineStart;lineStart++)if(!Break.test(to[lineStart+1])&&Break.test(to[lineStart])){to=to.slice(lineStart);break}if(end!=lineEnd)for(lineEnd=
to.length-1;lineEnd>to.length-30;lineEnd--)if(!Break.test(to[lineEnd-1])&&Break.test(to[lineEnd])){to=to.slice(0,lineEnd);break}return view$jscomp$0.EditorView.announce.of(`${view$1.state.phrase("current match")}. ${to} ${view$1.state.phrase("on line")} ${view$1.state.doc.lineAt(from).number}`)}Object.defineProperty(exports,"__esModule",{value:!0});var view$jscomp$0=require("module$node_modules$$codemirror$view$dist$index_cjs"),state$jscomp$0=require("module$node_modules$$codemirror$state$dist$index_cjs"),
panel$jscomp$0=require("module$node_modules$$codemirror$panel$dist$index_cjs"),rangeset=require("module$node_modules$$codemirror$rangeset$dist$index_cjs");global=require("module$node_modules$crelt$dist$index_cjs");var text$jscomp$0=require("module$node_modules$$codemirror$text$dist$index_cjs"),elt__default=global&&"object"===typeof global&&"default"in global?global:{"default":global};const basicNormalize="function"==typeof String.prototype.normalize?x=>x.normalize("NFKD"):x=>x;class SearchCursor{constructor(text,
query,from=0,to=text.length,normalize){this.value={from:0,to:0};this.done=!1;this.matches=[];this.buffer="";this.bufferPos=0;this.iter=text.iterRange(from,to);this.bufferStart=from;this.normalize=normalize?x=>normalize(basicNormalize(x)):basicNormalize;this.query=this.normalize(query)}peek(){if(this.bufferPos==this.buffer.length){this.bufferStart+=this.buffer.length;this.iter.next();if(this.iter.done)return-1;this.bufferPos=0;this.buffer=this.iter.value}return text$jscomp$0.codePointAt(this.buffer,
this.bufferPos)}next(){for(;this.matches.length;)this.matches.pop();return this.nextOverlapping()}nextOverlapping(){for(;;){var next=this.peek();if(0>next)return this.done=!0,this;let str=text$jscomp$0.fromCodePoint(next),start=this.bufferStart+this.bufferPos;this.bufferPos+=text$jscomp$0.codePointSize(next);next=this.normalize(str);for(let i=0,pos=start;;i++){let code=next.charCodeAt(i),match=this.match(code,pos);if(match)return this.value=match,this;if(i==next.length-1)break;pos==start&&i<str.length&&
str.charCodeAt(i)==code&&pos++}}}match(code,pos){let match=null;for(let i=0;i<this.matches.length;i+=2){let index=this.matches[i],keep=!1;this.query.charCodeAt(index)==code&&(index==this.query.length-1?match={from:this.matches[i+1],to:pos+1}:(this.matches[i]++,keep=!0));keep||(this.matches.splice(i,2),i-=2)}this.query.charCodeAt(0)==code&&(1==this.query.length?match={from:pos,to:pos+1}:this.matches.push(1,pos));return match}}"undefined"!=typeof Symbol&&(SearchCursor.prototype[Symbol.iterator]=function(){return this});
const empty={from:-1,to:-1,match:/.*/.exec("")},baseFlags="gm"+(null==/x/.unicode?"":"u");class RegExpCursor{constructor(text,query,options,from=0,to=text.length){this.to=to;this.curLine="";this.done=!1;this.value=empty;if(/\\[sWDnr]|\n|\r|\[\^/.test(query))return new MultilineRegExpCursor(text,query,options,from,to);this.re=new RegExp(query,baseFlags+((null===options||void 0===options?0:options.ignoreCase)?"i":""));this.iter=text.iter();this.curLineStart=text.lineAt(from).from;this.matchPos=from;
this.getLine(this.curLineStart)}getLine(skip){this.iter.next(skip);this.iter.lineBreak?this.curLine="":(this.curLine=this.iter.value,this.curLineStart+this.curLine.length>this.to&&(this.curLine=this.curLine.slice(0,this.to-this.curLineStart)),this.iter.next())}nextLine(){this.curLineStart=this.curLineStart+this.curLine.length+1;this.curLineStart>this.to?this.curLine="":this.getLine(0)}next(){for(var off=this.matchPos-this.curLineStart;;)if(this.re.lastIndex=off,off=this.matchPos<=this.to&&this.re.exec(this.curLine)){let from=
this.curLineStart+off.index,to=from+off[0].length;this.matchPos=to+(from==to?1:0);from==this.curLine.length&&this.nextLine();if(from<to||from>this.value.to)return this.value={from,to,match:off},this;off=this.matchPos-this.curLineStart}else if(this.curLineStart+this.curLine.length<this.to)this.nextLine(),off=0;else return this.done=!0,this}}const flattened=new WeakMap;class FlattenedDoc{constructor(from,text){this.from=from;this.text=text}get to(){return this.from+this.text.length}static get(doc,from,
to){let cached=flattened.get(doc);if(!cached||cached.from>=to||cached.to<=from)return from=new FlattenedDoc(from,doc.sliceString(from,to)),flattened.set(doc,from),from;if(cached.from==from&&cached.to==to)return cached;let {text,from:cachedFrom}=cached;cachedFrom>from&&(text=doc.sliceString(from,cachedFrom)+text,cachedFrom=from);cached.to<to&&(text+=doc.sliceString(cached.to,to));flattened.set(doc,new FlattenedDoc(cachedFrom,text));return new FlattenedDoc(from,text.slice(from-cachedFrom,to-cachedFrom))}}
class MultilineRegExpCursor{constructor(text,query,options,from,to){this.text=text;this.to=to;this.done=!1;this.value=empty;this.matchPos=from;this.re=new RegExp(query,baseFlags+((null===options||void 0===options?0:options.ignoreCase)?"i":""));this.flat=FlattenedDoc.get(text,from,this.chunkEnd(from+5E3))}chunkEnd(pos){return pos>=this.to?this.to:this.text.lineAt(pos).to}next(){for(;;){var off=this.re.lastIndex=this.matchPos-this.flat.from;let match=this.re.exec(this.flat.text);match&&!match[0]&&match.index==
off&&(this.re.lastIndex=off+1,match=this.re.exec(this.flat.text));match&&this.flat.to<this.to&&match.index+match[0].length>this.flat.text.length-10&&(match=null);if(match){off=this.flat.from+match.index;let to=off+match[0].length;this.value={from:off,to,match};this.matchPos=to+(off==to?1:0);return this}if(this.flat.to==this.to)return this.done=!0,this;this.flat=FlattenedDoc.get(this.text,this.flat.from,this.chunkEnd(this.flat.from+2*this.flat.text.length))}}}"undefined"!=typeof Symbol&&(RegExpCursor.prototype[Symbol.iterator]=
MultilineRegExpCursor.prototype[Symbol.iterator]=function(){return this});const dialogEffect=state$jscomp$0.StateEffect.define(),dialogField=state$jscomp$0.StateField.define({create(){return!0},update(value,tr){for(let e of tr.effects)e.is(dialogEffect)&&(value=e.value);return value},provide:f=>panel$jscomp$0.showPanel.from(f,val=>val?createLineDialog:null)});require=view=>{var panel$1=panel$jscomp$0.getPanel(view,createLineDialog);panel$1||(panel$1=[dialogEffect.of(!0)],null==view.state.field(dialogField,
!1)&&panel$1.push(state$jscomp$0.StateEffect.appendConfig.of([dialogField,baseTheme$1])),view.dispatch({effects:panel$1}),panel$1=panel$jscomp$0.getPanel(view,createLineDialog));panel$1&&panel$1.dom.querySelector("input").focus();return!0};const baseTheme$1=view$jscomp$0.EditorView.baseTheme({".cm-panel.cm-gotoLine":{padding:"2px 6px 4px","\x26 label":{fontSize:"80%"}}}),defaultHighlightOptions={highlightWordAroundCursor:!1,minSelectionLength:1,maxMatches:100},highlightConfig=state$jscomp$0.Facet.define({combine(options){return state$jscomp$0.combineConfig(options,
defaultHighlightOptions,{highlightWordAroundCursor:(a,b)=>a||b,minSelectionLength:Math.min,maxMatches:Math.min})}}),matchDeco=view$jscomp$0.Decoration.mark({class:"cm-selectionMatch"}),mainMatchDeco=view$jscomp$0.Decoration.mark({class:"cm-selectionMatch cm-selectionMatch-main"}),matchHighlighter=view$jscomp$0.ViewPlugin.fromClass(class{constructor(view){this.decorations=this.getDeco(view)}update(update){if(update.selectionSet||update.docChanged||update.viewportChanged)this.decorations=this.getDeco(update.view)}getDeco(view$1){let conf=
view$1.state.facet(highlightConfig),{state:state$1}=view$1;var sel=state$1.selection;if(1<sel.ranges.length)return view$jscomp$0.Decoration.none;sel=sel.main;let check=null;if(sel.empty){if(!conf.highlightWordAroundCursor)return view$jscomp$0.Decoration.none;var query=state$1.wordAt(sel.head);if(!query)return view$jscomp$0.Decoration.none;check=state$1.charCategorizer(sel.head);query=state$1.sliceDoc(query.from,query.to)}else{query=sel.to-sel.from;if(query<conf.minSelectionLength||200<query)return view$jscomp$0.Decoration.none;
query=state$1.sliceDoc(sel.from,sel.to).trim();if(!query)return view$jscomp$0.Decoration.none}let deco=[];for(let part of view$1.visibleRanges)for(view$1=new SearchCursor(state$1.doc,query,part.from,part.to);!view$1.next().done;){let {from,to}=view$1.value;if(!check||!(0!=from&&check(state$1.sliceDoc(from-1,from))==state$jscomp$0.CharCategory.Word||to!=state$1.doc.length&&check(state$1.sliceDoc(to,to+1))==state$jscomp$0.CharCategory.Word))if(check&&from<=sel.from&&to>=sel.to?deco.push(mainMatchDeco.range(from,
to)):(from>=sel.to||to<=sel.from)&&deco.push(matchDeco.range(from,to)),deco.length>conf.maxMatches)return view$jscomp$0.Decoration.none}return view$jscomp$0.Decoration.set(deco)}},{decorations:v=>v.decorations}),defaultTheme=view$jscomp$0.EditorView.baseTheme({".cm-selectionMatch":{backgroundColor:"#99ff7780"},".cm-searchMatch .cm-selectionMatch":{backgroundColor:"transparent"}}),selectWord=({state:state$1,dispatch})=>{let {selection}=state$1,newSel=state$jscomp$0.EditorSelection.create(selection.ranges.map(range=>
state$1.wordAt(range.head)||state$jscomp$0.EditorSelection.cursor(range.head)),selection.mainIndex);if(newSel.eq(selection))return!1;dispatch(state$1.update({selection:newSel}));return!0};global=({state:state$1,dispatch})=>{var {ranges}=state$1.selection;if(ranges.some(sel=>sel.from===sel.to))return selectWord({state:state$1,dispatch});let searchedText=state$1.sliceDoc(ranges[0].from,ranges[0].to);if(state$1.selection.ranges.some(r=>state$1.sliceDoc(r.from,r.to)!=searchedText))return!1;ranges=findNextOccurrence(state$1,
searchedText);if(!ranges)return!1;dispatch(state$1.update({selection:state$1.selection.addRange(state$jscomp$0.EditorSelection.range(ranges.from,ranges.to),!1),effects:view$jscomp$0.EditorView.scrollIntoView(ranges.to)}));return!0};const searchConfigFacet=state$jscomp$0.Facet.define({combine(configs){var _a;return{top:configs.reduce((val,conf)=>null!==val&&void 0!==val?val:conf.top,void 0)||!1,caseSensitive:configs.reduce((val,conf)=>null!==val&&void 0!==val?val:conf.caseSensitive||conf.matchCase,
void 0)||!1,createPanel:(null===(_a=configs.find(c=>c.createPanel))||void 0===_a?void 0:_a.createPanel)||(view=>new SearchPanel(view))}}});class SearchQuery{constructor(config){this.search=config.search;this.caseSensitive=!!config.caseSensitive;this.regexp=!!config.regexp;this.replace=config.replace||"";if((config=!!this.search)&&!(config=!this.regexp))try{new RegExp(this.search,baseFlags),config=!0}catch(_a){config=!1}this.valid=config}eq(other){return this.search==other.search&&this.replace==other.replace&&
this.caseSensitive==other.caseSensitive&&this.regexp==other.regexp}create(){return this.regexp?new RegExpQuery(this):new StringQuery(this)}}class QueryType{constructor(spec){this.spec=spec}}class StringQuery extends QueryType{constructor(spec){super(spec);this.unquoted=spec.search.replace(/\\([nrt\\])/g,(_,ch)=>"n"==ch?"\n":"r"==ch?"\r":"t"==ch?"\t":"\\")}cursor(doc,from=0,to=doc.length){return new SearchCursor(doc,this.unquoted,from,to,this.spec.caseSensitive?void 0:x=>x.toLowerCase())}nextMatch(doc,
curFrom,curTo){curTo=this.cursor(doc,curTo).nextOverlapping();curTo.done&&(curTo=this.cursor(doc,0,curFrom).nextOverlapping());return curTo.done?null:curTo.value}prevMatchInRange(doc,from,to){for(;;){let start=Math.max(from,to-1E4-this.unquoted.length),cursor=this.cursor(doc,start,to),range=null;for(;!cursor.nextOverlapping().done;)range=cursor.value;if(range)return range;if(start==from)return null;to-=1E4}}prevMatch(doc,curFrom,curTo){return this.prevMatchInRange(doc,0,curFrom)||this.prevMatchInRange(doc,
curTo,doc.length)}getReplacement(_result){return this.spec.replace}matchAll(doc,limit){doc=this.cursor(doc);let ranges=[];for(;!doc.next().done;){if(ranges.length>=limit)return null;ranges.push(doc.value)}return ranges}highlight(doc,from,to,add){for(doc=this.cursor(doc,Math.max(0,from-this.unquoted.length),Math.min(to+this.unquoted.length,doc.length));!doc.next().done;)add(doc.value.from,doc.value.to)}}class RegExpQuery extends QueryType{cursor(doc,from=0,to=doc.length){return new RegExpCursor(doc,
this.spec.search,this.spec.caseSensitive?void 0:{ignoreCase:!0},from,to)}nextMatch(doc,curFrom,curTo){curTo=this.cursor(doc,curTo).next();curTo.done&&(curTo=this.cursor(doc,0,curFrom).next());return curTo.done?null:curTo.value}prevMatchInRange(doc,from,to){for(let size=1;;size++){let start=Math.max(from,to-1E4*size),cursor=this.cursor(doc,start,to),range=null;for(;!cursor.next().done;)range=cursor.value;if(range&&(start==from||range.from>start+10))return range;if(start==from)return null}}prevMatch(doc,
curFrom,curTo){return this.prevMatchInRange(doc,0,curFrom)||this.prevMatchInRange(doc,curTo,doc.length)}getReplacement(result){return this.spec.replace.replace(/\$([$&\d+])/g,(m,i)=>"$"==i?"$":"\x26"==i?result.match[0]:"0"!=i&&+i<result.match.length?result.match[i]:m)}matchAll(doc,limit){doc=this.cursor(doc);let ranges=[];for(;!doc.next().done;){if(ranges.length>=limit)return null;ranges.push(doc.value)}return ranges}highlight(doc,from,to,add){for(doc=this.cursor(doc,Math.max(0,from-250),Math.min(to+
250,doc.length));!doc.next().done;)add(doc.value.from,doc.value.to)}}const setSearchQuery=state$jscomp$0.StateEffect.define(),togglePanel=state$jscomp$0.StateEffect.define(),searchState=state$jscomp$0.StateField.define({create(state){return new SearchState(defaultQuery(state).create(),createSearchPanel)},update(value,tr){for(let effect of tr.effects)effect.is(setSearchQuery)?value=new SearchState(effect.value.create(),value.panel):effect.is(togglePanel)&&(value=new SearchState(value.query,effect.value?
createSearchPanel:null));return value},provide:f=>panel$jscomp$0.showPanel.from(f,val=>val.panel)});class SearchState{constructor(query,panel){this.query=query;this.panel=panel}}const matchMark=view$jscomp$0.Decoration.mark({class:"cm-searchMatch"}),selectedMatchMark=view$jscomp$0.Decoration.mark({class:"cm-searchMatch cm-searchMatch-selected"});module=view$jscomp$0.ViewPlugin.fromClass(class{constructor(view){this.view=view;this.decorations=this.highlight(view.state.field(searchState))}update(update){let state=
update.state.field(searchState);if(state!=update.startState.field(searchState)||update.docChanged||update.selectionSet)this.decorations=this.highlight(state)}highlight({query,panel}){if(!panel||!query.spec.valid)return view$jscomp$0.Decoration.none;let {view:view$1}=this,builder=new rangeset.RangeSetBuilder;for(let i=0,ranges=view$1.visibleRanges,l=ranges.length;i<l;i++){let {from:from$jscomp$0,to:to$jscomp$0}=ranges[i];for(;i<l-1&&to$jscomp$0>ranges[i+1].from-500;)to$jscomp$0=ranges[++i].to;query.highlight(view$1.state.doc,
from$jscomp$0,to$jscomp$0,(from,to)=>{let selected=view$1.state.selection.ranges.some(r=>r.from==from&&r.to==to);builder.add(from,to,selected?selectedMatchMark:matchMark)})}return builder.finish()}},{decorations:v=>v.decorations});const findNext=searchCommand((view,{query})=>{let {from,to}=view.state.selection.main;query=query.nextMatch(view.state.doc,from,to);if(!query||query.from==from&&query.to==to)return!1;view.dispatch({selection:{anchor:query.from,head:query.to},scrollIntoView:!0,effects:announceMatch(view,
query),userEvent:"select.search"});return!0}),findPrevious=searchCommand((view,{query})=>{let {state}=view,{from,to}=state.selection.main;query=query.prevMatch(state.doc,from,to);if(!query)return!1;view.dispatch({selection:{anchor:query.from,head:query.to},scrollIntoView:!0,effects:announceMatch(view,query),userEvent:"select.search"});return!0}),selectMatches=searchCommand((view,{query})=>{query=query.matchAll(view.state.doc,1E3);if(!query||!query.length)return!1;view.dispatch({selection:state$jscomp$0.EditorSelection.create(query.map(r=>
state$jscomp$0.EditorSelection.range(r.from,r.to))),userEvent:"select.search.matches"});return!0}),selectSelectionMatches=({state:state$1,dispatch})=>{var sel=state$1.selection;if(1<sel.ranges.length||sel.main.empty)return!1;let {from,to}=sel.main;sel=[];let main=0;for(let cur=new SearchCursor(state$1.doc,state$1.sliceDoc(from,to));!cur.next().done;){if(1E3<sel.length)return!1;cur.value.from==from&&(main=sel.length);sel.push(state$jscomp$0.EditorSelection.range(cur.value.from,cur.value.to))}dispatch(state$1.update({selection:state$jscomp$0.EditorSelection.create(sel,
main),userEvent:"select.search.matches"}));return!0},replaceNext=searchCommand((view,{query})=>{let {state}=view,{from,to}=state.selection.main;if(state.readOnly)return!1;let next=query.nextMatch(state.doc,from,from);if(!next)return!1;let changes=[],selection,replacement;next.from==from&&next.to==to&&(replacement=state.toText(query.getReplacement(next)),changes.push({from:next.from,to:next.to,insert:replacement}),next=query.nextMatch(state.doc,next.from,next.to));next&&(query=0==changes.length||changes[0].from>=
next.to?0:next.to-next.from-replacement.length,selection={anchor:next.from-query,head:next.to-query});view.dispatch({changes,selection,scrollIntoView:!!selection,effects:next?announceMatch(view,next):void 0,userEvent:"input.replace"});return!0}),replaceAll=searchCommand((view,{query})=>{if(view.state.readOnly)return!1;let changes=query.matchAll(view.state.doc,1E9).map(match=>{let {from,to}=match;return{from,to,insert:query.getReplacement(match)}});if(!changes.length)return!1;view.dispatch({changes,
userEvent:"input.replace.all"});return!0}),openSearchPanel=view=>{var state$1=view.state.field(searchState,!1);if(state$1&&state$1.panel){var panel$1=panel$jscomp$0.getPanel(view,createSearchPanel);if(!panel$1)return!1;panel$1=panel$1.dom.querySelector("[name\x3dsearch]");panel$1!=view.root.activeElement&&(state$1=defaultQuery(view.state,state$1.query.spec),state$1.valid&&view.dispatch({effects:setSearchQuery.of(state$1)}),panel$1.focus(),panel$1.select())}else view.dispatch({effects:[togglePanel.of(!0),
state$1?setSearchQuery.of(defaultQuery(view.state,state$1.query.spec)):state$jscomp$0.StateEffect.appendConfig.of(searchExtensions)]});return!0},closeSearchPanel=view=>{var state=view.state.field(searchState,!1);if(!state||!state.panel)return!1;(state=panel$jscomp$0.getPanel(view,createSearchPanel))&&state.dom.contains(view.root.activeElement)&&view.focus();view.dispatch({effects:togglePanel.of(!1)});return!0},searchKeymap=[{key:"Mod-f",run:openSearchPanel,scope:"editor search-panel"},{key:"F3",run:findNext,
shift:findPrevious,scope:"editor search-panel",preventDefault:!0},{key:"Mod-g",run:findNext,shift:findPrevious,scope:"editor search-panel",preventDefault:!0},{key:"Escape",run:closeSearchPanel,scope:"editor search-panel"},{key:"Mod-Shift-l",run:selectSelectionMatches},{key:"Alt-g",run:require},{key:"Mod-d",run:global,preventDefault:!0}];class SearchPanel{constructor(view){function button(name,onclick,content){return elt__default["default"]("button",{class:"cm-button",name,onclick,type:"button"},content)}
this.view=view;let query=this.query=view.state.field(searchState).query.spec;this.commit=this.commit.bind(this);this.searchField=elt__default["default"]("input",{value:query.search,placeholder:view.state.phrase("Find"),"aria-label":view.state.phrase("Find"),class:"cm-textfield",name:"search",onchange:this.commit,onkeyup:this.commit});this.replaceField=elt__default["default"]("input",{value:query.replace,placeholder:view.state.phrase("Replace"),"aria-label":view.state.phrase("Replace"),class:"cm-textfield",
name:"replace",onchange:this.commit,onkeyup:this.commit});this.caseField=elt__default["default"]("input",{type:"checkbox",name:"case",checked:query.caseSensitive,onchange:this.commit});this.reField=elt__default["default"]("input",{type:"checkbox",name:"re",checked:query.regexp,onchange:this.commit});this.dom=elt__default["default"]("div",{onkeydown:e=>this.keydown(e),class:"cm-search"},[this.searchField,button("next",()=>findNext(view),[view.state.phrase("next")]),button("prev",()=>findPrevious(view),
[view.state.phrase("previous")]),button("select",()=>selectMatches(view),[view.state.phrase("all")]),elt__default["default"]("label",null,[this.caseField,view.state.phrase("match case")]),elt__default["default"]("label",null,[this.reField,view.state.phrase("regexp")]),...(view.state.readOnly?[]:[elt__default["default"]("br"),this.replaceField,button("replace",()=>replaceNext(view),[view.state.phrase("replace")]),button("replaceAll",()=>replaceAll(view),[view.state.phrase("replace all")]),elt__default["default"]("button",
{name:"close",onclick:()=>closeSearchPanel(view),"aria-label":view.state.phrase("close"),type:"button"},["×"])])])}commit(){let query=new SearchQuery({search:this.searchField.value,caseSensitive:this.caseField.checked,regexp:this.reField.checked,replace:this.replaceField.value});query.eq(this.query)||(this.query=query,this.view.dispatch({effects:setSearchQuery.of(query)}))}keydown(e){view$jscomp$0.runScopeHandlers(this.view,e,"search-panel")?e.preventDefault():13==e.keyCode&&e.target==this.searchField?
(e.preventDefault(),(e.shiftKey?findPrevious:findNext)(this.view)):13==e.keyCode&&e.target==this.replaceField&&(e.preventDefault(),replaceNext(this.view))}update(update){for(let tr of update.transactions)for(let effect of tr.effects)effect.is(setSearchQuery)&&!effect.value.eq(this.query)&&this.setQuery(effect.value)}setQuery(query){this.query=query;this.searchField.value=query.search;this.replaceField.value=query.replace;this.caseField.checked=query.caseSensitive;this.reField.checked=query.regexp}mount(){this.searchField.select()}get pos(){return 80}get top(){return this.view.state.facet(searchConfigFacet).top}}
const Break=/[\s\.,:;?!]/,baseTheme=view$jscomp$0.EditorView.baseTheme({".cm-panel.cm-search":{padding:"2px 6px 4px",position:"relative","\x26 [name\x3dclose]":{position:"absolute",top:"0",right:"4px",backgroundColor:"inherit",border:"none",font:"inherit",padding:0,margin:0},"\x26 input, \x26 button, \x26 label":{margin:".2em .6em .2em 0"},"\x26 input[type\x3dcheckbox]":{marginRight:".2em"},"\x26 label":{fontSize:"80%",whiteSpace:"pre"}},"\x26light .cm-searchMatch":{backgroundColor:"#ffff0054"},"\x26dark .cm-searchMatch":{backgroundColor:"#00ffff8a"},
"\x26light .cm-searchMatch-selected":{backgroundColor:"#ff6a0054"},"\x26dark .cm-searchMatch-selected":{backgroundColor:"#ff00ff8a"}}),searchExtensions=[searchState,state$jscomp$0.Prec.lowest(module),baseTheme];exports.RegExpCursor=RegExpCursor;exports.SearchCursor=SearchCursor;exports.SearchQuery=SearchQuery;exports.closeSearchPanel=closeSearchPanel;exports.findNext=findNext;exports.findPrevious=findPrevious;exports.getSearchQuery=function(state){let curState=state.field(searchState,!1);return curState?
curState.query.spec:defaultQuery(state)};exports.gotoLine=require;exports.highlightSelectionMatches=function(options){let ext=[defaultTheme,matchHighlighter];options&&ext.push(highlightConfig.of(options));return ext};exports.openSearchPanel=openSearchPanel;exports.replaceAll=replaceAll;exports.replaceNext=replaceNext;exports.searchConfig=function(config){return searchConfigFacet.of(config)};exports.searchKeymap=searchKeymap;exports.selectMatches=selectMatches;exports.selectNextOccurrence=global;exports.selectSelectionMatches=
selectSelectionMatches;exports.setSearchQuery=setSearchQuery}
//# sourceMappingURL=module$node_modules$$codemirror$search$dist$index_cjs.js.map
