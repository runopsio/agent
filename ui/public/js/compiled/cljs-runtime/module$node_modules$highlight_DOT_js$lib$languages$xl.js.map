{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$xl.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+MlHD,MAAOC,CAAAA,OAAP,CAvMAC,QAAW,CAACC,IAAD,CAAO,CAqIhB,MAAMC,SAAW,CACfC,SAAU,wBADK,CAEfC,QAtIUC,0JAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAoIK,CAGfC,QAReC,CACf,MADeA,CAEf,OAFeA,CAGf,KAHeA,CAKA,CAIfC,SA1GgBC,qjBAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CA0GIC,CAAAA,MAAV,CA/BYC,wMAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CA+BZ,CAJK,CAAjB;AAOMC,kBAAoB,CACxBC,UAAW,QADa,CAExBC,MAAO,GAFiB,CAGxBC,IAAK,GAHmB,CAIxBC,QAAS,KAJe,CAP1B,CA4BMC,OAAS,CACbC,cAAe,QADF,CAEbH,IAAK,GAFQ,CAGbI,SAAUjB,QAHG,CAIbkB,SAAU,CAAER,iBAAF,CAJG,CA5Bf,CAkCMS,oBAAsB,CAC1BR,UAAW,UADe,CAE1BC,MAAO,eAFmB,CAG1BQ,YAAa,CAAA,CAHa,CAI1BP,IAAK,IAJqB,CAK1BK,SAAU,CACRnB,IAAKsB,CAAAA,OAAL,CAAatB,IAAKuB,CAAAA,UAAlB,CAA8B,CAC5BC,OAAQ,CACNC,eAAgB,CAAA,CADV,CAENP,SAAUjB,QAFJ,CADoB,CAA9B,CADQ,CALgB,CAc5B,OAAO,CACLyB,KAAM,IADD,CAELC,QAAS,CAAE,KAAF,CAFJ,CAGLT,SAAUjB,QAHL,CAILkB,SAAU,CACRnB,IAAK4B,CAAAA,mBADG,CAER5B,IAAK6B,CAAAA,oBAFG,CAGRlB,iBAHQ,CAvCcmB,CACxBlB,UAAW,QADakB,CAExBjB,MAAO,GAFiBiB,CAGxBhB,IAAK,GAHmBgB;AAIxBf,QAAS,KAJee,CAuCd,CAjCMC,CAChBnB,UAAW,QADKmB,CAEhBlB,MAAO,UAFSkB,CAGhBjB,IAAK,UAHWiB,CAiCN,CAMRX,mBANQ,CAORJ,MAPQ,CA5BSgB,CACnBpB,UAAW,QADQoB,CAEnBnB,MAAO,wDAFYmB,CA4BT,CASRhC,IAAKiC,CAAAA,WATG,CAJL,CArLS,CARgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/xl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$xl\"] = function(global,require,module,exports) {\n/*\nLanguage: XL\nAuthor: Christophe de Dinechin <christophe@taodyne.com>\nDescription: An extensible programming language, based on parse tree rewriting\nWebsite: http://xlr.sf.net\n*/\n\nfunction xl(hljs) {\n  const KWS = [\n    \"if\",\n    \"then\",\n    \"else\",\n    \"do\",\n    \"while\",\n    \"until\",\n    \"for\",\n    \"loop\",\n    \"import\",\n    \"with\",\n    \"is\",\n    \"as\",\n    \"where\",\n    \"when\",\n    \"by\",\n    \"data\",\n    \"constant\",\n    \"integer\",\n    \"real\",\n    \"text\",\n    \"name\",\n    \"boolean\",\n    \"symbol\",\n    \"infix\",\n    \"prefix\",\n    \"postfix\",\n    \"block\",\n    \"tree\"\n  ];\n  const BUILT_INS = [\n    \"in\",\n    \"mod\",\n    \"rem\",\n    \"and\",\n    \"or\",\n    \"xor\",\n    \"not\",\n    \"abs\",\n    \"sign\",\n    \"floor\",\n    \"ceil\",\n    \"sqrt\",\n    \"sin\",\n    \"cos\",\n    \"tan\",\n    \"asin\",\n    \"acos\",\n    \"atan\",\n    \"exp\",\n    \"expm1\",\n    \"log\",\n    \"log2\",\n    \"log10\",\n    \"log1p\",\n    \"pi\",\n    \"at\",\n    \"text_length\",\n    \"text_range\",\n    \"text_find\",\n    \"text_replace\",\n    \"contains\",\n    \"page\",\n    \"slide\",\n    \"basic_slide\",\n    \"title_slide\",\n    \"title\",\n    \"subtitle\",\n    \"fade_in\",\n    \"fade_out\",\n    \"fade_at\",\n    \"clear_color\",\n    \"color\",\n    \"line_color\",\n    \"line_width\",\n    \"texture_wrap\",\n    \"texture_transform\",\n    \"texture\",\n    \"scale_?x\",\n    \"scale_?y\",\n    \"scale_?z?\",\n    \"translate_?x\",\n    \"translate_?y\",\n    \"translate_?z?\",\n    \"rotate_?x\",\n    \"rotate_?y\",\n    \"rotate_?z?\",\n    \"rectangle\",\n    \"circle\",\n    \"ellipse\",\n    \"sphere\",\n    \"path\",\n    \"line_to\",\n    \"move_to\",\n    \"quad_to\",\n    \"curve_to\",\n    \"theme\",\n    \"background\",\n    \"contents\",\n    \"locally\",\n    \"time\",\n    \"mouse_?x\",\n    \"mouse_?y\",\n    \"mouse_buttons\"\n  ];\n  const BUILTIN_MODULES = [\n    \"ObjectLoader\",\n    \"Animate\",\n    \"MovieCredits\",\n    \"Slides\",\n    \"Filters\",\n    \"Shading\",\n    \"Materials\",\n    \"LensFlare\",\n    \"Mapping\",\n    \"VLCAudioVideo\",\n    \"StereoDecoder\",\n    \"PointCloud\",\n    \"NetworkAccess\",\n    \"RemoteControl\",\n    \"RegExp\",\n    \"ChromaKey\",\n    \"Snowfall\",\n    \"NodeJS\",\n    \"Speech\",\n    \"Charts\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"nil\"\n  ];\n  const KEYWORDS = {\n    $pattern: /[a-zA-Z][a-zA-Z0-9_?]*/,\n    keyword: KWS,\n    literal: LITERALS,\n    built_in: BUILT_INS.concat(BUILTIN_MODULES)\n  };\n\n  const DOUBLE_QUOTE_TEXT = {\n    className: 'string',\n    begin: '\"',\n    end: '\"',\n    illegal: '\\\\n'\n  };\n  const SINGLE_QUOTE_TEXT = {\n    className: 'string',\n    begin: '\\'',\n    end: '\\'',\n    illegal: '\\\\n'\n  };\n  const LONG_TEXT = {\n    className: 'string',\n    begin: '<<',\n    end: '>>'\n  };\n  const BASED_NUMBER = {\n    className: 'number',\n    begin: '[0-9]+#[0-9A-Z_]+(\\\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?'\n  };\n  const IMPORT = {\n    beginKeywords: 'import',\n    end: '$',\n    keywords: KEYWORDS,\n    contains: [ DOUBLE_QUOTE_TEXT ]\n  };\n  const FUNCTION_DEFINITION = {\n    className: 'function',\n    begin: /[a-z][^\\n]*->/,\n    returnBegin: true,\n    end: /->/,\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        starts: {\n          endsWithParent: true,\n          keywords: KEYWORDS\n        }\n      })\n    ]\n  };\n  return {\n    name: 'XL',\n    aliases: [ 'tao' ],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      DOUBLE_QUOTE_TEXT,\n      SINGLE_QUOTE_TEXT,\n      LONG_TEXT,\n      FUNCTION_DEFINITION,\n      IMPORT,\n      BASED_NUMBER,\n      hljs.NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = xl;\n\n};"],
"names":["shadow$provide","global","require","module","exports","xl","hljs","KEYWORDS","$pattern","keyword","KWS","literal","LITERALS","built_in","BUILT_INS","concat","BUILTIN_MODULES","DOUBLE_QUOTE_TEXT","className","begin","end","illegal","IMPORT","beginKeywords","keywords","contains","FUNCTION_DEFINITION","returnBegin","inherit","TITLE_MODE","starts","endsWithParent","name","aliases","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","SINGLE_QUOTE_TEXT","LONG_TEXT","BASED_NUMBER","NUMBER_MODE"]
}
