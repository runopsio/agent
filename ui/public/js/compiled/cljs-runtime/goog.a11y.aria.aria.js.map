{
"version":3,
"file":"goog.a11y.aria.aria.js",
"lineCount":129,
"mappings":"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",
"sources":["goog/a11y/aria/aria.js"],
"sourcesContent":["// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview Utilities for adding, removing and setting ARIA roles and\n * states as defined by W3C ARIA standard: http://www.w3.org/TR/wai-aria/\n * All modern browsers have some form of ARIA support, so no browser checks are\n * performed when adding ARIA to components.\n *\n */\n\ngoog.provide('goog.a11y.aria');\n\ngoog.require('goog.a11y.aria.Role');\ngoog.require('goog.a11y.aria.State');\ngoog.require('goog.a11y.aria.datatables');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.object');\ngoog.require('goog.string');\n\n\n/**\n * ARIA states/properties prefix.\n * @private\n */\ngoog.a11y.aria.ARIA_PREFIX_ = 'aria-';\n\n\n/**\n * ARIA role attribute.\n * @private\n */\ngoog.a11y.aria.ROLE_ATTRIBUTE_ = 'role';\n\n\n/**\n * A list of tag names for which we don't need to set ARIA role and states\n * because they have well supported semantics for screen readers or because\n * they don't contain content to be made accessible.\n * @private\n */\ngoog.a11y.aria.TAGS_WITH_ASSUMED_ROLES_ = goog.object.createSet([\n  goog.dom.TagName.A, goog.dom.TagName.AREA, goog.dom.TagName.BUTTON,\n  goog.dom.TagName.HEAD, goog.dom.TagName.INPUT, goog.dom.TagName.LINK,\n  goog.dom.TagName.MENU, goog.dom.TagName.META, goog.dom.TagName.OPTGROUP,\n  goog.dom.TagName.OPTION, goog.dom.TagName.PROGRESS, goog.dom.TagName.STYLE,\n  goog.dom.TagName.SELECT, goog.dom.TagName.SOURCE, goog.dom.TagName.TEXTAREA,\n  goog.dom.TagName.TITLE, goog.dom.TagName.TRACK\n]);\n\n\n/**\n * A list of roles which are considered container roles.\n * Container roles are ARIA roles which use the aria-activedescendant property\n * to manage their active descendants or children. See\n * {@link http://www.w3.org/TR/wai-aria/states_and_properties\n * #aria-activedescendant} for more information.\n * @private @const {!Array<goog.a11y.aria.Role>}\n */\ngoog.a11y.aria.CONTAINER_ROLES_ = [\n  goog.a11y.aria.Role.COMBOBOX, goog.a11y.aria.Role.GRID,\n  goog.a11y.aria.Role.GROUP, goog.a11y.aria.Role.LISTBOX,\n  goog.a11y.aria.Role.MENU, goog.a11y.aria.Role.MENUBAR,\n  goog.a11y.aria.Role.RADIOGROUP, goog.a11y.aria.Role.ROW,\n  goog.a11y.aria.Role.ROWGROUP, goog.a11y.aria.Role.TAB_LIST,\n  goog.a11y.aria.Role.TEXTBOX, goog.a11y.aria.Role.TOOLBAR,\n  goog.a11y.aria.Role.TREE, goog.a11y.aria.Role.TREEGRID\n];\n\n\n/**\n * Sets the role of an element. If the roleName is\n * empty string or null, the role for the element is removed.\n * We encourage clients to call the goog.a11y.aria.removeRole\n * method instead of setting null and empty string values.\n * Special handling for this case is added to ensure\n * backword compatibility with existing code.\n *\n * @param {!Element} element DOM node to set role of.\n * @param {!goog.a11y.aria.Role|string} roleName role name(s).\n */\ngoog.a11y.aria.setRole = function(element, roleName) {\n  if (!roleName) {\n    // Setting the ARIA role to empty string is not allowed\n    // by the ARIA standard.\n    goog.a11y.aria.removeRole(element);\n  } else {\n    if (goog.asserts.ENABLE_ASSERTS) {\n      goog.asserts.assert(\n          goog.object.containsValue(goog.a11y.aria.Role, roleName),\n          'No such ARIA role ' + roleName);\n    }\n    element.setAttribute(goog.a11y.aria.ROLE_ATTRIBUTE_, roleName);\n  }\n};\n\n\n/**\n * Gets role of an element.\n * @param {!Element} element DOM element to get role of.\n * @return {?goog.a11y.aria.Role} ARIA Role name.\n */\ngoog.a11y.aria.getRole = function(element) {\n  var role = element.getAttribute(goog.a11y.aria.ROLE_ATTRIBUTE_);\n  return /** @type {goog.a11y.aria.Role} */ (role) || null;\n};\n\n\n/**\n * Removes role of an element.\n * @param {!Element} element DOM element to remove the role from.\n */\ngoog.a11y.aria.removeRole = function(element) {\n  element.removeAttribute(goog.a11y.aria.ROLE_ATTRIBUTE_);\n};\n\n\n/**\n * Sets the state or property of an element.\n * @param {!Element} element DOM node where we set state.\n * @param {!(goog.a11y.aria.State|string)} stateName State attribute being set.\n *     Automatically adds prefix 'aria-' to the state name if the attribute is\n *     not an extra attribute.\n * @param {string|boolean|number|!Array<string>} value Value\n * for the state attribute.\n */\ngoog.a11y.aria.setState = function(element, stateName, value) {\n  if (goog.isArray(value)) {\n    value = value.join(' ');\n  }\n  var attrStateName = goog.a11y.aria.getAriaAttributeName_(stateName);\n  if (value === '' || value == undefined) {\n    var defaultValueMap = goog.a11y.aria.datatables.getDefaultValuesMap();\n    // Work around for browsers that don't properly support ARIA.\n    // According to the ARIA W3C standard, user agents should allow\n    // setting empty value which results in setting the default value\n    // for the ARIA state if such exists. The exact text from the ARIA W3C\n    // standard (http://www.w3.org/TR/wai-aria/states_and_properties):\n    // \"When a value is indicated as the default, the user agent\n    // MUST follow the behavior prescribed by this value when the state or\n    // property is empty or undefined.\"\n    // The defaultValueMap contains the default values for the ARIA states\n    // and has as a key the goog.a11y.aria.State constant for the state.\n    if (stateName in defaultValueMap) {\n      element.setAttribute(attrStateName, defaultValueMap[stateName]);\n    } else {\n      element.removeAttribute(attrStateName);\n    }\n  } else {\n    element.setAttribute(attrStateName, value);\n  }\n};\n\n\n/**\n * Toggles the ARIA attribute of an element.\n * Meant for attributes with a true/false value, but works with any attribute.\n * If the attribute does not have a true/false value, the following rules apply:\n * A not empty attribute will be removed.\n * An empty attribute will be set to true.\n * @param {!Element} el DOM node for which to set attribute.\n * @param {!(goog.a11y.aria.State|string)} attr ARIA attribute being set.\n *     Automatically adds prefix 'aria-' to the attribute name if the attribute\n *     is not an extra attribute.\n */\ngoog.a11y.aria.toggleState = function(el, attr) {\n  var val = goog.a11y.aria.getState(el, attr);\n  if (!goog.string.isEmptyOrWhitespace(goog.string.makeSafe(val)) &&\n      !(val == 'true' || val == 'false')) {\n    goog.a11y.aria.removeState(el, /** @type {!goog.a11y.aria.State} */ (attr));\n    return;\n  }\n  goog.a11y.aria.setState(el, attr, val == 'true' ? 'false' : 'true');\n};\n\n\n/**\n * Remove the state or property for the element.\n * @param {!Element} element DOM node where we set state.\n * @param {!goog.a11y.aria.State} stateName State name.\n */\ngoog.a11y.aria.removeState = function(element, stateName) {\n  element.removeAttribute(goog.a11y.aria.getAriaAttributeName_(stateName));\n};\n\n\n/**\n * Gets value of specified state or property.\n * @param {!Element} element DOM node to get state from.\n * @param {!goog.a11y.aria.State|string} stateName State name.\n * @return {string} Value of the state attribute.\n */\ngoog.a11y.aria.getState = function(element, stateName) {\n  // TODO(user): return properly typed value result --\n  // boolean, number, string, null. We should be able to chain\n  // getState(...) and setState(...) methods.\n\n  var attr =\n      /** @type {string|number|boolean} */ (\n          element.getAttribute(\n              goog.a11y.aria.getAriaAttributeName_(stateName)));\n  var isNullOrUndefined = attr == null || attr == undefined;\n  return isNullOrUndefined ? '' : String(attr);\n};\n\n\n/**\n * Returns the activedescendant element for the input element by\n * using the activedescendant ARIA property of the given element.\n * @param {!Element} element DOM node to get activedescendant\n *     element for.\n * @return {?Element} DOM node of the activedescendant, if found.\n */\ngoog.a11y.aria.getActiveDescendant = function(element) {\n  var id =\n      goog.a11y.aria.getState(element, goog.a11y.aria.State.ACTIVEDESCENDANT);\n  return goog.dom.getOwnerDocument(element).getElementById(id);\n};\n\n\n/**\n * Sets the activedescendant ARIA property value for an element.\n * If the activeElement is not null, it should have an id set.\n * @param {!Element} element DOM node to set activedescendant ARIA property to.\n * @param {?Element} activeElement DOM node being set as activedescendant.\n */\ngoog.a11y.aria.setActiveDescendant = function(element, activeElement) {\n  var id = '';\n  if (activeElement) {\n    id = activeElement.id;\n    goog.asserts.assert(id, 'The active element should have an id.');\n  }\n\n  goog.a11y.aria.setState(element, goog.a11y.aria.State.ACTIVEDESCENDANT, id);\n};\n\n\n/**\n * Gets the label of the given element.\n * @param {!Element} element DOM node to get label from.\n * @return {string} label The label.\n */\ngoog.a11y.aria.getLabel = function(element) {\n  return goog.a11y.aria.getState(element, goog.a11y.aria.State.LABEL);\n};\n\n\n/**\n * Sets the label of the given element.\n * @param {!Element} element DOM node to set label to.\n * @param {string} label The label to set.\n */\ngoog.a11y.aria.setLabel = function(element, label) {\n  goog.a11y.aria.setState(element, goog.a11y.aria.State.LABEL, label);\n};\n\n\n/**\n * Asserts that the element has a role set if it's not an HTML element whose\n * semantics is well supported by most screen readers.\n * Only to be used internally by the ARIA library in goog.a11y.aria.*.\n * @param {!Element} element The element to assert an ARIA role set.\n * @param {!IArrayLike<string>} allowedRoles The child roles of\n * the roles.\n */\ngoog.a11y.aria.assertRoleIsSetInternalUtil = function(element, allowedRoles) {\n  if (goog.a11y.aria.TAGS_WITH_ASSUMED_ROLES_[element.tagName]) {\n    return;\n  }\n  var elementRole = /** @type {string}*/ (goog.a11y.aria.getRole(element));\n  goog.asserts.assert(\n      elementRole != null, 'The element ARIA role cannot be null.');\n\n  goog.asserts.assert(\n      goog.array.contains(allowedRoles, elementRole),\n      'Non existing or incorrect role set for element.' +\n          'The role set is \"' + elementRole + '\". The role should be any of \"' +\n          allowedRoles + '\". Check the ARIA specification for more details ' +\n          'http://www.w3.org/TR/wai-aria/roles.');\n};\n\n\n/**\n * Gets the boolean value of an ARIA state/property.\n * @param {!Element} element The element to get the ARIA state for.\n * @param {!goog.a11y.aria.State|string} stateName the ARIA state name.\n * @return {?boolean} Boolean value for the ARIA state value or null if\n *     the state value is not 'true', not 'false', or not set.\n */\ngoog.a11y.aria.getStateBoolean = function(element, stateName) {\n  var attr =\n      /** @type {string|boolean|null} */ (element.getAttribute(\n          goog.a11y.aria.getAriaAttributeName_(stateName)));\n  goog.asserts.assert(\n      typeof attr === 'boolean' || attr == null || attr == 'true' ||\n      attr == 'false');\n  if (attr == null) {\n    return attr;\n  }\n  return typeof attr === 'boolean' ? attr : attr == 'true';\n};\n\n\n/**\n * Gets the number value of an ARIA state/property.\n * @param {!Element} element The element to get the ARIA state for.\n * @param {!goog.a11y.aria.State|string} stateName the ARIA state name.\n * @return {?number} Number value for the ARIA state value or null if\n *     the state value is not a number or not set.\n */\ngoog.a11y.aria.getStateNumber = function(element, stateName) {\n  var attr =\n      /** @type {string|number} */ (\n          element.getAttribute(\n              goog.a11y.aria.getAriaAttributeName_(stateName)));\n  goog.asserts.assert(\n      (attr == null || !isNaN(Number(attr))) && typeof attr !== 'boolean');\n  return attr == null ? null : Number(attr);\n};\n\n\n/**\n * Gets the string value of an ARIA state/property.\n * @param {!Element} element The element to get the ARIA state for.\n * @param {!goog.a11y.aria.State|string} stateName the ARIA state name.\n * @return {?string} String value for the ARIA state value or null if\n *     the state value is empty string or not set.\n */\ngoog.a11y.aria.getStateString = function(element, stateName) {\n  var attr =\n      element.getAttribute(goog.a11y.aria.getAriaAttributeName_(stateName));\n  goog.asserts.assert(\n      (attr == null || typeof attr === 'string') &&\n      (attr == '' || isNaN(Number(attr))) && attr != 'true' && attr != 'false');\n  return (attr == null || attr == '') ? null : attr;\n};\n\n\n/**\n * Gets array of strings value of the specified state or\n * property for the element.\n * Only to be used internally by the ARIA library in goog.a11y.aria.*.\n * @param {!Element} element DOM node to get state from.\n * @param {!goog.a11y.aria.State} stateName State name.\n * @return {!IArrayLike<string>} string Array\n *     value of the state attribute.\n */\ngoog.a11y.aria.getStringArrayStateInternalUtil = function(element, stateName) {\n  var attrValue =\n      element.getAttribute(goog.a11y.aria.getAriaAttributeName_(stateName));\n  return goog.a11y.aria.splitStringOnWhitespace_(attrValue);\n};\n\n\n/**\n * Returns true if element has an ARIA state/property, false otherwise.\n * @param {!Element} element The element to get the ARIA state for.\n * @param {!goog.a11y.aria.State|string} stateName the ARIA state name.\n * @return {boolean}\n */\ngoog.a11y.aria.hasState = function(element, stateName) {\n  return element.hasAttribute(goog.a11y.aria.getAriaAttributeName_(stateName));\n};\n\n\n/**\n * Returns whether the element has a container ARIA role.\n * Container roles are ARIA roles that use the aria-activedescendant property\n * to manage their active descendants or children. See\n * {@link http://www.w3.org/TR/wai-aria/states_and_properties\n * #aria-activedescendant} for more information.\n * @param {!Element} element\n * @return {boolean}\n */\ngoog.a11y.aria.isContainerRole = function(element) {\n  var role = goog.a11y.aria.getRole(element);\n  return goog.array.contains(goog.a11y.aria.CONTAINER_ROLES_, role);\n};\n\n\n/**\n * Splits the input stringValue on whitespace.\n * @param {string} stringValue The value of the string to split.\n * @return {!IArrayLike<string>} string Array\n *     value as result of the split.\n * @private\n */\ngoog.a11y.aria.splitStringOnWhitespace_ = function(stringValue) {\n  return stringValue ? stringValue.split(/\\s+/) : [];\n};\n\n\n/**\n * Adds the 'aria-' prefix to ariaName.\n * @param {string} ariaName ARIA state/property name.\n * @private\n * @return {string} The ARIA attribute name with added 'aria-' prefix.\n * @throws {Error} If no such attribute exists.\n */\ngoog.a11y.aria.getAriaAttributeName_ = function(ariaName) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    goog.asserts.assert(ariaName, 'ARIA attribute cannot be empty.');\n    goog.asserts.assert(\n        goog.object.containsValue(goog.a11y.aria.State, ariaName),\n        'No such ARIA attribute ' + ariaName);\n  }\n  return goog.a11y.aria.ARIA_PREFIX_ + ariaName;\n};\n"],
"names":["goog","provide","require","a11y","aria","ARIA_PREFIX_","ROLE_ATTRIBUTE_","TAGS_WITH_ASSUMED_ROLES_","object","createSet","dom","TagName","A","AREA","BUTTON","HEAD","INPUT","LINK","MENU","META","OPTGROUP","OPTION","PROGRESS","STYLE","SELECT","SOURCE","TEXTAREA","TITLE","TRACK","CONTAINER_ROLES_","Role","COMBOBOX","GRID","GROUP","LISTBOX","MENUBAR","RADIOGROUP","ROW","ROWGROUP","TAB_LIST","TEXTBOX","TOOLBAR","TREE","TREEGRID","setRole","goog.a11y.aria.setRole","element","roleName","removeRole","asserts","ENABLE_ASSERTS","assert","containsValue","setAttribute","getRole","goog.a11y.aria.getRole","role","getAttribute","goog.a11y.aria.removeRole","removeAttribute","setState","goog.a11y.aria.setState","stateName","value","isArray","join","attrStateName","getAriaAttributeName_","undefined","defaultValueMap","datatables","getDefaultValuesMap","toggleState","goog.a11y.aria.toggleState","el","attr","val","getState","string","isEmptyOrWhitespace","makeSafe","removeState","goog.a11y.aria.removeState","goog.a11y.aria.getState","isNullOrUndefined","String","getActiveDescendant","goog.a11y.aria.getActiveDescendant","id","State","ACTIVEDESCENDANT","getOwnerDocument","getElementById","setActiveDescendant","goog.a11y.aria.setActiveDescendant","activeElement","getLabel","goog.a11y.aria.getLabel","LABEL","setLabel","goog.a11y.aria.setLabel","label","assertRoleIsSetInternalUtil","goog.a11y.aria.assertRoleIsSetInternalUtil","allowedRoles","tagName","elementRole","array","contains","getStateBoolean","goog.a11y.aria.getStateBoolean","getStateNumber","goog.a11y.aria.getStateNumber","isNaN","Number","getStateString","goog.a11y.aria.getStateString","getStringArrayStateInternalUtil","goog.a11y.aria.getStringArrayStateInternalUtil","attrValue","splitStringOnWhitespace_","hasState","goog.a11y.aria.hasState","hasAttribute","isContainerRole","goog.a11y.aria.isContainerRole","goog.a11y.aria.splitStringOnWhitespace_","stringValue","split","goog.a11y.aria.getAriaAttributeName_","ariaName"]
}
