{"version":3,"sources":["webapp/utilities.cljs"],"mappings":";AAGA,uCAAA,vCAAOA,sFAAeC;AAAtB,AAA+B,OAACC,uBAAOD;;AACvC,0CAAA,1CAAOE,4FAAkBC;AAAzB,AAAoC,OAACC,4BAASD;;AAC9C,4CAAA,5CAAOE,gGAAoBC;AAA3B,AAAwC,uBAAA,fAAMA;;AAC9C,0CAAA,1CAAOC,4FAAqBD;AAA5B,AACE,GAAI,AAACD,0CAAmBC;AAAxB;;AAEE,QAAA,+EAAA,bAA2BA;;;AAE/B,GAAA,QAAAE,mCAAAC,6CAAAC;AAAA;AAAA,AAAA,gCAAA,iBAAAC,6BAAA,AAAAC,6CAAA,3HAAUS;IAAVR,6BAAA,AAAAD,6CAAA;IAAAE,6BAAA,AAAAF,6CAAA;IAAAG,iCAAA,AAAAH,6CAAA;IAAAI,0BAAA,AAAAC,4CAAA,mCAAA,gEAAA,iBAAAC,eAAA;AAAA,AAAA,QAAAA,6CAAAA,+CAAAA;;AAAA,AAAA,YAAAC,kBAAA,AAAAC,+CAAA,mBAAA,mCAAA,4DAAAJ,wBAAAL,2BAAAE,2BAAAC,2BAAAC,xLAAuBO;;;AACvB,AAAAD,0EAAA,wEAAA,WACGE,EAAEvB,QAAQwB,YAAYrB,UAAUG;AADnC,AAEE,IAAMmB,qBAAgB,sDAAA,pDAAI,AAACvB,wCAAiBC,eAEpB,CAAA,2EAAA,XAAyBA;IAE3CuB,yBAAoB,iDAAA,/CAAI,AAAC3B,qCAAcC,aAEjB,CAAA,mEAAA,mBAAA,hCAAewB,sCAEV,AAACG,kDAAO,6CAAA,WAAAC,xDAACC;AAAD,AAAO,QAAA,wJAAA,OAAA,wJAAA,pQAAY,AAAA,kFAAAD,2EAAqB,AAAA,oFAAAA;aAFrD,MAAA,hBAEwE5B;AARpG,AAWE,uGAAA,/FAAK,AAACO,wCAAoBD,aACrBmB,mBACAC;;AAGT,AAAAL,0EAAA,yEAAA,WACGE,EAAEvB,QAAQwB,YAAYrB,UAAUG;AADnC,AAEE,IAAMmB,qBAAgB,sDAAA,pDAAI,AAACvB,wCAAiBC,eAEpB,CAAA,8EAAA,XAA2BA;IAC7C2B,sBAAiB,iDAAA,/CAAI,AAAC/B,qCAAcC,aAEjB,AAAC2B,kDAAO,6CAAA,WAAAI,xDAACF;AAAD,AAAO,QAAA,4KAAA,uJAAA,5PAA+B,AAAA,kFAAAE,mEAAa,AAAA,oFAAAA;GAAoB/B;AALxG,AAME,6DAAA,gHAAA,4DAAA,mFAAA,4BAAA,hVAAK,AAACO,wCAAoBD,sKAGrBmB,yFACyBD,qBACzBM;;AAGT,AAAAT,0EAAA,uFAAA,WACGE,EAAEvB,QAAQwB,YAAYrB,UAAUG;AADnC,AAEE,IAAMmB,qBAAgB,sDAAA,pDAAI,AAACvB,wCAAiBC,eAEpB,CAAA,mEAAA,XAAgBA;IAClC6B,0BAAwB,iDAAA,/CAAI,AAACjC,qCAAcC,aAEjB,AAAC2B,kDAAO,6CAAA,WAAAM,xDAACJ;AAAD,AAAO,QAAA,2JAAA,uJAAA,5PAAc,AAAA,kFAAAI,mEAAa,AAAA,oFAAAA;GAAoBjC;AAL9F,AAME,6DAAA,mDAAA,8BAAA,uEAAA,gCAAA,7OAAK,AAACO,wCAAoBD,6CAErBmB,2GAEaD,qBACbQ;;AAGT,0CAAA,1CAAME,4FACHC,OAAOC;AADV,AAEE,IAAMC,YAAU,KAAAC,KAAA,SAAA,UAAA,lBAAeH;IACzBI,OAAK,uBAAA,vBAAgBC;AAD3B,AAEE,CAAM,AAAQD,YAAM,AAAkBE,oBAAOJ;;AAC7C,kBAAA,lBAAeE,6BAAgBH;;AAC/B,AAAc,AAAQI,0BAAaD;;AACnC,AAAQA;;AACR,OAAc,AAAQC,0BAAaD","names":["webapp.utilities/empty-config?","configs","cljs.core/empty?","webapp.utilities/empty-agent-tag?","agent-tag","clojure.string/blank?","webapp.utilities/empty-agent-token?","agent-token","webapp.utilities/agent-token->script","js/webapp","js/webapp.utilities","js/webapp.utilities.script-agent","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__30622","cljs.core/MultiFn","cljs.core.symbol","webapp.utilities/script-agent","cljs.core/identity","_","secret-path","agent-tag->text","export-config->text","clojure.string.join","p1__30623#","cljs.core.mapv","env->string-helm","p1__30624#","env-string-docker-local","p1__30625#","webapp.utilities/download-string-as-csv","string","export-name","data-blob","js/Blob","link","js/document","js/URL"],"sourcesContent":["(ns webapp.utilities\n  (:require [clojure.string :as s]))\n\n(defn- empty-config? [configs] (empty? configs))\n(defn- empty-agent-tag? [agent-tag] (s/blank? agent-tag))\n(defn- empty-agent-token? [agent-token] (nil? agent-token))\n(defn- agent-token->script [agent-token]\n  (if (empty-agent-token? agent-token)\n    \"export AGENT_TOKEN=$(runops agents create-token -f)\\n\"\n    (str \"export AGENT_TOKEN=\" agent-token \"\\n\")))\n\n(defmulti script-agent identity)\n(defmethod script-agent :kubernets-bash\n  [_ configs secret-path agent-tag agent-token]\n  (let [agent-tag->text (if (empty-agent-tag? agent-tag)\n                          \"\"\n                          (str \"export AGENT_TAG=\" agent-tag \"\\n\"))\n\n        export-config->text (if (empty-config? configs)\n                              \"\"\n                              (str \"export \" secret-path \"=$(cat - <<EOF\\n\"\n                                   \"{\\n\"\n                                   (s/join (mapv #(str \"  \\\"\" (:key %) \"\\\": \" \"\\\"\" (:value %) \"\\\"\\n\") configs))\n                                   \"}\\n\"\n                                   \"EOF\\n)\\n\"))]\n    (str (agent-token->script agent-token)\n         agent-tag->text\n         export-config->text\n         \"curl -sL https://raw.githubusercontent.com/runopsio/agent/main/setup/k8s.sh | bash\")))\n\n(defmethod script-agent :kubernets-heml\n  [_ configs secret-path agent-tag agent-token]\n  (let [agent-tag->text (if (empty-agent-tag? agent-tag)\n                          \"\"\n                          (str \"\t--set config.tags=\" agent-tag \" \\\\\\n\"))\n        env->string-helm (if (empty-config? configs)\n                           \"\"\n                           (s/join (mapv #(str \"\t--set env_var[0].vars.\" (:key %) \"=\" (:value %) \" \\\\\\n\") configs)))]\n    (str (agent-token->script agent-token)\n         \"helm upgrade --install agent https://github.com/runopsio/agent/releases/download/0.14.3/agent-0.14.3.tgz \\\\\\n\"\n         \"\t--set config.token=$AGENT_TOKEN \\\\\\n\"\n         agent-tag->text\n         \"\t--set env_var[0].env=\" secret-path \" \\\\\\n\"\n         env->string-helm\n         \"\t--namespace runops\")))\n\n(defmethod script-agent :localhost-docker-bash\n  [_ configs secret-path agent-tag agent-token]\n  (let [agent-tag->text (if (empty-agent-tag? agent-tag)\n                          \"\"\n                          (str \"\t--tags \" agent-tag \" \\\\\\n\"))\n        env-string-docker-local (if (empty-config? configs)\n                                  \"\"\n                                  (s/join (mapv #(str \"\t--ev \" (:key %) \"=\" (:value %) \" \\\\\\n\") configs)))]\n    (str (agent-token->script agent-token)\n         \"runops agents docker-run \\\\\\n\"\n         agent-tag->text\n         \"\t--token $AGENT_TOKEN \\\\\\n\"\n         \"\t--envvar \" secret-path \" \\\\\\n\"\n         env-string-docker-local\n         \"\t--name agent --rm\")))\n\n(defn download-string-as-csv\n  [string export-name]\n  (let [data-blob (js/Blob. #js [string] #js {:type \"text/csv;charset=utf-8;\"})\n        link (.createElement js/document \"a\")]\n    (set! (.-href link) (.createObjectURL js/URL data-blob))\n    (.setAttribute link \"download\" export-name)\n    (.appendChild (.-body js/document) link)\n    (.click link)\n    (.removeChild (.-body js/document) link)))\n"]}