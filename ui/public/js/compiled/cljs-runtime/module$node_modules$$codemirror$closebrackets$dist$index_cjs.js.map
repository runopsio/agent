{
"version":3,
"file":"module$node_modules$$codemirror$closebrackets$dist$index_cjs.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/@codemirror/closebrackets/dist/index.cjs"],
"sourcesContent":["shadow$provide[\"module$node_modules$$codemirror$closebrackets$dist$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar view = require('@codemirror/view');\nvar state = require('@codemirror/state');\nvar rangeset = require('@codemirror/rangeset');\nvar text = require('@codemirror/text');\nvar language = require('@codemirror/language');\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}'\\\":;>\"\n};\nconst closeBracketEffect = state.StateEffect.define({\n    map(value, mapping) {\n        let mapped = mapping.mapPos(value, -1, state.MapMode.TrackAfter);\n        return mapped == null ? undefined : mapped;\n    }\n});\nconst skipBracketEffect = state.StateEffect.define({\n    map(value, mapping) { return mapping.mapPos(value); }\n});\nconst closedBracket = new class extends rangeset.RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nconst bracketState = state.StateField.define({\n    create() { return rangeset.RangeSet.empty; },\n    update(value, tr) {\n        if (tr.selection) {\n            let lineStart = tr.state.doc.lineAt(tr.selection.main.head).from;\n            let prevLineStart = tr.startState.doc.lineAt(tr.startState.selection.main.head).from;\n            if (lineStart != tr.changes.mapPos(prevLineStart, -1))\n                value = rangeset.RangeSet.empty;\n        }\n        value = value.map(tr.changes);\n        for (let effect of tr.effects) {\n            if (effect.is(closeBracketEffect))\n                value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });\n            else if (effect.is(skipBracketEffect))\n                value = value.update({ filter: from => from != effect.value });\n        }\n        return value;\n    }\n});\n/**\nExtension to enable bracket-closing behavior. When a closeable\nbracket is typed, its closing bracket is immediately inserted\nafter the cursor. When closing a bracket directly in front of a\nclosing bracket inserted by the extension, the cursor moves over\nthat bracket.\n*/\nfunction closeBrackets() {\n    return [view.EditorView.inputHandler.of(handleInput), bracketState];\n}\nconst definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return text.fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nfunction handleInput(view, from, to, insert) {\n    if (view.composing)\n        return false;\n    let sel = view.state.selection.main;\n    if (insert.length > 2 || insert.length == 2 && text.codePointSize(text.codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = insertBracket(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n}\n/**\nCommand that implements deleting a pair of matching brackets when\nthe cursor is between them.\n*/\nconst deleteBracketPair = ({ state: state$1, dispatch }) => {\n    let conf = config(state$1, state$1.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state$1.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state$1.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state$1.doc, range.head) == closing(text.codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: state.EditorSelection.cursor(range.head - token.length),\n                        userEvent: \"delete.backward\" };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state$1.update(changes, { scrollIntoView: true }));\n    return !dont;\n};\n/**\nClose-brackets related key bindings. Binds Backspace to\n[`deleteBracketPair`](https://codemirror.net/6/docs/ref/#closebrackets.deleteBracketPair).\n*/\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/**\nImplements the extension's behavior on text insertion. If the\ngiven string counts as a bracket in the language around the\nselection, and replacing the selection with it requires custom\nbehavior (inserting a closing version or skipping past a\npreviously-closed bracket), this function returns a transaction\nrepresenting that custom behavior. (You only need this if you want\nto programmatically insert brackets\u2014the\n[`closeBrackets`](https://codemirror.net/6/docs/ref/#closebrackets.closeBrackets) extension will\ntake care of running this for user input.)\n*/\nfunction insertBracket(state, bracket) {\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(text.codePointAt(tok, 0));\n        if (bracket == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (bracket == closed && closedBracketAt(state, state.selection.main.from))\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction closedBracketAt(state, pos) {\n    let found = false;\n    state.field(bracketState).between(0, state.doc.length, from => {\n        if (from == pos)\n            found = true;\n    });\n    return found;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, text.codePointSize(text.codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return text.codePointSize(text.codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state$1, open, close, closeBefore) {\n    let dont = null, changes = state$1.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                effects: closeBracketEffect.of(range.to + open.length),\n                range: state.EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state$1.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                effects: closeBracketEffect.of(range.head + open.length),\n                range: state.EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state$1.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction handleClose(state$1, _open, close) {\n    let dont = null, moved = state$1.selection.ranges.map(range => {\n        if (range.empty && nextChar(state$1.doc, range.head) == close)\n            return state.EditorSelection.cursor(range.head + close.length);\n        return dont = range;\n    });\n    return dont ? null : state$1.update({\n        selection: state.EditorSelection.create(moved, state$1.selection.mainIndex),\n        scrollIntoView: true,\n        effects: state$1.selection.ranges.map(({ from }) => skipBracketEffect.of(from))\n    });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state$1, token, allowTriple) {\n    let dont = null, changes = state$1.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                effects: closeBracketEffect.of(range.to + token.length),\n                range: state.EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state$1.doc, pos);\n        if (next == token) {\n            if (nodeStart(state$1, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: state.EditorSelection.cursor(pos + token.length) };\n            }\n            else if (closedBracketAt(state$1, pos)) {\n                let isTriple = allowTriple && state$1.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                return { range: state.EditorSelection.cursor(pos + token.length * (isTriple ? 3 : 1)),\n                    effects: skipBracketEffect.of(pos) };\n            }\n        }\n        else if (allowTriple && state$1.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            nodeStart(state$1, pos - 2 * token.length)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                effects: closeBracketEffect.of(pos + token.length),\n                range: state.EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state$1.charCategorizer(pos)(next) != state.CharCategory.Word) {\n            let prev = state$1.sliceDoc(pos - 1, pos);\n            if (prev != token && state$1.charCategorizer(pos)(prev) != state.CharCategory.Word)\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: state.EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state$1.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction nodeStart(state, pos) {\n    let tree = language.syntaxTree(state).resolveInner(pos + 1);\n    return tree.parent && tree.from == pos;\n}\n\nexports.closeBrackets = closeBrackets;\nexports.closeBracketsKeymap = closeBracketsKeymap;\nexports.deleteBracketPair = deleteBracketPair;\nexports.insertBracket = insertBracket;\n\n};"],
"names":["shadow$provide","global","require","module","exports","closing","ch","i","length","definedClosing","charCodeAt","charAt","text","fromCodePoint","handleInput","view","from","to","insert","composing","sel","state","selection","main","codePointSize","codePointAt","tr","insertBracket","dispatch","bracket","conf","languageDataAt","head","defaults","tokens","brackets","tok","closed","handleSame","indexOf","handleOpen","before","closedBracketAt","handleClose","pos","found","field","bracketState","between","doc","nextChar","next","sliceString","slice","state$1","open","close","closeBefore","dont","changes","changeByRange","range","empty","effects","closeBracketEffect","of","EditorSelection","anchor","test","cursor","update","scrollIntoView","userEvent","_open","moved","ranges","map","create","mainIndex","skipBracketEffect","token","allowTriple","nodeStart","isTriple","sliceDoc","charCategorizer","CharCategory","Word","prev","tree","language","syntaxTree","resolveInner","parent","Object","defineProperty","value","rangeset","StateEffect","define","mapping","mapped","mapPos","MapMode","TrackAfter","undefined","closedBracket","RangeValue","startSide","endSide","StateField","RangeSet","lineStart","lineAt","prevLineStart","startState","effect","is","add","filter","deleteBracketPair","closeBracketsKeymap","key","run","closeBrackets","EditorView","inputHandler"]
}
