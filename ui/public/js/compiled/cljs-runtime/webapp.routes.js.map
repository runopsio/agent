{"version":3,"sources":["webapp/routes.cljs"],"mappings":"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","names":["js/webapp","js/webapp.routes","js/webapp.routes.panels","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__32389","cljs.core/MultiFn","cljs.core.symbol","webapp.routes/panels","cljs.core/identity","webapp.routes/routes","webapp.routes/query-params-parser","queries","url-search-params","js/URLSearchParams","cljs.core/clj->js","cljs.core/empty?","webapp.routes/parse","url","cljs.core/deref","bidi.bidi/match-route","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","webapp.routes/url-for","seq32390","self__4852__auto__","cljs.core/seq","args","cljs.core.apply","bidi.bidi/path-for","cljs.core.into","cljs.core/flatten","webapp.routes/dispatch","route","panel","cljs.core.keyword","cljs.core/name","re-frame.core/dispatch","js/webapp.routes.history","webapp.routes/history","pushy.core/pushy","webapp.routes/navigate!","config","uri","webapp.routes.url_for","or__4253__auto__","webapp.routes/start!","re-frame.core/reg-fx"],"sourcesContent":["(ns webapp.routes\n  (:require\n   [bidi.bidi :as bidi]\n   [pushy.core :as pushy]\n   [re-frame.core :as re-frame]\n   [webapp.events :as events]))\n\n(defmulti panels identity)\n(defmethod panels :default\n  []\n  [:div\n   [:header.mb-large \"Page not found\"]\n   [:iframe {:src \"https://giphy.com/embed/hEc4k5pN17GZq\"\n             :width 480\n             :height \"auto\"\n             :frameBorder 0\n             :allowFullScreen true}]])\n\n(def routes\n  (atom\n   [\"/\" {\"\" :home\n         \"auth\" :auth\n         \"login\" :login\n         \"signup\" :signup\n         \"users\" :users\n         \"targets\" [[\"\" :targets]\n                    [\"/new\" :target-create]\n                    [[\"/\" :target-name \"/tasks/new\"] :new-task-with-target]\n                    [[\"/\" :name] :target-edit]]\n         \"slack-integration\" :slack-integration\n         \"agents\" :agents\n         \"tasks\" {\"\" :tasks\n                  \"/new\" :new-task\n                  [\"/\" :id] :task-detail}\n         \"quickstarts\" :quickstarts\n         \"settings\" {\"\" :settings\n                     \"/slack-integration/callback\" :slack-cb}\n         \"auth/callback\" :auth-callback\n         \"about\" :about}]))\n\n(defn query-params-parser\n  [queries]\n  (let [url-search-params (new js/URLSearchParams (clj->js queries))]\n    (if (not (empty? (.toString url-search-params)))\n      (str \"?\" (.toString url-search-params))\n      \"\")))\n\n(defn parse\n  [url]\n  (bidi/match-route @routes url))\n\n(defn url-for\n  [& args]\n  (apply bidi/path-for (into [@routes] (flatten args))))\n\n(defn dispatch\n  [route]\n  (let [panel (keyword (str (name (:handler route)) \"-panel\"))]\n    (re-frame/dispatch [::events/set-active-panel panel])))\n\n(defonce history\n  (pushy/pushy dispatch parse))\n\n(defn navigate!\n  [config]\n  (let [uri (str (url-for (:handler config) (or (:params config) []))\n                 (:query-params config))]\n    (pushy/set-token! history uri)))\n\n(defn start!\n  []\n  (pushy/start! history))\n\n(re-frame/reg-fx\n :navigate\n (fn [config]\n   (navigate! {:handler (:handler config)\n               :params (:params config)\n               :query-params (query-params-parser (:query-params config))})))\n\n"]}