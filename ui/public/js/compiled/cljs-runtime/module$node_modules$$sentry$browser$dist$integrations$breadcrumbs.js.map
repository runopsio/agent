{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$integrations$breadcrumbs.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/integrations/breadcrumbs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$integrations$breadcrumbs\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable max-lines */\nvar core_1 = require(\"@sentry/core\");\nvar types_1 = require(\"@sentry/types\");\nvar utils_1 = require(\"@sentry/utils\");\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = tslib_1.__assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /**\n     * Create a breadcrumb of `sentry` from the events themselves\n     */\n    Breadcrumbs.prototype.addSentryBreadcrumb = function (event) {\n        if (!this._options.sentry) {\n            return;\n        }\n        core_1.getCurrentHub().addBreadcrumb({\n            category: \"sentry.\" + (event.type === 'transaction' ? 'transaction' : 'event'),\n            event_id: event.event_id,\n            level: event.level,\n            message: utils_1.getEventDescription(event),\n        }, {\n            event: event,\n        });\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        var _this = this;\n        if (this._options.console) {\n            utils_1.addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._consoleBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'console',\n            });\n        }\n        if (this._options.dom) {\n            utils_1.addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._domBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'dom',\n            });\n        }\n        if (this._options.xhr) {\n            utils_1.addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._xhrBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'xhr',\n            });\n        }\n        if (this._options.fetch) {\n            utils_1.addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._fetchBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'fetch',\n            });\n        }\n        if (this._options.history) {\n            utils_1.addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._historyBreadcrumb.apply(_this, tslib_1.__spread(args));\n                },\n                type: 'history',\n            });\n        }\n    };\n    /**\n     * Creates breadcrumbs from console API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._consoleBreadcrumb = function (handlerData) {\n        var breadcrumb = {\n            category: 'console',\n            data: {\n                arguments: handlerData.args,\n                logger: 'console',\n            },\n            level: types_1.Severity.fromString(handlerData.level),\n            message: utils_1.safeJoin(handlerData.args, ' '),\n        };\n        if (handlerData.level === 'assert') {\n            if (handlerData.args[0] === false) {\n                breadcrumb.message = \"Assertion failed: \" + (utils_1.safeJoin(handlerData.args.slice(1), ' ') || 'console.assert');\n                breadcrumb.data.arguments = handlerData.args.slice(1);\n            }\n            else {\n                // Don't capture a breadcrumb for passed assertions\n                return;\n            }\n        }\n        core_1.getCurrentHub().addBreadcrumb(breadcrumb, {\n            input: handlerData.args,\n            level: handlerData.level,\n        });\n    };\n    /**\n     * Creates breadcrumbs from DOM API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._domBreadcrumb = function (handlerData) {\n        var target;\n        var keyAttrs = typeof this._options.dom === 'object' ? this._options.dom.serializeAttribute : undefined;\n        if (typeof keyAttrs === 'string') {\n            keyAttrs = [keyAttrs];\n        }\n        // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n        try {\n            target = handlerData.event.target\n                ? utils_1.htmlTreeAsString(handlerData.event.target, keyAttrs)\n                : utils_1.htmlTreeAsString(handlerData.event, keyAttrs);\n        }\n        catch (e) {\n            target = '<unknown>';\n        }\n        if (target.length === 0) {\n            return;\n        }\n        core_1.getCurrentHub().addBreadcrumb({\n            category: \"ui.\" + handlerData.name,\n            message: target,\n        }, {\n            event: handlerData.event,\n            name: handlerData.name,\n            global: handlerData.global,\n        });\n    };\n    /**\n     * Creates breadcrumbs from XHR API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._xhrBreadcrumb = function (handlerData) {\n        if (handlerData.endTimestamp) {\n            // We only capture complete, non-sentry requests\n            if (handlerData.xhr.__sentry_own_request__) {\n                return;\n            }\n            var _a = handlerData.xhr.__sentry_xhr__ || {}, method = _a.method, url = _a.url, status_code = _a.status_code, body = _a.body;\n            core_1.getCurrentHub().addBreadcrumb({\n                category: 'xhr',\n                data: {\n                    method: method,\n                    url: url,\n                    status_code: status_code,\n                },\n                type: 'http',\n            }, {\n                xhr: handlerData.xhr,\n                input: body,\n            });\n            return;\n        }\n    };\n    /**\n     * Creates breadcrumbs from fetch API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._fetchBreadcrumb = function (handlerData) {\n        // We only capture complete fetch requests\n        if (!handlerData.endTimestamp) {\n            return;\n        }\n        if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n            // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n            return;\n        }\n        if (handlerData.error) {\n            core_1.getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: handlerData.fetchData,\n                level: types_1.Severity.Error,\n                type: 'http',\n            }, {\n                data: handlerData.error,\n                input: handlerData.args,\n            });\n        }\n        else {\n            core_1.getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: tslib_1.__assign(tslib_1.__assign({}, handlerData.fetchData), { status_code: handlerData.response.status }),\n                type: 'http',\n            }, {\n                input: handlerData.args,\n                response: handlerData.response,\n            });\n        }\n    };\n    /**\n     * Creates breadcrumbs from history API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._historyBreadcrumb = function (handlerData) {\n        var global = utils_1.getGlobalObject();\n        var from = handlerData.from;\n        var to = handlerData.to;\n        var parsedLoc = utils_1.parseUrl(global.location.href);\n        var parsedFrom = utils_1.parseUrl(from);\n        var parsedTo = utils_1.parseUrl(to);\n        // Initial pushState doesn't provide `from` information\n        if (!parsedFrom.path) {\n            parsedFrom = parsedLoc;\n        }\n        // Use only the path component of the URL if the URL matches the current\n        // document (almost all the time when using pushState)\n        if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n            to = parsedTo.relative;\n        }\n        if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n            from = parsedFrom.relative;\n        }\n        core_1.getCurrentHub().addBreadcrumb({\n            category: 'navigation',\n            data: {\n                from: from,\n                to: to,\n            },\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexports.Breadcrumbs = Breadcrumbs;\n//# sourceMappingURL=breadcrumbs.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","core_1","types_1","utils_1","Breadcrumbs","options","name","id","_options","__assign","console","dom","fetch","history","sentry","xhr","prototype","addSentryBreadcrumb","Breadcrumbs.prototype.addSentryBreadcrumb","event","getCurrentHub","addBreadcrumb","category","type","event_id","level","message","getEventDescription","setupOnce","Breadcrumbs.prototype.setupOnce","_this","addInstrumentationHandler","callback","args","_i","arguments","length","_consoleBreadcrumb","apply","__spread","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","Breadcrumbs.prototype._consoleBreadcrumb","handlerData","breadcrumb","data","logger","Severity","fromString","safeJoin","slice","input","Breadcrumbs.prototype._domBreadcrumb","keyAttrs","serializeAttribute","undefined","target","htmlTreeAsString","e","Breadcrumbs.prototype._xhrBreadcrumb","endTimestamp","__sentry_own_request__","_a","__sentry_xhr__","method","url","status_code","body","Breadcrumbs.prototype._fetchBreadcrumb","fetchData","match","error","Error","response","status","Breadcrumbs.prototype._historyBreadcrumb","getGlobalObject","from","to","parsedLoc","parseUrl","location","href","parsedFrom","parsedTo","path","protocol","host","relative"]
}
