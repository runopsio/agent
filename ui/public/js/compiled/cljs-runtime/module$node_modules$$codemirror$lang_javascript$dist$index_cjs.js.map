{
"version":3,
"file":"module$node_modules$$codemirror$lang_javascript$dist$index_cjs.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/@codemirror/lang-javascript/dist/index.cjs"],
"sourcesContent":["shadow$provide[\"module$node_modules$$codemirror$lang_javascript$dist$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar javascript$1 = require('@lezer/javascript');\nvar language = require('@codemirror/language');\nvar highlight = require('@codemirror/highlight');\nvar autocomplete = require('@codemirror/autocomplete');\n\n/**\nA collection of JavaScript-related\n[snippets](https://codemirror.net/6/docs/ref/#autocomplete.snippet).\n*/\nconst snippets = [\n    autocomplete.snippetCompletion(\"function ${name}(${params}) {\\n\\t${}\\n}\", {\n        label: \"function\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"for (let ${name} of ${collection}) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"of loop\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"try {\\n\\t${}\\n} catch (${error}) {\\n\\t${}\\n}\", {\n        label: \"try\",\n        detail: \"block\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"class ${name} {\\n\\tconstructor(${params}) {\\n\\t\\t${}\\n\\t}\\n}\", {\n        label: \"class\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"import {${names}} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"named\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"import ${name} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"default\",\n        type: \"keyword\"\n    })\n];\n\n/**\nA language provider based on the [Lezer JavaScript\nparser](https://github.com/lezer-parser/javascript), extended with\nhighlighting and indentation information.\n*/\nconst javascriptLanguage = language.LRLanguage.define({\n    parser: javascript$1.parser.configure({\n        props: [\n            language.indentNodeProp.add({\n                IfStatement: language.continuedIndent({ except: /^\\s*({|else\\b)/ }),\n                TryStatement: language.continuedIndent({ except: /^\\s*({|catch\\b|finally\\b)/ }),\n                LabeledStatement: language.flatIndent,\n                SwitchBody: context => {\n                    let after = context.textAfter, closed = /^\\s*\\}/.test(after), isCase = /^\\s*(case|default)\\b/.test(after);\n                    return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;\n                },\n                Block: language.delimitedIndent({ closing: \"}\" }),\n                ArrowFunction: cx => cx.baseIndent + cx.unit,\n                \"TemplateString BlockComment\": () => -1,\n                \"Statement Property\": language.continuedIndent({ except: /^{/ }),\n                JSXElement(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                JSXEscape(context) {\n                    let closed = /\\s*\\}/.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"JSXOpenTag JSXSelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            language.foldNodeProp.add({\n                \"Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression\": language.foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            }),\n            highlight.styleTags({\n                \"get set async static\": highlight.tags.modifier,\n                \"for while do if else switch try catch finally return throw break continue default case\": highlight.tags.controlKeyword,\n                \"in of await yield void typeof delete instanceof\": highlight.tags.operatorKeyword,\n                \"let var const function class extends\": highlight.tags.definitionKeyword,\n                \"import export from\": highlight.tags.moduleKeyword,\n                \"with debugger as new\": highlight.tags.keyword,\n                TemplateString: highlight.tags.special(highlight.tags.string),\n                Super: highlight.tags.atom,\n                BooleanLiteral: highlight.tags.bool,\n                this: highlight.tags.self,\n                null: highlight.tags.null,\n                Star: highlight.tags.modifier,\n                VariableName: highlight.tags.variableName,\n                \"CallExpression/VariableName TaggedTemplateExpression/VariableName\": highlight.tags.function(highlight.tags.variableName),\n                VariableDefinition: highlight.tags.definition(highlight.tags.variableName),\n                Label: highlight.tags.labelName,\n                PropertyName: highlight.tags.propertyName,\n                PrivatePropertyName: highlight.tags.special(highlight.tags.propertyName),\n                \"CallExpression/MemberExpression/PropertyName\": highlight.tags.function(highlight.tags.propertyName),\n                \"FunctionDeclaration/VariableDefinition\": highlight.tags.function(highlight.tags.definition(highlight.tags.variableName)),\n                \"ClassDeclaration/VariableDefinition\": highlight.tags.definition(highlight.tags.className),\n                PropertyDefinition: highlight.tags.definition(highlight.tags.propertyName),\n                PrivatePropertyDefinition: highlight.tags.definition(highlight.tags.special(highlight.tags.propertyName)),\n                UpdateOp: highlight.tags.updateOperator,\n                LineComment: highlight.tags.lineComment,\n                BlockComment: highlight.tags.blockComment,\n                Number: highlight.tags.number,\n                String: highlight.tags.string,\n                ArithOp: highlight.tags.arithmeticOperator,\n                LogicOp: highlight.tags.logicOperator,\n                BitOp: highlight.tags.bitwiseOperator,\n                CompareOp: highlight.tags.compareOperator,\n                RegExp: highlight.tags.regexp,\n                Equals: highlight.tags.definitionOperator,\n                \"Arrow : Spread\": highlight.tags.punctuation,\n                \"( )\": highlight.tags.paren,\n                \"[ ]\": highlight.tags.squareBracket,\n                \"{ }\": highlight.tags.brace,\n                \"InterpolationStart InterpolationEnd\": highlight.tags.special(highlight.tags.brace),\n                \".\": highlight.tags.derefOperator,\n                \", ;\": highlight.tags.separator,\n                TypeName: highlight.tags.typeName,\n                TypeDefinition: highlight.tags.definition(highlight.tags.typeName),\n                \"type enum interface implements namespace module declare\": highlight.tags.definitionKeyword,\n                \"abstract global Privacy readonly override\": highlight.tags.modifier,\n                \"is keyof unique infer\": highlight.tags.operatorKeyword,\n                JSXAttributeValue: highlight.tags.attributeValue,\n                JSXText: highlight.tags.content,\n                \"JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag\": highlight.tags.angleBracket,\n                \"JSXIdentifier JSXNameSpacedName\": highlight.tags.tagName,\n                \"JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName\": highlight.tags.attributeName\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"] },\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*(?:case |default:|\\{|\\}|<\\/)$/,\n        wordChars: \"$\"\n    }\n});\n/**\nA language provider for TypeScript.\n*/\nconst typescriptLanguage = javascriptLanguage.configure({ dialect: \"ts\" });\n/**\nLanguage provider for JSX.\n*/\nconst jsxLanguage = javascriptLanguage.configure({ dialect: \"jsx\" });\n/**\nLanguage provider for JSX + TypeScript.\n*/\nconst tsxLanguage = javascriptLanguage.configure({ dialect: \"jsx ts\" });\n/**\nJavaScript support. Includes [snippet](https://codemirror.net/6/docs/ref/#lang-javascript.snippets)\ncompletion.\n*/\nfunction javascript(config = {}) {\n    let lang = config.jsx ? (config.typescript ? tsxLanguage : jsxLanguage)\n        : config.typescript ? typescriptLanguage : javascriptLanguage;\n    return new language.LanguageSupport(lang, javascriptLanguage.data.of({\n        autocomplete: autocomplete.ifNotIn([\"LineComment\", \"BlockComment\", \"String\"], autocomplete.completeFromList(snippets))\n    }));\n}\n\n/**\nConnects an [ESLint](https://eslint.org/) linter to CodeMirror's\n[lint](https://codemirror.net/6/docs/ref/#lint) integration. `eslint` should be an instance of the\n[`Linter`](https://eslint.org/docs/developer-guide/nodejs-api#linter)\nclass, and `config` an optional ESLint configuration. The return\nvalue of this function can be passed to [`linter`](https://codemirror.net/6/docs/ref/#lint.linter)\nto create a JavaScript linting extension.\n\nNote that ESLint targets node, and is tricky to run in the\nbrowser. The [eslint4b](https://github.com/mysticatea/eslint4b)\nand\n[eslint4b-prebuilt](https://github.com/marijnh/eslint4b-prebuilt/)\npackages may help with that.\n*/\nfunction esLint(eslint, config) {\n    if (!config) {\n        config = {\n            parserOptions: { ecmaVersion: 2019, sourceType: \"module\" },\n            env: { browser: true, node: true, es6: true, es2015: true, es2017: true, es2020: true },\n            rules: {}\n        };\n        eslint.getRules().forEach((desc, name) => {\n            if (desc.meta.docs.recommended)\n                config.rules[name] = 2;\n        });\n    }\n    return (view) => {\n        let { state } = view, found = [];\n        for (let { from, to } of javascriptLanguage.findRegions(state)) {\n            let fromLine = state.doc.lineAt(from), offset = { line: fromLine.number - 1, col: from - fromLine.from, pos: from };\n            for (let d of eslint.verify(state.sliceDoc(from, to), config))\n                found.push(translateDiagnostic(d, state.doc, offset));\n        }\n        return found;\n    };\n}\nfunction mapPos(line, col, doc, offset) {\n    return doc.line(line + offset.line).from + col + (line == 1 ? offset.col - 1 : -1);\n}\nfunction translateDiagnostic(input, doc, offset) {\n    let start = mapPos(input.line, input.column, doc, offset);\n    let result = {\n        from: start,\n        to: input.endLine != null && input.endColumn != 1 ? mapPos(input.endLine, input.endColumn, doc, offset) : start,\n        message: input.message,\n        source: input.ruleId ? \"jshint:\" + input.ruleId : \"jshint\",\n        severity: input.severity == 1 ? \"warning\" : \"error\",\n    };\n    if (input.fix) {\n        let { range, text } = input.fix, from = range[0] + offset.pos - start, to = range[1] + offset.pos - start;\n        result.actions = [{\n                name: \"fix\",\n                apply(view, start) {\n                    view.dispatch({ changes: { from: start + from, to: start + to, insert: text }, scrollIntoView: true });\n                }\n            }];\n    }\n    return result;\n}\n\nexports.esLint = esLint;\nexports.javascript = javascript;\nexports.javascriptLanguage = javascriptLanguage;\nexports.jsxLanguage = jsxLanguage;\nexports.snippets = snippets;\nexports.tsxLanguage = tsxLanguage;\nexports.typescriptLanguage = typescriptLanguage;\n\n};"],
"names":["shadow$provide","global","require","module","exports","mapPos","line","col","doc","offset","from","translateDiagnostic","input","start","column","result","to","endLine","endColumn","message","source","ruleId","severity","fix","range","text","pos","actions","name","apply","view","dispatch","changes","insert","scrollIntoView","Object","defineProperty","value","javascript$1","language","highlight","autocomplete","snippets","snippetCompletion","label","detail","type","javascriptLanguage","LRLanguage","define","parser","configure","props","indentNodeProp","add","IfStatement","continuedIndent","except","TryStatement","LabeledStatement","flatIndent","SwitchBody","context","after","textAfter","closed","test","isCase","baseIndent","unit","Block","delimitedIndent","closing","ArrowFunction","cx","TemplateString BlockComment","JSXElement","lineIndent","node","JSXEscape","foldNodeProp","foldInside","BlockComment","tree","styleTags","tags","modifier","controlKeyword","operatorKeyword","definitionKeyword","moduleKeyword","keyword","TemplateString","special","string","Super","atom","BooleanLiteral","bool","this","self","null","Star","VariableName","variableName","function","VariableDefinition","definition","Label","labelName","PropertyName","propertyName","PrivatePropertyName","className","PropertyDefinition","PrivatePropertyDefinition","UpdateOp","updateOperator","LineComment","lineComment","blockComment","Number","number","String","ArithOp","arithmeticOperator","LogicOp","logicOperator","BitOp","bitwiseOperator","CompareOp","compareOperator","RegExp","regexp","Equals","definitionOperator","punctuation","paren","squareBracket","brace","derefOperator","separator","TypeName","typeName","TypeDefinition","JSXAttributeValue","attributeValue","JSXText","content","angleBracket","tagName","attributeName","languageData","closeBrackets","brackets","commentTokens","block","open","close","indentOnInput","wordChars","typescriptLanguage","dialect","jsxLanguage","tsxLanguage","esLint","eslint","config","parserOptions","ecmaVersion","sourceType","env","browser","es6","es2015","es2017","es2020","rules","getRules","forEach","desc","meta","docs","recommended","state","found","findRegions","fromLine","lineAt","d","verify","sliceDoc","push","javascript","LanguageSupport","jsx","lang","typescript","data","of","ifNotIn","completeFromList"]
}
