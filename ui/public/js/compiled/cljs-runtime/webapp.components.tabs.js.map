{"version":3,"sources":["webapp/components/tabs.cljs"],"mappings":";AAIA,mCAAA,nCAAOA,8EAAWC,KAAKC;AAAvB,AAAA,0FAAA,gDAAA,2CAAA,6IAAA,6DAAA,tJAES,AAAA,mFAAOD;AAFhB,AAGe,IAAAE,WAAU,AAAA,mFAAOF;AAAjB,AAAA,wFAAAE,+BAAAA,/GAACD,yCAAAA,mDAAAA;GAHhB,gYAAA,qDAAA,MAAA,nYAIW,iPAAA,hPAAK,mHAAA,gCAAA,jIAAI,AAAA,0FAAUD,2VAKZ,mHAAA,OAAA,xGAAI,AAAA,0FAAUA,4BAC7B,AAAA,mFAAOA;;AAEV,uCAAA,vCAAOG,sFAAeH,KAAKI;AAA3B,AAAA,4DAAA,2CAAA,0DAAA,1GACGJ,qGAAYA,iEAAc,oEAAA,KAAA,vEAAI,AAACK,6CAAEL,KAAKI;;AAEzC,yCAAA,zCAAOE,0FAAiBC,UAAUC;AAAlC,AACE,OAACC,8CAAM,AAACE,4CACA,WAAAC;AAAA,AAAA,IAAAC,aAAAD;UAAA,AAAAE,4CAAAD,WAAA,IAAA,jEAAME;QAAN,AAAAD,4CAAAD,WAAA,IAAA,/DAAUG;AAAV,AACE,GAAI,AAACX,6CAAEU,IAAIP;AACT,uFAAA,uFAAA,oEAAA,3OAACS,mDAAMV,UAAUW,sGAAUH;;AAC3B,uFAAA,uFAAA,oEAAA,3OAACE,mDAAMV,UAAUW,sGAAUH;;GAJhC,AAAAL,gBAKEH;;AAEX;;;;;;;;;;;;;;;8BAAA,9BAAMY,oEAcHC;AAdH,AAeE,IAAMhB,gBAAc,iBAAAiB,mBAAI,AAAA,oGAAgBD;AAApB,AAAA,oBAAAC;AAAAA;;AAA4B,OAACC,gBAAM,AAAA,mFAAOF;;;IAGxDG,aAAW,AAACC,gDAAO,6CAAA,7CAACC,gFAEA,6CAAA,WAAAC,xDAACC;AAAD,AAAO,4CAAAD,rCAACvB,sDAAgBC;GAClB,AAAA,mFAAOgB;IACjCQ,YAAU,WAAKpB;AAAL,AACE,IAAAqB,qBAAC,AAAA,6FAAYT;AAAb,AAAA,CAAAS,mDAAAA,gEAAAA,fAAqBrB,4CAAAA;;AACrB,OAACF,uCAAgBiB,WAAWf;;AAT9C,AAUE,kBAAKQ;AAAL,AAAA,0FAAA,0EAAA,mFAAA,sEAAA,mFAAA,sGAAA,mFAAA,+FAAA,2CAAA,gEAAA,6DAMM,AAACP,8CAAM,AAACE,4CACA,WAAAmB;AAAA,AAAA,IAAAC,aAAAD;YAAA,AAAAhB,4CAAAiB,WAAA,IAAA,nEAAMf;YAAN,AAAAF,4CAAAiB,WAAA,IAAA,nEAAQC;AAAR,AACE,OAACjC,iCAAUiC,MAAMJ;GAFpB,AAAAlB,gBAGEa","names":["webapp.components.tabs/list-item","item","on-click","G__77221","webapp.components.tabs/state-builder","default-value","cljs.core._EQ_","webapp.components.tabs/update-tab-view","tabs-list","clicked-tab","cljs.core.doall","cljs.core/deref","cljs.core.map","p__77223","vec__77224","cljs.core.nth","key","_","cljs.core.swap_BANG_","cljs.core/assoc-in","webapp.components.tabs/tabs","config","or__4253__auto__","cljs.core/first","tabs-state","reagent.core.atom","cljs.core.into","p1__77228#","cljs.core.mapv","on-change","fexpr__77229","p__77230","vec__77232","value"],"sourcesContent":["(ns webapp.components.tabs\n  (:require\n   [reagent.core :as r]))\n\n(defn- list-item [item on-click]\n  [:a\n   {:key (:name item)\n    :on-click #(on-click (:name item))\n    :class (str (if (:current item)\n                  \"border-gray-900 text-gray-900\"\n                  \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200 cursor-pointer\")\n                \" whitespace-nowrap flex py-regular px-small border-b-2 font-medium text-sm\")\n    :role \"tab\"\n    :aria-current (if (:current item) \"page\" nil)}\n   (:name item)])\n\n(defn- state-builder [item default-value]\n  {item {:name item :current (if (= item default-value) true false)}})\n\n(defn- update-tab-view [tabs-list clicked-tab]\n  (doall (map\n          (fn [[key _]]\n            (if (= key clicked-tab)\n              (swap! tabs-list assoc-in [key :current] true)\n              (swap! tabs-list assoc-in [key :current] false)))\n          @tabs-list)))\n\n(defn tabs\n  \"on-change -> a lambda that will return the value clicked\n   default-value -> a name from the tabs list that has to be the default selected item. Default is the first item from tabs\n   tabs -> a list of symbols or strings for each tab to be shown\n\n  ;;;;;;;;;;;\n  ;; USAGE ;;\n  ;;;;;;;;;;;\n\n  [tabs/tabs\n    {:on-change #(println %) -> you can use this to manage a panel view\n     :tabs [:Tasks :Reviews] -> inside the tabs it mounts a complex state, no need to worry about it in your implementation\n     :default-value :Tasks}] -> optional, if not provided, it gets the first value from :tabs configuration\n  \"\n  [config]\n  (let [default-value (or (:default-value config) (first (:tabs config)))\n        ;; tabs-state model example\n        ;; {tab {:name tab :current true} tab {:name tab :current false}}\n        tabs-state (r/atom (into\n                            {}\n                            (mapv #(state-builder % default-value)\n                                  (:tabs config))))\n        on-change (fn [clicked-tab]\n                    ((:on-change config) clicked-tab)\n                    (update-tab-view tabs-state clicked-tab))]\n    (fn [_]\n      [:div.mb-regular\n       [:div.sm:block\n        [:div.border-b.border-gray-200\n         [:nav.-mb-px.flex.space-x-8\n          {:aria-label :Tabs}\n          (doall (map\n                  (fn [[_ value]]\n                    (list-item value on-change))\n                  @tabs-state))]]]])))\n"]}