{"version":3,"sources":["webapp/users/views/create_user_form.cljs"],"mappings":";AAWA,2CAAA,3CAAMA;AAAN,AAEE,IAAMC,YAAU,gDAAA,hDAACC;IACXC,QAAM,gDAAA,hDAACD;IACPE,SAAO,gDAAA,hDAACF;AAFd,AAGE;AAAA,AAAA,0FAAA,mDAAA,iHAAA,oBAAA,2CAAA,wDAAA,uBAAA,mFAAA,2EAAA,2CAAA,rXAGIO,obAEY,WAAKC;AAAL,AACE,AAAiBA;;AACjB,cAAA,2CAAA,qDAAA,AAAAJ,2BAAA,uDAAA,AAAAA,uBAAA,nNAAMK,0HAAgBV,kFACCE,gEACA,uCAAA,AAAAG,vCAACM,uDAAiCR;AAFzD,AAGE,8BAAA,mFAAA,1GAACS,0NAAsCF;WAV3D,iHAAA,2CAAA,uDAAA,YAAA,+DAAA,WAAAN,tNAWKS;AAXL,AAY8B,OAACC,sBAAOd,UAAU,AAAA,AAAAI;GAZhD,sDAAA,AAAAC,2BAAA,6DAAA,qBAAA,iHAAA,2CAAA,uDAAA,QAAA,+DAAA,WAAAC,lYAa0BN,gLAErBa;AAfL,AAgB8B,OAACC,sBAAOZ,MAAM,AAAA,AAAAI;GAhB5C,mEAAA,uBAAA,sDAAA,AAAAD,uBAAA,6DAAA,qBAAA,mFAAA,qFAAA,iHAAA,2CAAA,uDAAA,SAAA,+DAAA,WAAAE,viBAkB0BL,oVAGpBW;AArBN,AAsB+B,OAACC,sBAAOX,OAAO,AAAA,AAAAI;GAtB9C,mEAAA,yBAAA,sDAAA,AAAAF,iFAAA,mFAAA,pJAwB2BF,gCACvB,AAACY,kOAEA,mCAAA,2CAAA,sDAAA,SAAA,6DAAA,1MAACC;AAAD,AAC8B,8BAAA,mFAAA,1GAACJ;YAC/B,iCAAA,2CAAA,sDAAA,SAAA,qDAAA,hMAACK","names":["webapp.users.views.create-user-form/form","full-name","reagent.core.atom","email","groups","p1__33389#","cljs.core/deref","p1__33390#","p1__33391#","webapp.components.headings/h2","e","payload","webapp.formatters/comma-string-to-list","re-frame.core/dispatch","webapp.components.forms/input","cljs.core/reset!","webapp.components.divider/main","webapp.components.button/secondary","webapp.components.button/primary"],"sourcesContent":["(ns webapp.users.views.create-user-form\n  (:require [reagent.core :as r]\n            [re-frame.core :as rf]\n            [webapp.subs :as subs]\n            [webapp.formatters :as formatters]\n            [webapp.users.events :as events]\n            [webapp.components.headings :as h]\n            [webapp.components.button :as button]\n            [webapp.components.forms :as forms]\n            [webapp.components.divider :as divider]))\n\n(defn form\n  []\n  (let [full-name (r/atom \"\")\n        email (r/atom \"\")\n        groups (r/atom \"\")]\n    (fn\n      []\n      [:div\n       [h/h2 \"Create a new user\" {:class \"mb-4\"}]\n       [:form.mb-regular\n        {:on-submit (fn [e]\n                      (.preventDefault e)\n                      (let [payload {:name @full-name\n                                     :email @email\n                                     :groups (formatters/comma-string-to-list @groups)}]\n                        (rf/dispatch [::events/create-new-user payload])))}\n        [forms/input {:label \"Full name\"\n                      :on-change #(reset! full-name (-> % .-target .-value))\n                      :value @full-name\n                      :required true}]\n        [forms/input {:label \"Email\"\n                      :on-change #(reset! email (-> % .-target .-value))\n                      :placeholder \"user@yourcompany.com\"\n                      :value @email\n                      :required true}]\n        [:div.grid.gap-regular\n         [forms/input {:label \"Groups\"\n                       :on-change #(reset! groups (-> % .-target .-value))\n                       :placeholder \"Comma separated values\"\n                       :value @groups}]]\n        (divider/main)\n        [:div.grid.grid-cols-2.gap-regular\n         (button/secondary {:text \"Cancel\"\n                            :on-click #(rf/dispatch [:close-modal])})\n         (button/primary {:text \"Create\"\n                          :type \"submit\"})]]])))\n\n"]}