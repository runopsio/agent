{"version":3,"sources":["webapp/tasks/views/new_task/task_details.cljs"],"mappings":";;AAYA,0DAAA,1DAAOA,4HAAgBC;AAAvB,AAAA,0FAAA,mXAAA,2CAAA,oHAAA,mFAAA,yDAAA,mFAAA,mDAAA,2CAAA,oDAAA,/YAE2BA;;AAI3B,gDAAA,hDAAMC;AAAN,AACE,IAAMC,eAAa,sDAAA,mFAAA,zIAACC;IACdC,YAAU,kDAAA,7CAAKC;IACfC,IAAE,aAAA,UAAA,vBAAKF;AAAL,AAA0B,8BAAA,mFAAA,uEAAA,2CAAA,uDAAA,2DAAA,sDAAA,pYAACG;;AAFnC,AAGE;AAAA,AACE,IAAMC,OAAK,AAAA,oFAAA,AAAAC,gBAAQP;IACbQ,YAAU,AAAA,6FAAA,AAAAD,gBAAaP;AAD7B,AAAA,0FAAA,mDAAA,mFAAA,0FAAA,mFAAA,sEAAA,uQAAA,2CAAA,mFAAA,iZAAA,mFAAA,8FAAA,mFAAA,iFAAA,mFAAA,mDAAA,mFAAA,wHAAA,mBAAA,mFAAA,8MAAA,mFAAA,mDAAA,mFAAA,wHAAA,iBAAA,mFAAA,2MAAA,mFAAA,mDAAA,mFAAA,wHAAA,iBAAA,mFAAA,iSAAA,mFAAA,mDAAA,mFAAA,wHAAA,mBAAA,mFAAA,16GAKMS,8BAAK,CAAA,oDAAa,AAAA,gFAAKH,gPAEvB,6IAAA,hGAAK,AAAA,yFAAUA,aAEV,AAACI,2BAAoB,AAAA,yFAAUJ,u5BAKP,AAAA,sFAASA,6iBAGT,AAAA,mFAAOA,6iBAGP,AAAA,qFAAA,AAAA,mFAAIA,gjBAIhC,iBAAAK,mBAAI,AAAA,sFAASL;AAAb,AAAA,oBAAAK;AAAAA;;AAAA,0FAAA,+GAAA;;qBAxBP,mFAAA,mDAAA,mFAAA,wHAAA,mBAAA,mFAAA,+XAAA,mFAAA,yEAAA,mFAAA,+HAAA,mFAAA,2DAAA,mFAAA,mDAAA,mFAAA,l/BA2BmC,AAAA,wFAASL,8BACxC,uCAAA,+DAAA,tGAACM,iGAA4BN,23BAKG,iBAAAK,mBAAI,AAAA,kGAAcL;AAAlB,AAAA,oBAAAK;AAAAA;;AAAA,0FAAA,+GAAA;;6BAjCpC,mFAAA,iFAAA,mFAAA,gHAAA,mFAAA,8FAAA,yBAAA,mFAAA,oVAAA,mFAAA,3JAuCO,wDAAA,xDAACd,uOACkB,AAAA,wFAASS,8BAC9B,wTAAA,AAAA,mFAAA,2DAAA,2CAAA,wDAAA,qBAAA,gIAAA,2CAAA,mJAAA,oKAAA,2DAAA,OAAA,iKAAA,kJAAA,yKAAA,5jDAAM,EAAI,2IAAA,3IAACO,6CAAE,AAAA,wFAASP,sBAAiB,2IAAA,3IAACO,6CAAE,AAAA,wFAASP,6WAG/CQ,6IACO,AAAA,mFAAON,4EACD,AAAA,wFAASA,gJAER,AAAA,wFAASF,kEACb,AAAA,gFAAKA,8DACN,AAAA,mFAAOA","names":["webapp.tasks.views.new-task.task-details/copy-clipboard","data-clipboard-target","webapp.tasks.views.new-task.task-details/main","task-details","re_frame.core.subscribe","clipboard","js/module$node_modules$clipboard$dist$clipboard","_","re-frame.core/dispatch","task","cljs.core/deref","task-logs","webapp.components.headings/h2","webapp.formatters/time-ago","or__4253__auto__","webapp.tasks.views.reviewers/reviewers","cljs.core._EQ_","webapp.tasks.views.tasks-logs-container/main"],"sourcesContent":["(ns webapp.tasks.views.new-task.task-details\n  (:require\n   [re-frame.core :as rf]\n   [\"clipboard\" :as clipboardjs]\n   [webapp.subs :as subs]\n   [webapp.formatters :as formatters]\n   [webapp.tasks.views.reviewers :as reviewers]\n   [webapp.components.headings :as h]\n   [webapp.tasks.views.tasks-logs-container :as logs-container]))\n\n\n\n(defn- copy-clipboard [data-clipboard-target]\n  [:div.copy-to-clipboard.absolute.w-6.h-6.rounded-lg.p-x-small.top-2.right-2.bg-gray-200.cursor-pointer.shadow.box-border.opacity-0.group-hover:opacity-100.transition\n   {:data-clipboard-target data-clipboard-target}\n   [:figure\n    [:img {:src \"/icons/icon-copy.svg\"}]]])\n\n(defn main []\n  (let [task-details (rf/subscribe [::subs/active-task-details])\n        clipboard (new clipboardjs \".copy-to-clipboard\")\n        _ (.on clipboard \"success\" #(rf/dispatch [:show-snackbar {:level :success :text \"Text copied to clipboard\"}]))]\n    (fn []\n      (let [task (:task @task-details)\n            task-logs (:task-logs @task-details)]\n        [:div\n         [:header.flex.mb-regular\n          [:div.flex-grow\n           [h/h2 (str \"Task \" (:id task)) {}]\n           [:span.text-xs.text-gray-400\n            (str (:created task)\n                 \" - \"\n                 (formatters/time-ago (:created task)))]]]\n         [:section.grid.grid-cols-3\n          [:section.col-span-2\n           [:div\n            [:span.text-sm.text-gray-600.font-light \"Target: \"]\n            [:span.font-semibold.text-sm (:target task)]]\n           [:div\n            [:span.text-sm.text-gray-600.font-light \"Type: \"]\n            [:span.font-semibold.text-sm (:type task)]]\n           [:div\n            [:span.text-sm.text-gray-600.font-light \"User: \"]\n            [:span.font-semibold.text-sm (-> task :user :email)]]\n           [:div\n            [:span.text-sm.text-gray-600.font-light \"Redact: \"]\n            [:span.font-semibold.text-sm\n             (or (:redact task) [:span.text-xs.text-gray-400.italic \"This task has no information regards redaction\"])]]\n           [:div\n            [:span.text-sm.text-gray-600.font-light \"Status: \"]\n            [:span.font-semibold.text-sm (:status task)]]]\n          (reviewers/reviewers :opened task :tasks)]\n         [:div.pt-regular\n          [:div.grid.grid-cols-2.pb-regular.gap-large\n           [:section\n            [:div\n             [:span.text-sm.text-gray-800 (or (:description task)\n                                              [:span.text-xs.text-gray-400.italic \"This task has no description\"])]]]\n           [:section.col-span-2\n            [:header.flex.mb-regular.col-span-2\n             [:span.flex-grow.font-bold  \"Script\"]]\n            [:section.relative.rounded-lg.bg-gray-100.font-mono.p-regular.text-xs.overflow-auto.max-h-32.whitespace-pre.group\n             (copy-clipboard \"#task-script\")\n             [:span#task-script (:script task)]]]\n           (when (or (= (:status task) \"failure\") (= (:status task) \"success\"))\n             [:section\n              {:class \"col-span-2\"}\n              [logs-container/main\n               {:logs (:logs task-logs)\n                :log-status (:status task-logs)\n                :classes \"h-96\"\n                :task-status (:status task)\n                :task-id (:id task)\n                :target (:type task)}]])]]]))))\n"]}