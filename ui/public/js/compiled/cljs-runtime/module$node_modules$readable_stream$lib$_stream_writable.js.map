{
"version":3,
"file":"module$node_modules$readable_stream$lib$_stream_writable.js",
"lineCount":20,
"mappings":"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",
"sources":["node_modules/readable-stream/lib/_stream_writable.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$readable_stream$lib$_stream_writable\"] = function(global,require,module,exports) {\nvar process = require('process');\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n};"],
"names":["shadow$provide","global","require","module","exports","CorkedRequest","state","_this","entry","next","finish","this.finish","cb","callback","pendingcb","err","corkedRequestsFree","nop","WritableState","options","stream","Duplex","isDuplex","objectMode","writableObjectMode","hwm","highWaterMark","writableHwm","writableHighWaterMark","defaultHwm","Math","floor","destroyed","finished","ended","ending","needDrain","finalCalled","decodeStrings","defaultEncoding","length","writing","corked","sync","bufferProcessing","onwrite","this.onwrite","er","_writableState","writecb","writelen","pna","nextTick","finishMaybe","errorEmitted","emit","needFinish","bufferedRequest","clearBuffer","asyncWrite","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","Writable","realHasInstance","call","writable","write","_write","writev","_writev","destroy","_destroy","final","_final","Stream","doWrite","len","chunk","encoding","buffer","Array","holder","count","allBuffers","isBuf","callFinal","need","process","browser","indexOf","version","slice","setImmediate","util","Object","create","inherits","internalUtil","deprecate","Buffer","OurUint8Array","Uint8Array","destroyImpl","prototype","getBuffer","WritableState.prototype.getBuffer","current","out","push","defineProperty","get","_","Symbol","hasInstance","Function","value","object","pipe","Writable.prototype.pipe","Error","Writable.prototype.write","ret","isBuffer","obj","from","valid","TypeError","undefined","newChunk","last","cork","Writable.prototype.cork","uncork","Writable.prototype.uncork","setDefaultEncoding","Writable.prototype.setDefaultEncoding","toLowerCase","enumerable","Writable.prototype._write","end","Writable.prototype.end","once","set","_undestroy","undestroy","Writable.prototype._destroy"]
}
