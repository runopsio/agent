{"version":3,"sources":["webapp/tasks/views/item_detail.cljs"],"mappings":"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","names":["js/webapp","js/webapp.tasks","js/webapp.tasks.views","js/webapp.tasks.views.item-detail","js/webapp.tasks.views.item-detail.logs-area","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__31541","cljs.core/MultiFn","cljs.core.symbol","webapp.tasks.views.item-detail/logs-area","cljs.core/identity","_","logs","webapp.tasks.views.item-detail/copy-clipboard","data-clipboard-target","webapp.tasks.views.item-detail/run-task","task-details","cljs.core._EQ_","webapp.components.button/green","re-frame.core/dispatch","cljs.core.not_EQ_","webapp.tasks.views.item-detail/kill-task","user","re_frame.core.subscribe","task-id","dialog-text","on-success-dialog","open-dialog","cljs.core/deref","webapp.components.button/secondary","js/webapp.tasks.views.item-detail.item-view","fexpr__31560","webapp.tasks.views.item-detail/item-view","status","task","task-logs","clipboard","js/module$node_modules$clipboard$dist$clipboard","webapp.components.headings/h2","webapp.formatters/time-ago","or__4253__auto__","webapp.tasks.views.reviewers/reviewers","webapp.tasks.views.tasks-logs-container/main","webapp.tasks.views.item-detail/create-task","new-task","webapp.tasks.views.item-detail/submit-task-on-keydown","e","meta-key","key","and__4251__auto__","js/webapp.tasks.views.item-detail.logs-text","fexpr__31582","webapp.tasks.views.item-detail/logs-text","t","p1__31594#","p1__31593#","p1__31595#","p1__31596#","p1__31597#","targets","select-options-map","p1__31592#","cljs.core.map","cljs.core.into","textarea-config","target-select-config","webapp.components.forms/select","webapp.components.button/primary","webapp.components.forms/textarea","webapp.components.forms/input","webapp.tasks.views.item-detail/item-detail","active-task-details"],"sourcesContent":["(ns webapp.tasks.views.item-detail\n  (:require\n   [re-frame.core :as rf]\n   [\"clipboard\" :as clipboardjs]\n   [webapp.subs :as subs]\n   [webapp.formatters :as formatters]\n   [webapp.tasks.views.reviewers :as reviewers]\n   [webapp.tasks.views.tasks-logs-container :as logs-container]\n   [webapp.components.forms :as forms]\n   [webapp.components.button :as button]\n   [webapp.components.headings :as h]))\n\n(defmulti logs-area identity)\n(defmethod logs-area :success [_ logs] logs)\n(defmethod logs-area :loading [_ _]\n  [:div.flex.gap-small\n   [:span \"loading\"]\n   [:figure.w-4\n    [:img.animate-spin {:src \"/icons/icon-loader-circle.svg\"}]]])\n(defmethod logs-area :failure [_ _] \"There was an error to get the logs for this task\")\n(defmethod logs-area :default [_ _] \"Your logs couldn't be shown\")\n\n(defn copy-clipboard [data-clipboard-target]\n  [:div.copy-to-clipboard.absolute.w-6.h-6.rounded-lg.p-x-small.top-2.right-2.bg-gray-200.cursor-pointer.shadow.box-border.opacity-0.group-hover:opacity-100.transition\n   {:data-clipboard-target data-clipboard-target}\n   [:figure\n    [:img {:src \"/icons/icon-copy.svg\"}]]])\n\n(defn run-task [task-details]\n  (when (or (= (:status (:task task-details)) \"approved\")\n            (= (:status (:task task-details)) \"pending-review\"))\n    [:section\n     [:div\n      (button/green\n       :small\n       {:text [:span.flex.items-center.justify-center [:span :Run] [:img {:src \"/icons/icon-play-white.svg\"}]]\n        :on-click #(rf/dispatch [:run-task (:id (:task task-details))])\n        :disabled (when (not= (:status (:task task-details)) \"approved\") true)})]]))\n\n(defn- kill-task [task-details]\n  (let [user (rf/subscribe [::subs/user])\n        task-id (-> task-details :task :id)\n        dialog-text (str \"Are you sure you want to kill task \"\n                         task-id \"?\")\n        on-success-dialog #(rf/dispatch [:kill-task (:task task-details)])\n        open-dialog #(rf/dispatch [:open-dialog {:text dialog-text\n                                                 :on-success on-success-dialog}])]\n    (fn [task-details]\n      (when (and (= (-> task-details :task :status) \"running\")\n                 (= (-> task-details :task :user_id)\n                    (:id @user)))\n        [:div\n         [button/secondary {:text \"Kill task\"\n                            :outlined true\n                            :variant :small\n                            :on-click open-dialog}]]))))\n\n(defmulti item-view identity)\n(defmethod item-view :opened [status task-details]\n  (let [task (:task task-details)\n        task-logs (:task-logs task-details)\n        clipboard (new clipboardjs \".copy-to-clipboard\")]\n    (.on clipboard \"success\" #(rf/dispatch [:show-snackbar {:level :success :text \"Text copied to clipboard\"}]))\n    [:div\n     [:header.flex.mb-regular\n      [:div.flex-grow\n       [h/h2 (str \"Task \" (:id task)) {}]\n       [:span.text-xs.text-gray-400\n        (str (:created task)\n             \" - \"\n             (formatters/time-ago (:created task)))]]\n      [:div.flex-shrink [run-task task-details]]\n      [:div.flex-shrink [kill-task task-details]]]\n\n     [:section.grid.grid-cols-3\n      [:section.col-span-2\n       [:div\n        [:span.text-sm.text-gray-600.font-light \"Target: \"]\n        [:span.font-semibold.text-sm (:target task)]]\n       [:div\n        [:span.text-sm.text-gray-600.font-light \"Type: \"]\n        [:span.font-semibold.text-sm (:type task)]]\n       [:div\n        [:span.text-sm.text-gray-600.font-light \"User: \"]\n        [:span.font-semibold.text-sm (-> task :user :email)]]\n       [:div\n        [:span.text-sm.text-gray-600.font-light \"Redact: \"]\n        [:span.font-semibold.text-sm\n         (or (:redact task) [:span.text-xs.text-gray-400.italic \"This task has no information regards redaction\"])]]\n       [:div\n        [:span.text-sm.text-gray-600.font-light \"Status: \"]\n        [:span.font-semibold.text-sm (-> task :status)]]]\n      (reviewers/reviewers status task :tasks)]\n     [:div.pt-regular\n      [:div.grid.grid-cols-2.pb-regular.gap-large\n       [:section\n        [:div\n         [:span.text-sm.text-gray-800 (or (:description task)\n                                          [:span.text-xs.text-gray-400.italic \"This task has no description\"])]]]\n       [:section.col-span-2\n        [:header.flex.mb-regular.col-span-2\n         [:span.flex-grow.font-bold  \"Script\"]\n         [:span.flex-shrink.cursor-pointer.text-xs.text-blue-500.place-self-end\n          {:on-click #(rf/dispatch [:recreate-existing-task\n                                    {:script (:script task)\n                                     :target (:target task)}])}\n          \"Copy this script to a new task\"]]\n        [:section.relative.rounded-lg.bg-gray-100.font-mono.p-regular.text-xs.overflow-auto.max-h-32.whitespace-pre.group\n         (copy-clipboard \"#task-script\")\n         [:span#task-script (:script task)]]]\n       (when (or (= (:status task) \"failure\") (= (:status task) \"success\"))\n         [:section.col-span-2\n\n          [logs-container/main\n           {:logs (:logs task-logs)\n            :log-status (:status task-logs)\n            :task-status (:status task)\n            :classes \"h-96\"\n            :task-id (:id task)\n            :target (:type task)}]])]]]))\n\n(defn create-task []\n  (let [new-task @(rf/subscribe [::subs/new-task])]\n    (rf/dispatch [:create-new-task\n                  {:script (:script new-task)\n                   :target (:target new-task)\n                   :description (:description new-task)}])))\n\n(defn submit-task-on-keydown [e]\n  (let [meta-key (.-metaKey e)\n        key (.-keyCode e)]\n    (when (and meta-key (= key 13)) (create-task))))\n\n(defmulti logs-text identity)\n(defmethod logs-text \"pending-review\" [_]\n  \"This task needs to be approved by a reviewer\")\n(defmethod logs-text :default [_ t] t)\n\n(defmethod item-view :new-task [_ _]\n  (let [new-task @(rf/subscribe [::subs/new-task])\n        targets @(rf/subscribe [::subs/targets])\n        select-options-map (map\n                            #(into {} {:value (:name %) :text (:name %)})\n                            targets)\n        textarea-config\n        {:value (or (:script new-task) \"\")\n         :on-change #(rf/dispatch [:set-new-task-script (-> % .-target .-value)])\n         :on-keyDown #(submit-task-on-keydown %)\n         :placeholder \"Insert your script here\"\n         :autoFocus true\n         :name \"script_area\"\n         :id \"script_area\"\n         :rows 10\n         :classes \"font-mono\"}\n        target-select-config\n        {:on-change #(rf/dispatch [:set-new-task-target (-> % .-target .-value)])\n         :label \"Target\"\n         :selected (or (:target new-task) \"\")\n         :options select-options-map}]\n    [:section\n     [:div.flex.items-end.gap-regular\n      [:div.mb-regular.place-self-center.flex-grow\n       (h/h2 \"New task\" {})]\n      [:div.flex.flex-grow.justify-end\n       [:div.w-full\n        (forms/select target-select-config)]]\n      [:div.flex-shrink.mb-regular\n       (button/primary\n        {:text :Create\n         :disabled (or (= (:target new-task) \"\") (= (:script new-task) \"\") (= (:status new-task) :loading))\n         :on-click #(create-task)})]]\n     [:div\n      [:form {:name \"script_form\"}\n       [forms/textarea textarea-config]\n       [forms/input {:name \"task_description\"\n                     :label \"Description\"\n                     :placeholder \"Add a description in your task (optional)\"\n                     :on-change #(rf/dispatch [:set-new-task-description (-> % .-target .-value)])\n                     :on-keyDown #(submit-task-on-keydown %)\n                     :value (or (:description new-task) \"\")}]]]\n\n     [logs-container/main\n      {:logs (:task_logs (:result new-task))\n       :log-status (:status new-task)\n       :task-status (:status (:result new-task))\n       :target (:type (:result new-task))}]]))\n\n(defmethod item-view :default [_]\n  [:div.flex.justify-center.items-center.h-full\n   [:span.text-xl.text-gray-400 \"No task selected\"]])\n\n(defmethod item-view :loading [_ task-details]\n  (item-view :opened task-details))\n\n(defn item-detail []\n  (let [active-task-details @(rf/subscribe [::subs/active-task-details])]\n    (item-view\n     (:status active-task-details)\n     active-task-details)))\n\n"]}