{"version":3,"sources":["webapp/quickstarts/views/main_modal.cljs"],"mappings":"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","names":["p__30411","map__30412","cljs.core/--destructure-map","cljs.core.get","cljs.core/deref","webapp.quickstarts.views.main-modal/checkbox","name","description","checked","text","js/localStorage","cljs.core/not","cljs.core/reset!","webapp.quickstarts.views.main-modal/checkbox-disabled-quickstart","reagent.core.atom","webapp.quickstarts.views.main-modal/get-config-keys","key","webapp.targets.constants/target-configs-required","webapp.quickstarts.views.main-modal/select-area","target-type","configs","disabled?","p1__30415#","change-target-type","value","cljs.core.keyword","webapp.components.forms/select","webapp.targets.constants/targets-types-list","p__30420","map__30421","webapp.quickstarts.views.main-modal/config->inputs","index","config","key-val","value-val","save","k","v","cljs.core.swap_BANG_","cljs.core/assoc-in","p1__30418#","webapp.components.forms/input","webapp.quickstarts.views.main-modal/config-inputs-for","cljs.core.doall","iter__4652__auto__","s__30423","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__30425","cljs.core/chunk-buffer","i__30424","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__30422","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core.range","webapp.quickstarts.views.main-modal/config->json-stringify","cljs.core.println","cljs.core.filter","p__30432","map__30433","clojure.string/blank?","cljs.core.map","p__30430","map__30431","cljs.core.reduce","cljs.core/into","cljs.core/clj->js","js/JSON","p__30436","map__30437","webapp.quickstarts.views.main-modal/manage->main-area","current-step","config-atom","fx-change-step","target-name-atom","target-type-atom","fx-create-target-request","fx-get-current-step-infos","G__30438","cljs.core/Keyword","js/Error","webapp.quickstarts.views.environment-step-modal/main","webapp.quickstarts.views.task-step-modal/main","js/webapp","js/webapp.quickstarts","js/webapp.quickstarts.views","js/webapp.quickstarts.views.main-modal","js/webapp.quickstarts.views.main-modal.show-snackbar","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","fexpr__30439","cljs.core/MultiFn","cljs.core.symbol","webapp.quickstarts.views.main-modal/show-snackbar","cljs.core/identity","_","re-frame.core/dispatch","webapp.quickstarts.views.main-modal/container","steppers","target-name","selects-disabled?","get-current-step-infos","G__30453","fexpr__30452","get-index","clojure.string.index_of","cljs.core/keys","get-step","direction","cljs.core.nth","G__30454","go-next-step","go-back-step","change-step","step","new-status","cljs.core/update-in","cljs.core/assoc","create-target-request","webapp.http.runops-api/request","cljs.core.merge","webapp.components.headings/h2","webapp.components.divider/main","webapp.components.headings/h3","webapp.components.stepper/main","webapp.components.button/secondary","and__4251__auto__","cljs.core._EQ_","webapp.components.button/primary","cljs.core.not_EQ_","webapp.quickstarts.views.main-modal/main","tasks","re_frame.core.subscribe","user","user-groups","admin?","p1__30458#","cljs.core/some","results","status","quickstart-modal-disabled","cljs.core/empty?","cljs.core/chunk-first"],"sourcesContent":["(ns webapp.quickstarts.views.main-modal\n  (:require [re-frame.core :as rf]\n            [reagent.core :as r]\n            [clojure.string :as s]\n            [webapp.components.button :as button]\n            [webapp.components.divider :as divider]\n            [webapp.components.forms :as forms]\n            [webapp.components.headings :as headings]\n            [webapp.components.stepper :as stepper]\n            [webapp.quickstarts.views.environment-step-modal :as environment-step]\n            [webapp.quickstarts.views.task-step-modal :as task-step]\n            [webapp.targets.constants :as constants]\n            [webapp.http.runops-api :as runops-api]\n            [webapp.subs :as subs]))\n\n(defn checkbox\n  [{:keys [name description checked text]}]\n  [:div {:class \"relative flex items-start\"}\n   [:div {:class \"flex items-center h-5\"}\n    [:input {:id (str \"checkbox-\" name)\n             :name (str \"checkbox-name-\" name)\n             \"aria-describedby\" description\n             :type \"checkbox\"\n             :checked @checked\n             :on-change #(do\n                           (.setItem js/localStorage \"quickstart-modal-disabled\" (not @checked))\n                           (reset! checked (not @checked)))\n             :class \"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"}]]\n   [:div {:class \"ml-3 text-sm\"}\n    [:span {:id description\n            :class \"text-gray-500\"}\n     text]]])\n\n(def checkbox-disabled-quickstart (r/atom false))\n\n(defn get-config-keys\n  [key]\n  (get constants/target-configs-required key))\n\n(defn select-area\n  [target-type configs disabled?]\n  (let [change-target-type (fn [value]\n                             (reset! target-type value)\n                             (reset! configs (get-config-keys (keyword value))))]\n    [:div {:class \"grid grid-cols-3 gap-regular\"}\n     [forms/select {:label \"What you would like to connect?\"\n                    :on-change #(change-target-type (-> % .-target .-value))\n                    :selected @target-type\n                    :disabled disabled?\n                    :options constants/targets-types-list}]]))\n\n(defn config->inputs\n  [{:keys [key value]} index config]\n  (let [key-val (r/atom key)\n        value-val (r/atom value)\n        save (fn [k v] (swap! config assoc-in [index k] v))]\n    (fn []\n      [:<>\n       [forms/input {:classes \"whitespace-pre overflow-x\"\n                     :disabled true\n                     :value @key-val}]\n       [forms/input {:classes \"whitespace-pre overflow-x\"\n                     :on-change #(reset! value-val (-> % .-target .-value))\n                     :on-blur #(save :value @value-val)\n                     :type \"password\"\n                     :value @value-val}]])))\n\n(defn config-inputs-for\n  [config]\n  (fn []\n    (doall\n     (for [index (range (count @config))]\n       ^{:key (get @config index)} [config->inputs (get @config index) index config]))))\n\n(defn config->json-stringify\n  [configs]\n  (println configs)\n  (->> configs\n       (filter (fn [{:keys [key value]}]\n                 (not (or (s/blank? key) (s/blank? value)))))\n       (map (fn [{:keys [key value]}] {key value}))\n       (reduce into {})\n       (clj->js)\n       (.stringify js/JSON)))\n\n(defn manage->main-area\n  [{:keys [current-step\n           config-atom\n           fx-change-step\n           target-name-atom\n           target-type-atom\n           fx-create-target-request\n           fx-get-current-step-infos]}]\n  (case current-step\n    :agent [environment-step/main (config-inputs-for config-atom) fx-create-target-request {:target-name target-name-atom\n                                                                                            :target-type target-type-atom\n                                                                                            :fx-get-current-step-infos fx-get-current-step-infos}]\n    :task [task-step/main fx-change-step @target-name-atom]))\n\n(defmulti show-snackbar identity)\n(defmethod show-snackbar :verified [_]\n  (rf/dispatch [:show-snackbar {:level :success :text \"Agent verified and target successfully created!\"}]))\n(defmethod show-snackbar :not-up [_]\n  (rf/dispatch [:show-snackbar {:level :error :text \"Agent is not working! Please verify your configurations.\"}]))\n(defmethod show-snackbar :not-exist [_]\n  (rf/dispatch [:show-snackbar {:level :error :text \"Agent not found! Please verify your configurations.\"}]))\n(defmethod show-snackbar :agent-failure [_]\n  (rf/dispatch [:show-snackbar {:level :error :text \"Agent not verified! Please try again in a few minutes.\"}]))\n(defmethod show-snackbar :target-failure [_]\n  (rf/dispatch [:show-snackbar {:level :error :text \"Target not created! Please try again in a few minutes.\"}]))\n\n(defn container\n  []\n  (let [steppers (r/atom {:agent {:status \"current\"\n                                  :title \"Connection's configuration\"\n                                  :text \"It will create your connection.\"}\n                          :task {:status \"upcoming\"\n                                 :title \"Task running\"\n                                 :text \"It will test your connection running a task of yours.\"}})\n        current-step (r/atom :agent)\n        target-type (r/atom \"mysql\")\n        target-name (r/atom \"\")\n        configs (r/atom (get-config-keys (keyword @target-type)))\n        selects-disabled? (r/atom false)\n\n        get-current-step-infos #(@current-step @steppers)\n        get-index #(s/index-of (keys @steppers) @current-step)\n        get-step (fn [direction] (nth (keys @steppers) (case direction\n                                                         \"next\" (+ (get-index) 1)\n                                                         \"back\" (- (get-index) 1)) false))\n\n        go-next-step #(reset! current-step (if (get-step \"next\") (get-step \"next\") @current-step))\n        go-back-step #(reset! current-step (if (get-step \"back\") (get-step \"back\") @current-step))\n\n        change-step (fn [step new-status] (swap! steppers update-in [step] assoc :status new-status))\n        create-target-request #(runops-api/request {:method \"POST\"\n                                                    :uri \"/v1/targets\"\n                                                    :body (merge {:name @target-name\n                                                                  :type @target-type\n                                                                  :groups nil\n                                                                  :secret_provider \"runops\"\n                                                                  :tags \"test\"\n                                                                  :config (config->json-stringify @configs)})\n                                                    :on-failure (fn [_]\n                                                                  (show-snackbar :target-failure))\n                                                    :on-success (fn [_]\n                                                                  (change-step :agent \"complete\")\n                                                                  (change-step :task \"current\")\n                                                                  (reset! selects-disabled? true)\n                                                                  (show-snackbar :verified))})]\n\n    (fn []\n      [:<>\n       [:div {:class \"grid grid-cols-4 items-center mb-large\"}\n        [headings/h2 \"Quickstarts\"]]\n       [select-area target-type configs @selects-disabled?]\n       (divider/main)\n       [:div {:class \"py-6\"}\n        (if (s/blank? @target-type)\n          [:div {:class \"flex justify-center items-center h-96\"}\n           [headings/h3\n            \"Choose one target type to start.\"]]\n          [:div {:class \"max-w-7xl px-8 grid grid-cols-12 gap-16\"}\n           [:div {:class \"col-span-4 flex flex-col justify-between my-large\"}\n            [:nav {:class \"sticky top-6 divide-y divide-gray-300\"}\n             (stepper/main @steppers)]\n            [checkbox {:name \"cancel-quickstart-modal\"\n                       :description \"checkbox for disabled quickstart modal\"\n                       :checked checkbox-disabled-quickstart\n                       :text \"I do not want to see this quickstart anymore.\"}]]\n\n           [:main {:class \"col-span-8\"}\n            [manage->main-area {:current-step @current-step\n                                :config-atom configs\n                                :fx-change-step change-step\n                                :target-name-atom target-name\n                                :target-type-atom target-type\n                                :fx-create-target-request create-target-request\n                                :fx-get-current-step-infos get-current-step-infos}]\n            (divider/main)\n            [:div {:class \"grid grid-cols-2 gap-x-x-large\"}\n             (if (get-step \"back\")\n               (button/secondary {:text \"Back\"\n                                  :outlined true\n                                  :on-click #(go-back-step)})\n               [:div {:class \"col-span-1\"}])\n             (if (and (get-step \"next\") (= (:status (get-current-step-infos)) \"complete\"))\n               (button/primary {:text \"Next\"\n                                :disabled (not= (:status (get-current-step-infos)) \"complete\")\n                                :on-click #(go-next-step)})\n               [:div {:class \"col-span-1\"}])]]])]])))\n\n(defn main []\n  (let [tasks (rf/subscribe [::subs/tasks])\n        user (rf/subscribe [::subs/user])]\n    (fn []\n      (let [user-groups (:groups @user)\n            admin? (some #(= \"admin\" %) user-groups)\n            results (:results @tasks)\n            status (:status @tasks)\n            quickstart-modal-disabled (.getItem js/localStorage \"quickstart-modal-disabled\")]\n        (when-not quickstart-modal-disabled\n          (when (and (empty? results) (= status :success) admin?)\n            (rf/dispatch [:open-modal [container] :large])))))))\n"]}