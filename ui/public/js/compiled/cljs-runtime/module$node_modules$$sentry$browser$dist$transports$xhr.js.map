{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$transports$xhr.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/transports/xhr.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$transports$xhr\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@sentry/core\");\nvar types_1 = require(\"@sentry/types\");\nvar utils_1 = require(\"@sentry/utils\");\nvar base_1 = require(\"./base\");\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        return this._sendRequest(core_1.eventToSentryRequest(event, this._api), event);\n    };\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendSession = function (session) {\n        return this._sendRequest(core_1.sessionToSentryRequest(session, this._api), session);\n    };\n    /**\n     * @param sentryRequest Prepared SentryRequest to be delivered\n     * @param originalPayload Original payload used to create SentryRequest\n     */\n    XHRTransport.prototype._sendRequest = function (sentryRequest, originalPayload) {\n        var _this = this;\n        if (this._isRateLimited(sentryRequest.type)) {\n            this.recordLostEvent(types_1.Outcome.RateLimitBackoff, sentryRequest.type);\n            return Promise.reject({\n                event: originalPayload,\n                type: sentryRequest.type,\n                reason: \"Transport for \" + sentryRequest.type + \" requests locked till \" + this._disabledUntil(sentryRequest.type) + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        return this._buffer\n            .add(function () {\n            return new utils_1.SyncPromise(function (resolve, reject) {\n                var request = new XMLHttpRequest();\n                request.onreadystatechange = function () {\n                    if (request.readyState === 4) {\n                        var headers = {\n                            'x-sentry-rate-limits': request.getResponseHeader('X-Sentry-Rate-Limits'),\n                            'retry-after': request.getResponseHeader('Retry-After'),\n                        };\n                        _this._handleResponse({ requestType: sentryRequest.type, response: request, headers: headers, resolve: resolve, reject: reject });\n                    }\n                };\n                request.open('POST', sentryRequest.url);\n                for (var header in _this.options.headers) {\n                    if (Object.prototype.hasOwnProperty.call(_this.options.headers, header)) {\n                        request.setRequestHeader(header, _this.options.headers[header]);\n                    }\n                }\n                request.send(sentryRequest.body);\n            });\n        })\n            .then(undefined, function (reason) {\n            // It's either buffer rejection or any other xhr/fetch error, which are treated as NetworkError.\n            if (reason instanceof utils_1.SentryError) {\n                _this.recordLostEvent(types_1.Outcome.QueueOverflow, sentryRequest.type);\n            }\n            else {\n                _this.recordLostEvent(types_1.Outcome.NetworkError, sentryRequest.type);\n            }\n            throw reason;\n        });\n    };\n    return XHRTransport;\n}(base_1.BaseTransport));\nexports.XHRTransport = XHRTransport;\n//# sourceMappingURL=xhr.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","core_1","types_1","utils_1","XHRTransport","_super","apply","arguments","__extends","prototype","sendEvent","XHRTransport.prototype.sendEvent","event","_sendRequest","eventToSentryRequest","_api","sendSession","XHRTransport.prototype.sendSession","session","sessionToSentryRequest","XHRTransport.prototype._sendRequest","sentryRequest","originalPayload","_this","_isRateLimited","type","recordLostEvent","Outcome","RateLimitBackoff","Promise","reject","reason","_disabledUntil","status","_buffer","add","SyncPromise","resolve","request","XMLHttpRequest","onreadystatechange","request.onreadystatechange","readyState","headers","getResponseHeader","_handleResponse","requestType","response","open","url","header","options","hasOwnProperty","call","setRequestHeader","send","body","then","undefined","SentryError","QueueOverflow","NetworkError","base_1","BaseTransport"]
}
