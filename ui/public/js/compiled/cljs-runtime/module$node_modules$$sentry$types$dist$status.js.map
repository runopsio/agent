{
"version":3,
"file":"module$node_modules$$sentry$types$dist$status.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,6CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC1GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAIC,UAAS,CAACC,MAAD,CAAS,CAEfA,MAAA,CAAA,OAAA,CAAoB,SAEpBA,OAAA,CAAA,OAAA,CAAoB,SAEpBA,OAAA,CAAA,OAAA,CAAoB,SAEpBA,OAAA,CAAA,SAAA,CAAsB,YAEtBA,OAAA,CAAA,OAAA,CAAoB,SAEpBA,OAAA,CAAA,MAAA,CAAmB,QAZJ,CAAlB,CAAD,CAaYJ,OAAQI,CAAAA,MAbpB,GAa+BJ,OAAQI,CAAAA,MAbvC,CAagD,EAbhD,EAeC,UAAS,CAACA,MAAD,CAAS,CAsBfA,MAAOC,CAAAA,YAAP,CAfAA,QAAqB,CAACC,IAAD,CAAO,CACxB,MAAY,IAAZ,EAAIA,IAAJ,EAA0B,GAA1B,CAAmBA,IAAnB,CACWF,MAAOG,CAAAA,OADlB,CAGa,GAAb,GAAID,IAAJ,CACWF,MAAOI,CAAAA,SADlB,CAGY,GAAZ,EAAIF,IAAJ,EAA0B,GAA1B;AAAmBA,IAAnB,CACWF,MAAOK,CAAAA,OADlB,CAGY,GAAZ,EAAIH,IAAJ,CACWF,MAAOM,CAAAA,MADlB,CAGON,MAAOO,CAAAA,OAbU,CAPb,CAAlB,CAAD,CAuBYX,OAAQI,CAAAA,MAvBpB,GAuB+BJ,OAAQI,CAAAA,MAvBvC,CAuBgD,EAvBhD,EApB0G;",
"sources":["node_modules/@sentry/types/dist/status.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$types$dist$status\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** The status of an event. */\n// eslint-disable-next-line import/export\nvar Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error occurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status = exports.Status || (exports.Status = {}));\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status = exports.Status || (exports.Status = {}));\n//# sourceMappingURL=status.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Status","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown"]
}
