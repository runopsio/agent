{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$delphi.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+OtHD,MAAOC,CAAAA,OAAP,CAxOAC,QAAe,CAACC,IAAD,CAAO,CACpB,MAAMC,SAAW,y6BAAA,CAAA,KAAA,CAAA,GAAA,CAAjB;AAiIMC,cAAgB,CACpBF,IAAKG,CAAAA,mBADe,CAEpBH,IAAKI,CAAAA,OAAL,CAAa,IAAb,CAAmB,IAAnB,CAAyB,CACvBC,UAAW,CADY,CAAzB,CAFoB,CAKpBL,IAAKI,CAAAA,OAAL,CAAa,MAAb,CAAqB,MAArB,CAA6B,CAC3BC,UAAW,EADgB,CAA7B,CALoB,CAjItB,CA0IMC,UAAY,CAChBC,UAAW,MADK,CAEhBC,SAAU,CACR,CACEC,MAAO,MADT,CAEEC,IAAK,IAFP,CADQ,CAKR,CACED,MAAO,QADT,CAEEC,IAAK,MAFP,CALQ,CAFM,CA1IlB,CAuJMC,OAAS,CACbJ,UAAW,QADE,CAEbE,MAAO,GAFM,CAGbC,IAAK,GAHQ,CAIbE,SAAU,CAAC,CACTH,MAAO,IADE,CAAD,CAJG,CAvJf,CAkLMI,YAAc,CAClBN,UAAW,QADO,CAElBE,MAAO,SAFW,CAlLpB,CAsLMK,MAAQ,CACZL,MAAOT,IAAKe,CAAAA,QAAZN,CAAuB,0BADX,CAEZO,YAAa,CAAA,CAFD,CAGZJ,SAAU,CAACZ,IAAKiB,CAAAA,UAAN,CAHE,CAtLd,CA2LMC,SAAW,CACfX,UAAW,UADI,CAEfY,cAAe,2CAFA;AAGfT,IAAK,MAHU,CAIfU,SAAU,oDAJK,CAKfR,SAAU,CACRZ,IAAKiB,CAAAA,UADG,CAER,CACEV,UAAW,QADb,CAEEE,MAAO,IAFT,CAGEC,IAAK,IAHP,CAIEU,SAAUnB,QAJZ,CAKEW,SAAU,CACRD,MADQ,CAERE,WAFQ,CAGRP,SAHQ,CAIRe,CAAAA,MAJQ,CAIDnB,aAJC,CALZ,CAFQ,CAaRI,SAbQ,CAcRe,CAAAA,MAdQ,CAcDnB,aAdC,CALK,CAqBjB,OAAO,CACLoB,KAAM,QADD,CAELC,QAAS,CACP,KADO,CAEP,KAFO,CAGP,KAHO,CAIP,QAJO,CAFJ,CAQLC,iBAAkB,CAAA,CARb,CASLJ,SAAUnB,QATL,CAULwB,QAAS,0BAVJ,CAWLb,SAAU,CACRD,MADQ,CAERE,WAFQ,CAGRb,IAAK0B,CAAAA,WAHG,CA5DGC,CACbpB,UAAW,QADEoB,CAEbtB,UAAW,CAFEsB,CAIbnB,SAAU,CACR,CAEEC,MAAO,iBAFT,CADQ,CAKR,CAEEA,MAAO,YAFT,CALQ;AASR,CAEEA,MAAO,QAFT,CATQ,CAJGkB,CA4DH,CAKRb,KALQ,CAMRI,QANQ,CAORZ,SAPQ,CAQRe,CAAAA,MARQ,CAQDnB,aARC,CAXL,CAjNa,CAPgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/delphi.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$delphi\"] = function(global,require,module,exports) {\n/*\nLanguage: Delphi\nWebsite: https://www.embarcadero.com/products/delphi\n*/\n\n/** @type LanguageFn */\nfunction delphi(hljs) {\n  const KEYWORDS = [\n    \"exports\",\n    \"register\",\n    \"file\",\n    \"shl\",\n    \"array\",\n    \"record\",\n    \"property\",\n    \"for\",\n    \"mod\",\n    \"while\",\n    \"set\",\n    \"ally\",\n    \"label\",\n    \"uses\",\n    \"raise\",\n    \"not\",\n    \"stored\",\n    \"class\",\n    \"safecall\",\n    \"var\",\n    \"interface\",\n    \"or\",\n    \"private\",\n    \"static\",\n    \"exit\",\n    \"index\",\n    \"inherited\",\n    \"to\",\n    \"else\",\n    \"stdcall\",\n    \"override\",\n    \"shr\",\n    \"asm\",\n    \"far\",\n    \"resourcestring\",\n    \"finalization\",\n    \"packed\",\n    \"virtual\",\n    \"out\",\n    \"and\",\n    \"protected\",\n    \"library\",\n    \"do\",\n    \"xorwrite\",\n    \"goto\",\n    \"near\",\n    \"function\",\n    \"end\",\n    \"div\",\n    \"overload\",\n    \"object\",\n    \"unit\",\n    \"begin\",\n    \"string\",\n    \"on\",\n    \"inline\",\n    \"repeat\",\n    \"until\",\n    \"destructor\",\n    \"write\",\n    \"message\",\n    \"program\",\n    \"with\",\n    \"read\",\n    \"initialization\",\n    \"except\",\n    \"default\",\n    \"nil\",\n    \"if\",\n    \"case\",\n    \"cdecl\",\n    \"in\",\n    \"downto\",\n    \"threadvar\",\n    \"of\",\n    \"try\",\n    \"pascal\",\n    \"const\",\n    \"external\",\n    \"constructor\",\n    \"type\",\n    \"public\",\n    \"then\",\n    \"implementation\",\n    \"finally\",\n    \"published\",\n    \"procedure\",\n    \"absolute\",\n    \"reintroduce\",\n    \"operator\",\n    \"as\",\n    \"is\",\n    \"abstract\",\n    \"alias\",\n    \"assembler\",\n    \"bitpacked\",\n    \"break\",\n    \"continue\",\n    \"cppdecl\",\n    \"cvar\",\n    \"enumerator\",\n    \"experimental\",\n    \"platform\",\n    \"deprecated\",\n    \"unimplemented\",\n    \"dynamic\",\n    \"export\",\n    \"far16\",\n    \"forward\",\n    \"generic\",\n    \"helper\",\n    \"implements\",\n    \"interrupt\",\n    \"iochecks\",\n    \"local\",\n    \"name\",\n    \"nodefault\",\n    \"noreturn\",\n    \"nostackframe\",\n    \"oldfpccall\",\n    \"otherwise\",\n    \"saveregisters\",\n    \"softfloat\",\n    \"specialize\",\n    \"strict\",\n    \"unaligned\",\n    \"varargs\"\n  ];\n  const COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(/\\{/, /\\}/, {\n      relevance: 0\n    }),\n    hljs.COMMENT(/\\(\\*/, /\\*\\)/, {\n      relevance: 10\n    })\n  ];\n  const DIRECTIVE = {\n    className: 'meta',\n    variants: [\n      {\n        begin: /\\{\\$/,\n        end: /\\}/\n      },\n      {\n        begin: /\\(\\*\\$/,\n        end: /\\*\\)/\n      }\n    ]\n  };\n  const STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/,\n    contains: [{\n      begin: /''/\n    }]\n  };\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    // Source: https://www.freepascal.org/docs-html/ref/refse6.html\n    variants: [\n      {\n        // Hexadecimal notation, e.g., $7F.\n        begin: '\\\\$[0-9A-Fa-f]+'\n      },\n      {\n        // Octal notation, e.g., &42.\n        begin: '&[0-7]+'\n      },\n      {\n        // Binary notation, e.g., %1010.\n        begin: '%[01]+'\n      }\n    ]\n  };\n  const CHAR_STRING = {\n    className: 'string',\n    begin: /(#\\d+)+/\n  };\n  const CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(',\n    returnBegin: true,\n    contains: [hljs.TITLE_MODE]\n  };\n  const FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure',\n    end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [\n          STRING,\n          CHAR_STRING,\n          DIRECTIVE\n        ].concat(COMMENT_MODES)\n      },\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n  return {\n    name: 'Delphi',\n    aliases: [\n      'dpr',\n      'dfm',\n      'pas',\n      'pascal'\n    ],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [\n      STRING,\n      CHAR_STRING,\n      hljs.NUMBER_MODE,\n      NUMBER,\n      CLASS,\n      FUNCTION,\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n}\n\nmodule.exports = delphi;\n\n};"],
"names":["shadow$provide","global","require","module","exports","delphi","hljs","KEYWORDS","COMMENT_MODES","C_LINE_COMMENT_MODE","COMMENT","relevance","DIRECTIVE","className","variants","begin","end","STRING","contains","CHAR_STRING","CLASS","IDENT_RE","returnBegin","TITLE_MODE","FUNCTION","beginKeywords","keywords","concat","name","aliases","case_insensitive","illegal","NUMBER_MODE","NUMBER"]
}
