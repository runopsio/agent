{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$web_vitals$getFID.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,kEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgB/HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,eAAiBN,OAAA,CAAQ,8EAAR,CAArB,CACIO,uBAAyBP,OAAA,CAAQ,sFAAR,CAD7B,CAEIQ,aAAeR,OAAA,CAAQ,4EAAR,CAFnB;AAGIS,UAAYT,OAAA,CAAQ,yEAAR,CAHhB,CAIIU,WAAaV,OAAA,CAAQ,0EAAR,CACjBE,QAAQS,CAAAA,MAAR,CAAiBC,QAAS,CAACC,QAAD,CAAWC,gBAAX,CAA6B,CACnD,IAAIC,kBAAoBR,sBAAuBS,CAAAA,oBAAvB,EAAxB,CACIC,OAAST,YAAaU,CAAAA,UAAb,CAAwB,KAAxB,CADb,CAGIC,aAAeA,QAAS,CAACC,KAAD,CAAQ,CAE5BC,MAAJ,EAAcD,KAAME,CAAAA,SAApB,CAAgCP,iBAAkBQ,CAAAA,eAAlD,GACIN,MAAOZ,CAAAA,KAEP,CAFee,KAAMI,CAAAA,eAErB,CAFuCJ,KAAME,CAAAA,SAE7C,CADAL,MAAOQ,CAAAA,OAAQC,CAAAA,IAAf,CAAoBN,KAApB,CACA;AAAAC,MAAA,CAAO,CAAA,CAAP,CAHJ,CAFgC,CAHpC,CAWIM,GAAKlB,SAAUmB,CAAAA,OAAV,CAAkB,aAAlB,CAAiCT,YAAjC,CACT,IAAIQ,EAAJ,CAAQ,CACJ,IAAAN,OAASf,cAAeuB,CAAAA,YAAf,CAA4BhB,QAA5B,CAAsCI,MAAtC,CAA8CH,gBAA9C,CACTJ,WAAWoB,CAAAA,QAAX,CAAoB,QAAS,EAAG,CAC5BH,EAAGI,CAAAA,WAAH,EAAiBC,CAAAA,GAAjB,CAAqBb,YAArB,CACAQ,GAAGM,CAAAA,UAAH,EAF4B,CAAhC,CAGG,CAAA,CAHH,CAFI,CAb2C,CAtBwE;",
"sources":["node_modules/@sentry/tracing/dist/browser/web-vitals/getFID.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$web_vitals$getFID\"] = function(global,require,module,exports) {\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bindReporter_1 = require(\"./lib/bindReporter\");\nvar getVisibilityWatcher_1 = require(\"./lib/getVisibilityWatcher\");\nvar initMetric_1 = require(\"./lib/initMetric\");\nvar observe_1 = require(\"./lib/observe\");\nvar onHidden_1 = require(\"./lib/onHidden\");\nexports.getFID = function (onReport, reportAllChanges) {\n    var visibilityWatcher = getVisibilityWatcher_1.getVisibilityWatcher();\n    var metric = initMetric_1.initMetric('FID');\n    var report;\n    var entryHandler = function (entry) {\n        // Only report if the page wasn't hidden prior to the first input.\n        if (report && entry.startTime < visibilityWatcher.firstHiddenTime) {\n            metric.value = entry.processingStart - entry.startTime;\n            metric.entries.push(entry);\n            report(true);\n        }\n    };\n    var po = observe_1.observe('first-input', entryHandler);\n    if (po) {\n        report = bindReporter_1.bindReporter(onReport, metric, reportAllChanges);\n        onHidden_1.onHidden(function () {\n            po.takeRecords().map(entryHandler);\n            po.disconnect();\n        }, true);\n    }\n};\n//# sourceMappingURL=getFID.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","bindReporter_1","getVisibilityWatcher_1","initMetric_1","observe_1","onHidden_1","getFID","exports.getFID","onReport","reportAllChanges","visibilityWatcher","getVisibilityWatcher","metric","initMetric","entryHandler","entry","report","startTime","firstHiddenTime","processingStart","entries","push","po","observe","bindReporter","onHidden","takeRecords","map","disconnect"]
}
