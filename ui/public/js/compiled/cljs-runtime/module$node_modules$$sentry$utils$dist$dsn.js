shadow$provide.module$node_modules$$sentry$utils$dist$dsn=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),error_1=require("module$node_modules$$sentry$utils$dist$error"),DSN_REGEX=/^(?:(\w+):)\/\/(?:(\w+)(?::(\w+))?@)([\w.-]+)(?::(\d+))?\/(.+)/;global=function(){function Dsn(from){"string"===typeof from?this._fromString(from):this._fromComponents(from);this._validate()}Dsn.prototype.toString=function(withPassword){void 0===
withPassword&&(withPassword=!1);var path=this.path,pass=this.pass,port=this.port;return this.protocol+"://"+this.publicKey+(withPassword&&pass?":"+pass:"")+("@"+this.host+(port?":"+port:"")+"/"+(path?path+"/":path)+this.projectId)};Dsn.prototype._fromString=function(str){str=DSN_REGEX.exec(str);if(!str)throw new error_1.SentryError("Invalid Dsn");var _a=tslib_1.__read(str.slice(1),6);str=_a[0];var publicKey=_a[1],_b=_a[2];_b=void 0===_b?"":_b;var host=_a[3],_c=_a[4];_c=void 0===_c?"":_c;var path=
"";_a=_a[5];var split=_a.split("/");1<split.length&&(path=split.slice(0,-1).join("/"),_a=split.pop());_a&&(split=_a.match(/^\d+/))&&(_a=split[0]);this._fromComponents({host,pass:_b,path,projectId:_a,port:_c,protocol:str,publicKey})};Dsn.prototype._fromComponents=function(components){"user"in components&&!("publicKey"in components)&&(components.publicKey=components.user);this.user=components.publicKey||"";this.protocol=components.protocol;this.publicKey=components.publicKey||"";this.pass=components.pass||
"";this.host=components.host;this.port=components.port||"";this.path=components.path||"";this.projectId=components.projectId};Dsn.prototype._validate=function(){var _this=this;["protocol","publicKey","host","projectId"].forEach(function(component){if(!_this[component])throw new error_1.SentryError("Invalid Dsn: "+component+" missing");});if(!this.projectId.match(/^\d+$/))throw new error_1.SentryError("Invalid Dsn: Invalid projectId "+this.projectId);if("http"!==this.protocol&&"https"!==this.protocol)throw new error_1.SentryError("Invalid Dsn: Invalid protocol "+
this.protocol);if(this.port&&isNaN(parseInt(this.port,10)))throw new error_1.SentryError("Invalid Dsn: Invalid port "+this.port);};return Dsn}();exports.Dsn=global}
//# sourceMappingURL=module$node_modules$$sentry$utils$dist$dsn.js.map
