{
"version":3,
"file":"goog.ui.idgenerator.js",
"lineCount":13,
"mappings":"AAmBAA,IAAA,CAAKC,OAAL,CAAa,qBAAb,CAAA;AASAD,IAAA,CAAKE,EAAL,CAAQC,WAAR,GAAsBC,QAAQ,EAAG;CAAjC;AACAJ,IAAA,CAAKK,kBAAL,CAAwBL,IAAxB,CAA6BE,EAA7B,CAAgCC,WAAhC,CAAA;AAQAH,IAAA,CAAKE,EAAL,CAAQC,WAAR,CAAoBG,SAApB,CAA8BC,OAA9B,GAAwC,CAAxC;AASAP,IAAA,CAAKE,EAAL,CAAQC,WAAR,CAAoBG,SAApB,CAA8BE,SAA9B,GAA0C,EAA1C;AAUAR,IAAA,CAAKE,EAAL,CAAQC,WAAR,CAAoBG,SAApB,CAA8BG,WAA9B,GAA4CC,QAAQ,CAACC,QAAD,CAAW;AAC7D,MAAA,CAAKH,SAAL,GAAiBG,QAAjB;AAD6D,CAA/D;AASAX,IAAA,CAAKE,EAAL,CAAQC,WAAR,CAAoBG,SAApB,CAA8BM,eAA9B,GAAgDC,QAAQ,EAAG;AACzD,SAAO,IAAP,CAAYL,SAAZ,GAAwB,GAAxB,GAA8B,CAAC,IAAA,CAAKD,OAAL,EAAD,EAAiBO,QAAjB,CAA0B,EAA1B,CAA9B;AADyD,CAA3D;;",
"sources":["goog/ui/idgenerator.js"],
"sourcesContent":["// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Generator for unique element IDs.\n *\n */\n\ngoog.provide('goog.ui.IdGenerator');\n\n\n\n/**\n * Creates a new id generator.\n * @constructor\n * @final\n */\ngoog.ui.IdGenerator = function() {};\ngoog.addSingletonGetter(goog.ui.IdGenerator);\n\n\n/**\n * Next unique ID to use\n * @type {number}\n * @private\n */\ngoog.ui.IdGenerator.prototype.nextId_ = 0;\n\n\n/**\n * Random ID prefix to help avoid collisions with other closure JavaScript on\n * the same page that may initialize its own IdGenerator singleton.\n * @type {string}\n * @private\n */\ngoog.ui.IdGenerator.prototype.idPrefix_ = '';\n\n\n/**\n * Sets the ID prefix for this singleton. This is a temporary workaround to be\n * backwards compatible with code relying on the undocumented, but consistent,\n * behavior. In the future this will be removed and the prefix will be set to\n * a randomly generated string.\n * @param {string} idPrefix\n */\ngoog.ui.IdGenerator.prototype.setIdPrefix = function(idPrefix) {\n  this.idPrefix_ = idPrefix;\n};\n\n\n/**\n * Gets the next unique ID.\n * @return {string} The next unique identifier.\n */\ngoog.ui.IdGenerator.prototype.getNextUniqueId = function() {\n  return this.idPrefix_ + ':' + (this.nextId_++).toString(36);\n};\n"],
"names":["goog","provide","ui","IdGenerator","goog.ui.IdGenerator","addSingletonGetter","prototype","nextId_","idPrefix_","setIdPrefix","goog.ui.IdGenerator.prototype.setIdPrefix","idPrefix","getNextUniqueId","goog.ui.IdGenerator.prototype.getNextUniqueId","toString"]
}
