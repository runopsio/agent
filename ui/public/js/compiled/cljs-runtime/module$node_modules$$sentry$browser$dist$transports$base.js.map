{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$transports$base.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/transports/base.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$transports$base\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@sentry/core\");\nvar types_1 = require(\"@sentry/types\");\nvar utils_1 = require(\"@sentry/utils\");\nvar utils_2 = require(\"./utils\");\nvar CATEGORY_MAPPING = {\n    event: 'error',\n    transaction: 'transaction',\n    session: 'session',\n    attachment: 'attachment',\n};\nvar global = utils_1.getGlobalObject();\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        var _this = this;\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new utils_1.PromiseBuffer(30);\n        /** Locks transport after receiving rate limits in a response */\n        this._rateLimits = {};\n        this._outcomes = {};\n        this._api = new core_1.API(options.dsn, options._metadata, options.tunnel);\n        // eslint-disable-next-line deprecation/deprecation\n        this.url = this._api.getStoreEndpointWithUrlEncodedAuth();\n        if (this.options.sendClientReports && global.document) {\n            global.document.addEventListener('visibilitychange', function () {\n                if (global.document.visibilityState === 'hidden') {\n                    _this._flushOutcomes();\n                }\n            });\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new utils_1.SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.recordLostEvent = function (reason, category) {\n        var _a;\n        if (!this.options.sendClientReports) {\n            return;\n        }\n        // We want to track each category (event, transaction, session) separately\n        // but still keep the distinction between different type of outcomes.\n        // We could use nested maps, but it's much easier to read and type this way.\n        // A correct type for map-based implementation if we want to go that route\n        // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n        var key = CATEGORY_MAPPING[category] + \":\" + reason;\n        utils_1.logger.log(\"Adding outcome: \" + key);\n        this._outcomes[key] = (_a = this._outcomes[key], (_a !== null && _a !== void 0 ? _a : 0)) + 1;\n    };\n    /**\n     * Send outcomes as an envelope\n     */\n    BaseTransport.prototype._flushOutcomes = function () {\n        if (!this.options.sendClientReports) {\n            return;\n        }\n        var outcomes = this._outcomes;\n        this._outcomes = {};\n        // Nothing to send\n        if (!Object.keys(outcomes).length) {\n            utils_1.logger.log('No outcomes to flush');\n            return;\n        }\n        utils_1.logger.log(\"Flushing outcomes:\\n\" + JSON.stringify(outcomes, null, 2));\n        var url = this._api.getEnvelopeEndpointWithUrlEncodedAuth();\n        // Envelope header is required to be at least an empty object\n        var envelopeHeader = JSON.stringify(tslib_1.__assign({}, (this.options.tunnel && { dsn: this._api.getDsn().toString() })));\n        var itemHeaders = JSON.stringify({\n            type: 'client_report',\n        });\n        var item = JSON.stringify({\n            timestamp: utils_1.dateTimestampInSeconds(),\n            discarded_events: Object.keys(outcomes).map(function (key) {\n                var _a = tslib_1.__read(key.split(':'), 2), category = _a[0], reason = _a[1];\n                return {\n                    reason: reason,\n                    category: category,\n                    quantity: outcomes[key],\n                };\n            }),\n        });\n        var envelope = envelopeHeader + \"\\n\" + itemHeaders + \"\\n\" + item;\n        try {\n            utils_2.sendReport(url, envelope);\n        }\n        catch (e) {\n            utils_1.logger.error(e);\n        }\n    };\n    /**\n     * Handle Sentry repsonse for promise-based transports.\n     */\n    BaseTransport.prototype._handleResponse = function (_a) {\n        var requestType = _a.requestType, response = _a.response, headers = _a.headers, resolve = _a.resolve, reject = _a.reject;\n        var status = types_1.Status.fromHttpCode(response.status);\n        /**\n         * \"The name is case-insensitive.\"\n         * https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n         */\n        var limited = this._handleRateLimit(headers);\n        if (limited)\n            utils_1.logger.warn(\"Too many \" + requestType + \" requests, backing off until: \" + this._disabledUntil(requestType));\n        if (status === types_1.Status.Success) {\n            resolve({ status: status });\n            return;\n        }\n        reject(response);\n    };\n    /**\n     * Gets the time that given category is disabled until for rate limiting\n     */\n    BaseTransport.prototype._disabledUntil = function (requestType) {\n        var category = CATEGORY_MAPPING[requestType];\n        return this._rateLimits[category] || this._rateLimits.all;\n    };\n    /**\n     * Checks if a category is rate limited\n     */\n    BaseTransport.prototype._isRateLimited = function (requestType) {\n        return this._disabledUntil(requestType) > new Date(Date.now());\n    };\n    /**\n     * Sets internal _rateLimits from incoming headers. Returns true if headers contains a non-empty rate limiting header.\n     */\n    BaseTransport.prototype._handleRateLimit = function (headers) {\n        var e_1, _a, e_2, _b;\n        var now = Date.now();\n        var rlHeader = headers['x-sentry-rate-limits'];\n        var raHeader = headers['retry-after'];\n        if (rlHeader) {\n            try {\n                // rate limit headers are of the form\n                //     <header>,<header>,..\n                // where each <header> is of the form\n                //     <retry_after>: <categories>: <scope>: <reason_code>\n                // where\n                //     <retry_after> is a delay in ms\n                //     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n                //         <category>;<category>;...\n                //     <scope> is what's being limited (org, project, or key) - ignored by SDK\n                //     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n                for (var _c = tslib_1.__values(rlHeader.trim().split(',')), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var limit = _d.value;\n                    var parameters = limit.split(':', 2);\n                    var headerDelay = parseInt(parameters[0], 10);\n                    var delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n                    try {\n                        for (var _e = (e_2 = void 0, tslib_1.__values(parameters[1].split(';'))), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var category = _f.value;\n                            this._rateLimits[category || 'all'] = new Date(now + delay);\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return true;\n        }\n        else if (raHeader) {\n            this._rateLimits.all = new Date(now + utils_1.parseRetryAfterHeader(now, raHeader));\n            return true;\n        }\n        return false;\n    };\n    return BaseTransport;\n}());\nexports.BaseTransport = BaseTransport;\n//# sourceMappingURL=base.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","core_1","types_1","utils_1","utils_2","CATEGORY_MAPPING","event","transaction","session","attachment","getGlobalObject","BaseTransport","options","_this","_buffer","PromiseBuffer","_rateLimits","_outcomes","_api","API","dsn","_metadata","tunnel","url","getStoreEndpointWithUrlEncodedAuth","sendClientReports","document","addEventListener","visibilityState","_flushOutcomes","prototype","sendEvent","BaseTransport.prototype.sendEvent","_","SentryError","close","BaseTransport.prototype.close","timeout","drain","recordLostEvent","BaseTransport.prototype.recordLostEvent","reason","category","_a","key","logger","log","BaseTransport.prototype._flushOutcomes","outcomes","keys","length","JSON","stringify","getEnvelopeEndpointWithUrlEncodedAuth","envelopeHeader","__assign","getDsn","toString","itemHeaders","type","item","timestamp","dateTimestampInSeconds","discarded_events","map","__read","split","quantity","sendReport","e","error","_handleResponse","BaseTransport.prototype._handleResponse","requestType","response","headers","resolve","reject","status","Status","fromHttpCode","_handleRateLimit","limited","warn","_disabledUntil","Success","BaseTransport.prototype._disabledUntil","all","_isRateLimited","BaseTransport.prototype._isRateLimited","Date","now","BaseTransport.prototype._handleRateLimit","e_2","_b","rlHeader","raHeader","_c","__values","trim","_d","next","done","parameters","headerDelay","parseInt","delay","isNaN","_e","_f","e_2_1","return","call","e_1_1","e_1","parseRetryAfterHeader"]
}
