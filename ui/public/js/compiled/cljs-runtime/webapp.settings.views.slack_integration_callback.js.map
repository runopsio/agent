{"version":3,"sources":["webapp/settings/views/slack_integration_callback.cljs"],"mappings":";AAMA,wDAAA,xDAAMA;AAAN,AACE,IAAMC,gBAAc,AAAA,AAAIC;IAClBC,aAAW,KAAKC,gBAAmBH;IACnCI,QAAM,eAAA,fAAMF;IACZG,cAAY,AAACC,+BAAiB,eAAA,fAAMJ;IACpCK,QAAM,eAAA,fAAML;AAJlB,AAKE,qBAAA,rBAAUM,iCAA4BJ;;AACtC,oBAAMG;AAAN,AAAY,uBAAA,mFAAA,1GAACE,gNAAuCF;;AAApD;;AACA,AAAUG,wBAAmBL;;AAP/B,0FAAA,mDAAA,2BAAA,mFAAA,+DAAA,mFAAA,2FAAA,2CAAA,oDAAA","names":["webapp.settings.views.slack-integration-callback/main","search-string","js/window","url-params","js/URLSearchParams","token","slack-param","goog.crypt.base64/decodeString","error","js/localStorage","re-frame.core/dispatch","js/window.location"],"sourcesContent":["(ns webapp.settings.views.slack-integration-callback\n  (:require\n   [re-frame.core :as rf]\n   [goog.crypt.base64 :as b64]\n   [webapp.auth.events :as auth-events]))\n\n(defn main []\n  (let [search-string (.. js/window -location -search)\n        url-params (new js/URLSearchParams search-string)\n        token (.get url-params \"token\")\n        slack-param (b64/decodeString (.get url-params \"slack\"))\n        error (.get url-params \"error\")]\n    (.setItem js/localStorage \"jwt-token\" token)\n    (when error (rf/dispatch [::auth-events/login-error error]))\n    (.replace js/window.location slack-param)\n    [:div \"Verifying authentication\"\n     [:span.w-16\n      [:img.inline.animate-spin {:src \"/icons/icon-refresh.svg\"}]]]))\n"]}