shadow$provide.module$node_modules$$sentry$tracing$dist$transaction=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),hub_1=require("module$node_modules$$sentry$hub$dist$index"),types_1=require("module$node_modules$$sentry$types$dist$index"),utils_1=require("module$node_modules$$sentry$utils$dist$index"),span_1=require("module$node_modules$$sentry$tracing$dist$span");global=function(_super){function Transaction(transactionContext,
hub){var _this=_super.call(this,transactionContext)||this;_this._measurements={};_this._hub=hub_1.getCurrentHub();utils_1.isInstanceOf(hub,hub_1.Hub)&&(_this._hub=hub);_this.name=transactionContext.name||"";_this.metadata=transactionContext.metadata||{};_this._trimEnd=transactionContext.trimEnd;return _this.transaction=_this}tslib_1.__extends(Transaction,_super);Transaction.prototype.setName=function(name){this.name=name};Transaction.prototype.initSpanRecorder=function(maxlen){void 0===maxlen&&(maxlen=
1E3);this.spanRecorder||(this.spanRecorder=new span_1.SpanRecorder(maxlen));this.spanRecorder.add(this)};Transaction.prototype.setMeasurements=function(measurements){this._measurements=tslib_1.__assign({},measurements)};Transaction.prototype.setMetadata=function(newMetadata){this.metadata=tslib_1.__assign(tslib_1.__assign({},this.metadata),newMetadata)};Transaction.prototype.finish=function(endTimestamp){var _this=this,_a,_b,_c,_d,_e;if(void 0===this.endTimestamp)if(this.name||(utils_1.logger.warn("Transaction has no name, falling back to `\x3cunlabeled transaction\x3e`."),
this.name="\x3cunlabeled transaction\x3e"),_super.prototype.finish.call(this,endTimestamp),!0!==this.sampled)utils_1.logger.log("[Tracing] Discarding transaction because its trace was not chosen to be sampled."),null===(_e=null===(_c=null===(_a=this._hub.getClient())||void 0===_a?void 0:(_b=_a).getTransport)||void 0===_c?void 0:(_d=_c.call(_b)).recordLostEvent)||void 0===_e?void 0:_e.call(_d,types_1.Outcome.SampleRate,"transaction");else return endTimestamp=this.spanRecorder?this.spanRecorder.spans.filter(function(s){return s!==
_this&&s.endTimestamp}):[],this._trimEnd&&0<endTimestamp.length&&(this.endTimestamp=endTimestamp.reduce(function(prev,current){return prev.endTimestamp&&current.endTimestamp?prev.endTimestamp>current.endTimestamp?prev:current:prev}).endTimestamp),endTimestamp={contexts:{trace:this.getTraceContext()},spans:endTimestamp,start_timestamp:this.startTimestamp,tags:this.tags,timestamp:this.endTimestamp,transaction:this.name,type:"transaction",debug_meta:this.metadata},0<Object.keys(this._measurements).length&&
(utils_1.logger.log("[Measurements] Adding measurements to transaction",JSON.stringify(this._measurements,void 0,2)),endTimestamp.measurements=this._measurements),utils_1.logger.log("[Tracing] Finishing "+this.op+" transaction: "+this.name+"."),this._hub.captureEvent(endTimestamp)};Transaction.prototype.toContext=function(){var spanContext=_super.prototype.toContext.call(this);return utils_1.dropUndefinedKeys(tslib_1.__assign(tslib_1.__assign({},spanContext),{name:this.name,trimEnd:this._trimEnd}))};
Transaction.prototype.updateWithContext=function(transactionContext){var _a;_super.prototype.updateWithContext.call(this,transactionContext);this.name=(_a=transactionContext.name,null!==_a&&void 0!==_a?_a:"");this._trimEnd=transactionContext.trimEnd;return this};return Transaction}(span_1.Span);exports.Transaction=global}
//# sourceMappingURL=module$node_modules$$sentry$tracing$dist$transaction.js.map
