{"version":3,"sources":["webapp/components/forms.cljs"],"mappings":"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","names":["webapp.components.forms/form-label","text","js/webapp","js/webapp.components","js/webapp.components.forms","js/webapp.components.forms.input-styles","webapp.components.forms/input-styles","webapp.components.forms/input","_","p__31593","map__31594","cljs.core/--destructure-map","cljs.core.get","type","on-blur","on-focus","local-type","reagent.core.atom","or__4253__auto__","on-blur-cb","cljs.core._EQ_","cljs.core/reset!","on-focus-cb","p__31597","map__31598","cljs.core/deref","label","placeholder","value","defaultValue","on-change","on-keyDown","required","disabled","webapp.components.forms/textarea","config","webapp.components.forms/option","item","selected","attrs","p__31606","map__31607","webapp.components.forms/select","id","name","options","p1__31605#","cljs.core.map"],"sourcesContent":["(ns webapp.components.forms\n  (:require [reagent.core :as r]))\n\n(defn form-label\n  [text]\n  [:label.block.text-sm.font-medium.text-gray-700 text])\n\n(defonce input-styles\n  \"relative block w-full\n   py-3 px-2 mt-1\n   border border-gray-300 rounded-md\n   focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:opacity-50\")\n\n(defn input\n  \"Multi purpose HTML input component.\n  Props signature:\n  :label -> html label text;\n  :placeholder -> html prop placeholder for input;\n  :value -> a reagent atom piece of state.\"\n  [_]\n  (fn\n    [{:keys [type on-blur on-focus]}]\n    (let [local-type (r/atom (or type \"text\"))\n          on-blur-cb (fn []\n                       (when (= type \"password\")\n                         (reset! local-type \"password\"))\n                       (when on-blur (on-blur)))\n          on-focus-cb (fn []\n                        (when (= type \"password\")\n                          (reset! local-type \"text\"))\n                        (when on-focus (on-focus)))]\n      (fn [{:keys [label placeholder value defaultValue on-change on-keyDown required disabled]}]\n        [:div.mb-regular.text-sm\n         [form-label label]\n         [:input\n          {:type @local-type\n           :class input-styles\n           :placeholder (or placeholder label)\n           :value value\n           :defaultValue defaultValue\n           :on-change on-change\n           :on-keyDown on-keyDown\n           :on-blur on-blur-cb\n           :on-focus on-focus-cb\n           :disabled (or disabled false)\n           :required (or required false)}]] ))))\n\n(defn textarea\n  [config]\n  [:div.mb-regular\n   (form-label (:label config))\n   [:textarea\n    {:class (str input-styles \" \" (or (:classes config) \"\"))\n     :id (or (:id config) \"\")\n     :rows (or (:rows config) 5)\n     :name (or (:name config) \"\")\n     :value (:value config)\n     :defaultValue (:defaultValue config)\n     :autoFocus (:autoFocus config)\n     :placeholder (:placeholder config)\n     :on-change (:on-change config)\n     :on-keyDown (:on-keyDown config)\n     :disabled (or (:disabled config) false)\n     :required (or (:required config) false)}]])\n\n(defn option\n  [item selected]\n  (let [attrs {:key (:value item)\n               :value (:value item)}]\n    [:option attrs (:text item)]))\n\n(defn select\n  \"HTML select.\n  Props signature:\n  label -> html label text;\n  options -> List of {:text string :value string};\n  active -> the option value of an already active item;\n  on-change -> function to be executed on change;\n  required -> HTML required attribute;\"\n  [{:keys [label id name options selected on-change required disabled]}]\n  [:div.mb-regular.text-sm.w-full\n   (form-label label)\n   [:select\n    {:class input-styles\n     :name (or name \"\")\n     :id (or id \"\")\n     :on-change on-change\n     :value selected\n     :required (or required false)\n     :disabled (or disabled false)}\n    [:option {:value \"\"\n              :disabled true\n              :label \"Select one\"}]\n    (map #(option % selected) options)]])\n"]}