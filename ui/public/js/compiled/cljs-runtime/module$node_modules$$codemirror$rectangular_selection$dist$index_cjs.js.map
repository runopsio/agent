{
"version":3,
"file":"module$node_modules$$codemirror$rectangular_selection$dist$index_cjs.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@codemirror/rectangular-selection/dist/index.cjs"],
"sourcesContent":["shadow$provide[\"module$node_modules$$codemirror$rectangular_selection$dist$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar state = require('@codemirror/state');\nvar view = require('@codemirror/view');\nvar text = require('@codemirror/text');\n\n// Don't compute precise column positions for line offsets above this\n// (since it could get expensive). Assume offset==column for them.\nconst MaxOff = 2000;\nfunction rectangleFor(state$1, a, b) {\n    let startLine = Math.min(a.line, b.line), endLine = Math.max(a.line, b.line);\n    let ranges = [];\n    if (a.off > MaxOff || b.off > MaxOff || a.col < 0 || b.col < 0) {\n        let startOff = Math.min(a.off, b.off), endOff = Math.max(a.off, b.off);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state$1.doc.line(i);\n            if (line.length <= endOff)\n                ranges.push(state.EditorSelection.range(line.from + startOff, line.to + endOff));\n        }\n    }\n    else {\n        let startCol = Math.min(a.col, b.col), endCol = Math.max(a.col, b.col);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state$1.doc.line(i);\n            let start = text.findColumn(line.text, startCol, state$1.tabSize, true);\n            if (start > -1) {\n                let end = text.findColumn(line.text, endCol, state$1.tabSize);\n                ranges.push(state.EditorSelection.range(line.from + start, line.from + end));\n            }\n        }\n    }\n    return ranges;\n}\nfunction absoluteColumn(view, x) {\n    let ref = view.coordsAtPos(view.viewport.from);\n    return ref ? Math.round(Math.abs((ref.left - x) / view.defaultCharacterWidth)) : -1;\n}\nfunction getPos(view, event) {\n    let offset = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    let line = view.state.doc.lineAt(offset), off = offset - line.from;\n    let col = off > MaxOff ? -1\n        : off == line.length ? absoluteColumn(view, event.clientX)\n            : text.countColumn(line.text, view.state.tabSize, offset - line.from);\n    return { line: line.number, col, off };\n}\nfunction rectangleSelectionStyle(view, event) {\n    let start = getPos(view, event), startSel = view.state.selection;\n    if (!start)\n        return null;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                let newStart = update.changes.mapPos(update.startState.doc.line(start.line).from);\n                let newLine = update.state.doc.lineAt(newStart);\n                start = { line: newLine.number, col: start.col, off: Math.min(start.off, newLine.length) };\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, _extend, multiple) {\n            let cur = getPos(view, event);\n            if (!cur)\n                return startSel;\n            let ranges = rectangleFor(view.state, start, cur);\n            if (!ranges.length)\n                return startSel;\n            if (multiple)\n                return state.EditorSelection.create(ranges.concat(startSel.ranges));\n            else\n                return state.EditorSelection.create(ranges);\n        }\n    };\n}\n/**\nCreate an extension that enables rectangular selections. By\ndefault, it will react to left mouse drag with the Alt key held\ndown. When such a selection occurs, the text within the rectangle\nthat was dragged over will be selected, as one selection\n[range](https://codemirror.net/6/docs/ref/#state.SelectionRange) per line.\n*/\nfunction rectangularSelection(options) {\n    let filter = (options === null || options === void 0 ? void 0 : options.eventFilter) || (e => e.altKey && e.button == 0);\n    return view.EditorView.mouseSelectionStyle.of((view, event) => filter(event) ? rectangleSelectionStyle(view, event) : null);\n}\n\nexports.rectangularSelection = rectangularSelection;\n\n};"],
"names":["shadow$provide","global","require","module","exports","getPos","view","event","offset","posAtCoords","x","clientX","y","clientY","line","state","doc","lineAt","off","from","MaxOff","ref","coordsAtPos","viewport","Math","round","abs","left","defaultCharacterWidth","number","col","rectangleSelectionStyle","start","startSel","selection","update","docChanged","newStart","changes","mapPos","startState","newLine","min","length","map","get","_extend","multiple","cur","startLine","a","endLine","max","ranges","startOff","endOff","i","state$1","push","EditorSelection","range","to","startCol","endCol","text","findColumn","tabSize","end","create","concat","Object","defineProperty","value","rectangularSelection","options","filter","eventFilter","e","altKey","button","EditorView","mouseSelectionStyle","of"]
}
