{"version":3,"sources":["webapp/quickstarts/views/target_step.cljs"],"mappings":";AAcA,+CAAA,/CAAMA,sGAASC,KAAKC,KAAKC;AAAzB,AAAA,0FAAA,4FAAA,sHAAA,2CAAA,wDAAA,gCAAA,mFAAA,7WAEG,AAACC,oHACAC,8BAAKJ,iVACiCC,aACvCC;;AAEH,iDAAA,jDAAMG,0GACHC;AADH,AAAA,2BAAA,mFAAA,mDAAA,2CAAA,wOAAA,mFAAA,iDAAA,2CAAA,wDAAA,6IAAA,mFAAA,kDAAA,2CAAA,wDAAA,+IAAA,2CAAA,oDAES,AAAA,mFAAOA,7kCAAqB,CAAA,2DAAoB,AAAA,2FAAWA,4SACM,AAAA,mFAAOA,2RACd,AAAA,oFAAQA;;AAE3E,4CAAA,5CAAMC,gGACHC,YAAYC,KAAKC,YAAYC,QAAQC,gBAAgBC;AADxD,AAEE,IAAMC,cAAY,4CAAA,AAAAC,+PAAA,3SAACC,4DAAK,sDAAA,mFAAA,zIAACC;IACnBC,QAAM,gDAAA,hDAACC;AADb,AAEE,kBAAKC;AAAL,AAAA,0FAAA,mDAAA,iHAAA,sBAAA,2CAAA,wDAAA,kCAAA,mFAAA,2EAAA,2CAAA,lYAEIC,icAEY,WAAKC;AAAL,AACE,AAAiBA;;AACjB,uFAAA,wDAAA,oCAAA,wDAAA,1OAACd,4CAAAA,gHAAAA;;AACD,uFAAA,sDAAA,mCAAA,sDAAA,rOAACA,4CAAAA,6GAAAA;;AACD,IAAMe,aAAW,uCAAA,AAAAR,vCAACS,uDAAwBN;AAA1C,AACE,8BAAA,mFAAA,1GAACO,0NAAoC,uGAAA,2CAAA,qDAAA,AAAAV,sBAAA,qDAAA,AAAAA,6BAAA,+DAAA,2EAAA,UAAA,mFAAA,wDAAA,9kBAACW,uNAAcjB,2EACAC,kEACDG,kKAEOD,qFAEd,+BAAA,AAAA,2CAAA,wHAAA,hLAAME,iHAAqB,sCAAA,pCAAI,AAACa,uBAAOJ,kBAEVA,0BAC7B,8BAAA,AAAA,2CAAA,qHAAA,5LAAM,AAACK,cAAId,+GAAqB,sCAAA,pCAAI,AAACa,uBAAOJ,kBAEVA;WAC9F,6CAAA,qBAAA,GAAA,mFAAA,mDAAA,mFAAA,8GAAA,iHAAA,2CAAA,uDAAA,OAAA,+DAAA,WAAAM,hrBAAC9B,+dAKG+B;AALJ,AAM6B,OAACC,sBAAOtB,KAAK,AAAA,AAAAoB;GAN1C,mEAAA,cAAA,6DAAA,KAAA,sDAAA,AAAAd,sCAAA,kHAAA,2CAAA,uDAAA,cAAA,4DAAA,AAAAA,6BAAA,8DAAA,KAAA,pZASyBN,yGAErBuB,2NACyBtB,yIAEFuB,6EAE3B,6CAAA,oCAAA,GAAA,mFAAA,kDAAA,2CAAA,wDAAA,5TAAClC,sXAIC,2FAAA,mFAAA,2CAAA,qDAAA,YAAA,sDAAA,cAAA,6DAAA,YAAA,2CAAA,qDAAA,kBAAA,sDAAA,UAAA,6DAAA,YAAA,2CAAA,qDAAA,cAAA,sEAAA,6DAAA,YAAA,2CAAA,qDAAA,YAAA,yHAAA,6DAAA,YAAA,2CAAA,qDAAA,0BAAA,v0CAACmC,4CAAI7B,0xBAOmBO,2PAGA,0CAAA,xCAAI,AAACuB,4BAAStB,0BAEZA,oQAGF,mCAAA,iDAAA,8HAAA,2CAAA,0DAAA,2DAAA,hXAAI,AAACc,uBAAOhB,8IAETyB,gQAEO,AAACC,kDAAO,6CAAA,WAAAC,xDAACC;AAAD,AAAO,QAAA,wJAAA,OAAA,wJAAA,pQAAY,AAAA,kFAAAD,2EAAqB,AAAA,oFAAAA;yHA5DxF,mFAAA,8GAAA,mFAAA,mDAAA,2CAAA,wDAAA,6BAAA,mFAAA,mDAAA,2CAAA,wDAAA,3wBAyCM,6DAAA,xFAmBqG3B,40BAQrG,iCAAA,2CAAA,sDAAA,SAAA,qDAAA,hMAAC6B","names":["webapp.quickstarts.views.target-step/section","head","text","child","webapp.components.divider/main","webapp.components.headings/h3","webapp.quickstarts.views.target-step/list-item","item","webapp.quickstarts.views.target-step/form","change-step","name","target-type","configs","secret-path-env","agent-tag","groups-flag","cljs.core/deref","cljs.core.get","re_frame.core.subscribe","roles","reagent.core.atom","_","webapp.components.headings/h2","e","roles-list","webapp.formatters/comma-string-to-list","re-frame.core/dispatch","cljs.core.merge","cljs.core/empty?","cljs.core/not","p1__32959#","webapp.components.forms/input","cljs.core/reset!","webapp.components.forms/select","webapp.targets.constants/targets-types-list","cljs.core.map","clojure.string/blank?","webapp.components.logs-container/container","clojure.string.join","p1__32961#","cljs.core.mapv","webapp.components.button/primary"],"sourcesContent":["(ns webapp.quickstarts.views.target-step\n  (:require [reagent.core :as r]\n            [re-frame.core :as rf]\n            [webapp.targets.events :as events]\n            [webapp.subs :as subs]\n            [webapp.formatters :as f]\n            [webapp.targets.constants :as constants]\n            [webapp.components.divider :as divider]\n            [webapp.components.button :as button]\n            [webapp.components.forms :as forms]\n            [webapp.components.headings :as h]\n            [webapp.components.logs-container :as logs]\n            [clojure.string :as s]))\n\n(defn section [head text child]\n  [:section\n   (divider/main)\n   [h/h3 head {:class \"text-gray-800\"}]\n   [:small.block.mb-regular.text-gray-600 text]\n   child])\n\n(defn list-item\n  [item]\n  ^{:key (:name item)} [:div {:class (str \"sm:col-span-\" (:col-span item))}\n                        [:dt {:class \"text-sm font-medium text-gray-500\"} (:name item)]\n                        [:dd {:class \"mt-1 text-sm text-gray-900\"} (:value item)]])\n\n(defn form\n  [change-step name target-type configs secret-path-env agent-tag]\n  (let [groups-flag (get @(rf/subscribe [::subs/feature-flags]) :groups-flag)\n        roles (r/atom \"\")]\n    (fn [_]\n      [:div\n       [h/h2 \"Create a new target\" {:class \"mb-4 col-span-2\"}]\n       [:form.mb-regular\n        {:on-submit (fn [e]\n                      (.preventDefault e)\n                      (change-step :target \"complete\")\n                      (change-step :task \"current\")\n                      (let [roles-list (f/comma-string-to-list @roles)]\n                        (rf/dispatch [::events/create-target (merge {:name @name\n                                                                     :type @target-type\n                                                                     :tags agent-tag\n                                                                     :secret_provider \"env-var\"\n                                                                     :secret_path secret-path-env\n                                                                     :config nil}\n                                                                    (when groups-flag {:groups (if (empty? roles-list)\n                                                                                                 nil\n                                                                                                 roles-list)})\n                                                                    (when (not groups-flag) {:roles (if (empty? roles-list)\n                                                                                                      nil\n                                                                                                      roles-list)}))])))}\n        (section\n         \"Target information\"\n         \"\"\n         [:div\n          [:div.grid.grid-cols-2.gap-regular\n           [forms/input {:label \"Name\"\n                         :on-change #(reset! name (-> % .-target .-value))\n                         :placeholder \"Target name\"\n                         :required true\n                         :value @name}]\n\n           [forms/select {:label \"Target type\"\n                          :selected @target-type\n                          :disabled true\n                          :options constants/targets-types-list}]]])\n\n        (section\n         \"Your's secrets management details\"\n         \"\"\n         [:dl {:class \"grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2\"}\n          (map list-item [{:name \"Hosted by\"\n                           :value \"self hosted\"\n                           :col-span 1}\n                          {:name \"Secret Provider\"\n                           :value \"env-var\"\n                           :col-span 1}\n                          {:name \"Secret Path\"\n                           :value secret-path-env\n                           :col-span 1}\n                          {:name \"Agent tag\"\n                           :value (if (s/blank? agent-tag)\n                                    \"(empty tag)\"\n                                    agent-tag)\n                           :col-span 1}\n                          {:name \"Environment's variables\"\n                           :value (if (empty? configs)\n                                    \"There are no environment variables configured.\"\n                                    [logs/container\n                                     {:status :success\n                                      :logs (s/join (mapv #(str \"  \\\"\" (:key %) \"\\\": \" \"\\\"\" (:value %) \"\\\"\\n\") configs))}])\n                           :col-span 2}])])\n\n\n\n        [:div.grid.grid-cols-2.gap-regular\n         [:div {:class \"col-span-1\"}]\n         [:div {:class \"col-span-1 justify-self-end\"}\n          (button/primary {:text \"Create\"\n                           :type \"submit\"})]]]])))\n"]}