{
"version":3,
"file":"goog.ui.controlrenderer.js",
"lineCount":340,
"mappings":"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",
"sources":["goog/ui/controlrenderer.js"],
"sourcesContent":["// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Base class for control renderers.\n * TODO(attila):  If the renderer framework works well, pull it into Component.\n *\n * @author attila@google.com (Attila Bodis)\n */\n\ngoog.provide('goog.ui.ControlRenderer');\n\ngoog.forwardDeclare('goog.ui.Control');\ngoog.require('goog.a11y.aria');\ngoog.require('goog.a11y.aria.Role');\ngoog.require('goog.a11y.aria.State');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.classlist');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.style');\ngoog.require('goog.ui.Component');\ngoog.require('goog.ui.ControlContent');\ngoog.require('goog.userAgent');  // circular\n\n\n\n/**\n * Default renderer for {@link goog.ui.Control}s.  Can be used as-is, but\n * subclasses of Control will probably want to use renderers specifically\n * tailored for them by extending this class.  Controls that use renderers\n * delegate one or more of the following API methods to the renderer:\n * <ul>\n *    <li>`createDom` - renders the DOM for the component\n *    <li>`canDecorate` - determines whether an element can be decorated\n *        by the component\n *    <li>`decorate` - decorates an existing element with the component\n *    <li>`setState` - updates the appearance of the component based on\n *        its state\n *    <li>`getContent` - returns the component's content\n *    <li>`setContent` - sets the component's content\n * </ul>\n * Controls are stateful; renderers, on the other hand, should be stateless and\n * reusable.\n * @constructor\n */\ngoog.ui.ControlRenderer = function() {};\ngoog.addSingletonGetter(goog.ui.ControlRenderer);\ngoog.tagUnsealableClass(goog.ui.ControlRenderer);\n\n\n/**\n * Constructs a new renderer and sets the CSS class that the renderer will use\n * as the base CSS class to apply to all elements rendered by that renderer.\n * An example to use this function using a color palette:\n *\n * <pre>\n * var myCustomRenderer = goog.ui.ControlRenderer.getCustomRenderer(\n *     goog.ui.PaletteRenderer, 'my-special-palette');\n * var newColorPalette = new goog.ui.ColorPalette(\n *     colors, myCustomRenderer, opt_domHelper);\n * </pre>\n *\n * Your CSS can look like this now:\n * <pre>\n * .my-special-palette { }\n * .my-special-palette-table { }\n * .my-special-palette-cell { }\n * etc.\n * </pre>\n *\n * <em>instead</em> of\n * <pre>\n * .CSS_MY_SPECIAL_PALETTE .goog-palette { }\n * .CSS_MY_SPECIAL_PALETTE .goog-palette-table { }\n * .CSS_MY_SPECIAL_PALETTE .goog-palette-cell { }\n * etc.\n * </pre>\n *\n * You would want to use this functionality when you want an instance of a\n * component to have specific styles different than the other components of the\n * same type in your application.  This avoids using descendant selectors to\n * apply the specific styles to this component.\n *\n * @param {Function} ctor The constructor of the renderer you are trying to\n *     create.\n * @param {string} cssClassName The name of the CSS class for this renderer.\n * @return {goog.ui.ControlRenderer} An instance of the desired renderer with\n *     its getCssClass() method overridden to return the supplied custom CSS\n *     class name.\n */\ngoog.ui.ControlRenderer.getCustomRenderer = function(ctor, cssClassName) {\n  var renderer = new ctor();\n\n  /**\n   * Returns the CSS class to be applied to the root element of components\n   * rendered using this renderer.\n   * @return {string} Renderer-specific CSS class.\n   */\n  renderer.getCssClass = function() { return cssClassName; };\n\n  return renderer;\n};\n\n\n/**\n * Default CSS class to be applied to the root element of components rendered\n * by this renderer.\n * @type {string}\n */\ngoog.ui.ControlRenderer.CSS_CLASS = goog.getCssName('goog-control');\n\n\n/**\n * Array of arrays of CSS classes that we want composite classes added and\n * removed for in IE6 and lower as a workaround for lack of multi-class CSS\n * selector support.\n *\n * Subclasses that have accompanying CSS requiring this workaround should define\n * their own static IE6_CLASS_COMBINATIONS constant and override\n * getIe6ClassCombinations to return it.\n *\n * For example, if your stylesheet uses the selector .button.collapse-left\n * (and is compiled to .button_collapse-left for the IE6 version of the\n * stylesheet,) you should include ['button', 'collapse-left'] in this array\n * and the class button_collapse-left will be applied to the root element\n * whenever both button and collapse-left are applied individually.\n *\n * Members of each class name combination will be joined with underscores in the\n * order that they're defined in the array. You should alphabetize them (for\n * compatibility with the CSS compiler) unless you are doing something special.\n * @type {Array<Array<string>>}\n */\ngoog.ui.ControlRenderer.IE6_CLASS_COMBINATIONS = [];\n\n\n/**\n * Map of component states to corresponding ARIA attributes.  Since the mapping\n * of component states to ARIA attributes is neither component- nor\n * renderer-specific, this is a static property of the renderer class, and is\n * initialized on first use.\n * @type {Object<goog.ui.Component.State, goog.a11y.aria.State>}\n * @private\n */\ngoog.ui.ControlRenderer.ariaAttributeMap_;\n\n\n/**\n * Map of certain ARIA states to ARIA roles that support them. Used for checked\n * and selected Component states because they are used on Components with ARIA\n * roles that do not support the corresponding ARIA state.\n * @private {!Object<goog.a11y.aria.Role, goog.a11y.aria.State>}\n * @const\n */\ngoog.ui.ControlRenderer.TOGGLE_ARIA_STATE_MAP_ = goog.object.create(\n    goog.a11y.aria.Role.BUTTON, goog.a11y.aria.State.PRESSED,\n    goog.a11y.aria.Role.CHECKBOX, goog.a11y.aria.State.CHECKED,\n    goog.a11y.aria.Role.MENU_ITEM, goog.a11y.aria.State.SELECTED,\n    goog.a11y.aria.Role.MENU_ITEM_CHECKBOX, goog.a11y.aria.State.CHECKED,\n    goog.a11y.aria.Role.MENU_ITEM_RADIO, goog.a11y.aria.State.CHECKED,\n    goog.a11y.aria.Role.RADIO, goog.a11y.aria.State.CHECKED,\n    goog.a11y.aria.Role.TAB, goog.a11y.aria.State.SELECTED,\n    goog.a11y.aria.Role.TREEITEM, goog.a11y.aria.State.SELECTED);\n\n\n/**\n * Returns the ARIA role to be applied to the control.\n * See http://wiki/Main/ARIA for more info.\n * @return {goog.a11y.aria.Role|undefined} ARIA role.\n */\ngoog.ui.ControlRenderer.prototype.getAriaRole = function() {\n  // By default, the ARIA role is unspecified.\n  return undefined;\n};\n\n\n/**\n * Returns the control's contents wrapped in a DIV, with the renderer's own\n * CSS class and additional state-specific classes applied to it.\n * @param {goog.ui.Control} control Control to render.\n * @return {Element} Root element for the control.\n */\ngoog.ui.ControlRenderer.prototype.createDom = function(control) {\n  // Create and return DIV wrapping contents.\n  var element = control.getDomHelper().createDom(\n      goog.dom.TagName.DIV, this.getClassNames(control).join(' '),\n      control.getContent());\n\n  return element;\n};\n\n\n/**\n * Takes the control's root element and returns the parent element of the\n * control's contents.  Since by default controls are rendered as a single\n * DIV, the default implementation returns the element itself.  Subclasses\n * with more complex DOM structures must override this method as needed.\n * @param {Element} element Root element of the control whose content element\n *     is to be returned.\n * @return {Element} The control's content element.\n */\ngoog.ui.ControlRenderer.prototype.getContentElement = function(element) {\n  return element;\n};\n\n\n/**\n * Updates the control's DOM by adding or removing the specified class name\n * to/from its root element. May add additional combined classes as needed in\n * IE6 and lower. Because of this, subclasses should use this method when\n * modifying class names on the control's root element.\n * @param {goog.ui.Control|Element} control Control instance (or root element)\n *     to be updated.\n * @param {string} className CSS class name to add or remove.\n * @param {boolean} enable Whether to add or remove the class name.\n */\ngoog.ui.ControlRenderer.prototype.enableClassName = function(\n    control, className, enable) {\n  var element = /** @type {Element} */ (\n      control.getElement ? control.getElement() : control);\n  if (element) {\n    var classNames = [className];\n\n    // For IE6, we need to enable any combined classes involving this class\n    // as well.\n    // TODO(user): Remove this as IE6 is no longer in use.\n    if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('7')) {\n      classNames = this.getAppliedCombinedClassNames_(\n          goog.dom.classlist.get(element), className);\n      classNames.push(className);\n    }\n\n    goog.dom.classlist.enableAll(element, classNames, enable);\n  }\n};\n\n\n/**\n * Updates the control's DOM by adding or removing the specified extra class\n * name to/from its element.\n * @param {goog.ui.Control} control Control to be updated.\n * @param {string} className CSS class name to add or remove.\n * @param {boolean} enable Whether to add or remove the class name.\n */\ngoog.ui.ControlRenderer.prototype.enableExtraClassName = function(\n    control, className, enable) {\n  // The base class implementation is trivial; subclasses should override as\n  // needed.\n  this.enableClassName(control, className, enable);\n};\n\n\n/**\n * Returns true if this renderer can decorate the element, false otherwise.\n * The default implementation always returns true.\n * @param {Element} element Element to decorate.\n * @return {boolean} Whether the renderer can decorate the element.\n */\ngoog.ui.ControlRenderer.prototype.canDecorate = function(element) {\n  return true;\n};\n\n\n/**\n * Default implementation of `decorate` for {@link goog.ui.Control}s.\n * Initializes the control's ID, content, and state based on the ID of the\n * element, its child nodes, and its CSS classes, respectively.  Returns the\n * element.\n * @param {goog.ui.Control} control Control instance to decorate the element.\n * @param {Element} element Element to decorate.\n * @return {Element} Decorated element.\n */\ngoog.ui.ControlRenderer.prototype.decorate = function(control, element) {\n  // Set the control's ID to the decorated element's DOM ID, if any.\n  if (element.id) {\n    control.setId(element.id);\n  }\n\n  // Set the control's content to the decorated element's content.\n  var contentElem = this.getContentElement(element);\n  if (contentElem && contentElem.firstChild) {\n    control.setContentInternal(\n        contentElem.firstChild.nextSibling ?\n            goog.array.clone(contentElem.childNodes) :\n            contentElem.firstChild);\n  } else {\n    control.setContentInternal(null);\n  }\n\n  // Initialize the control's state based on the decorated element's CSS class.\n  // This implementation is optimized to minimize object allocations, string\n  // comparisons, and DOM access.\n  var state = 0x00;\n  var rendererClassName = this.getCssClass();\n  var structuralClassName = this.getStructuralCssClass();\n  var hasRendererClassName = false;\n  var hasStructuralClassName = false;\n  var hasCombinedClassName = false;\n  var classNames = goog.array.toArray(goog.dom.classlist.get(element));\n  goog.array.forEach(classNames, function(className) {\n    if (!hasRendererClassName && className == rendererClassName) {\n      hasRendererClassName = true;\n      if (structuralClassName == rendererClassName) {\n        hasStructuralClassName = true;\n      }\n    } else if (!hasStructuralClassName && className == structuralClassName) {\n      hasStructuralClassName = true;\n    } else {\n      state |= this.getStateFromClass(className);\n    }\n    if (this.getStateFromClass(className) == goog.ui.Component.State.DISABLED) {\n      goog.asserts.assertElement(contentElem);\n      if (goog.dom.isFocusableTabIndex(contentElem)) {\n        goog.dom.setFocusableTabIndex(contentElem, false);\n      }\n    }\n  }, this);\n  control.setStateInternal(state);\n\n  // Make sure the element has the renderer's CSS classes applied, as well as\n  // any extra class names set on the control.\n  if (!hasRendererClassName) {\n    classNames.push(rendererClassName);\n    if (structuralClassName == rendererClassName) {\n      hasStructuralClassName = true;\n    }\n  }\n  if (!hasStructuralClassName) {\n    classNames.push(structuralClassName);\n  }\n  var extraClassNames = control.getExtraClassNames();\n  if (extraClassNames) {\n    classNames.push.apply(classNames, extraClassNames);\n  }\n\n  // For IE6, rewrite all classes on the decorated element if any combined\n  // classes apply.\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('7')) {\n    var combinedClasses = this.getAppliedCombinedClassNames_(classNames);\n    if (combinedClasses.length > 0) {\n      classNames.push.apply(classNames, combinedClasses);\n      hasCombinedClassName = true;\n    }\n  }\n\n  // Only write to the DOM if new class names had to be added to the element.\n  if (!hasRendererClassName || !hasStructuralClassName || extraClassNames ||\n      hasCombinedClassName) {\n    goog.dom.classlist.set(element, classNames.join(' '));\n  }\n\n  return element;\n};\n\n\n/**\n * Initializes the control's DOM by configuring properties that can only be set\n * after the DOM has entered the document.  This implementation sets up BiDi\n * and keyboard focus.  Called from {@link goog.ui.Control#enterDocument}.\n * @param {goog.ui.Control} control Control whose DOM is to be initialized\n *     as it enters the document.\n */\ngoog.ui.ControlRenderer.prototype.initializeDom = function(control) {\n  // Initialize render direction (BiDi).  We optimize the left-to-right render\n  // direction by assuming that elements are left-to-right by default, and only\n  // updating their styling if they are explicitly set to right-to-left.\n  if (control.isRightToLeft()) {\n    this.setRightToLeft(control.getElement(), true);\n  }\n\n  // Initialize keyboard focusability (tab index).  We assume that components\n  // aren't focusable by default (i.e have no tab index), and only touch the\n  // DOM if the component is focusable, enabled, and visible, and therefore\n  // needs a tab index.\n  if (control.isEnabled()) {\n    this.setFocusable(control, control.isVisible());\n  }\n};\n\n\n/**\n * Sets the element's ARIA role.\n * @param {Element} element Element to update.\n * @param {?goog.a11y.aria.Role=} opt_preferredRole The preferred ARIA role.\n */\ngoog.ui.ControlRenderer.prototype.setAriaRole = function(\n    element, opt_preferredRole) {\n  var ariaRole = opt_preferredRole || this.getAriaRole();\n  if (ariaRole) {\n    goog.asserts.assert(\n        element, 'The element passed as a first parameter cannot be null.');\n    var currentRole = goog.a11y.aria.getRole(element);\n    if (ariaRole == currentRole) {\n      return;\n    }\n    goog.a11y.aria.setRole(element, ariaRole);\n  }\n};\n\n\n/**\n * Sets the element's ARIA attributes, including distinguishing between\n * universally supported ARIA properties and ARIA states that are only\n * supported by certain ARIA roles. Only attributes which are initialized to be\n * true will be set.\n * @param {!goog.ui.Control} control Control whose ARIA state will be updated.\n * @param {!Element} element Element whose ARIA state is to be updated.\n */\ngoog.ui.ControlRenderer.prototype.setAriaStates = function(control, element) {\n  goog.asserts.assert(control);\n  goog.asserts.assert(element);\n\n  var ariaLabel = control.getAriaLabel();\n  if (ariaLabel != null) {\n    this.setAriaLabel(element, ariaLabel);\n  }\n\n  if (!control.isVisible()) {\n    goog.a11y.aria.setState(\n        element, goog.a11y.aria.State.HIDDEN, !control.isVisible());\n  }\n  if (!control.isEnabled()) {\n    this.updateAriaState(\n        element, goog.ui.Component.State.DISABLED, !control.isEnabled());\n  }\n  if (control.isSupportedState(goog.ui.Component.State.SELECTED)) {\n    this.updateAriaState(\n        element, goog.ui.Component.State.SELECTED, control.isSelected());\n  }\n  if (control.isSupportedState(goog.ui.Component.State.CHECKED)) {\n    this.updateAriaState(\n        element, goog.ui.Component.State.CHECKED, control.isChecked());\n  }\n  if (control.isSupportedState(goog.ui.Component.State.OPENED)) {\n    this.updateAriaState(\n        element, goog.ui.Component.State.OPENED, control.isOpen());\n  }\n};\n\n\n/**\n * Sets the element's ARIA label. This should be overriden by subclasses that\n * don't apply the role directly on control.element_.\n * @param {!Element} element Element whose ARIA label is to be updated.\n * @param {string} ariaLabel Label to add to the element.\n */\ngoog.ui.ControlRenderer.prototype.setAriaLabel = function(element, ariaLabel) {\n  goog.a11y.aria.setLabel(element, ariaLabel);\n};\n\n\n/**\n * Allows or disallows text selection within the control's DOM.\n * @param {Element} element The control's root element.\n * @param {boolean} allow Whether the element should allow text selection.\n */\ngoog.ui.ControlRenderer.prototype.setAllowTextSelection = function(\n    element, allow) {\n  // On all browsers other than IE and Opera, it isn't necessary to recursively\n  // apply unselectable styling to the element's children.\n  goog.style.setUnselectable(\n      element, !allow, !goog.userAgent.IE && !goog.userAgent.OPERA);\n};\n\n\n/**\n * Applies special styling to/from the control's element if it is rendered\n * right-to-left, and removes it if it is rendered left-to-right.\n * @param {Element} element The control's root element.\n * @param {boolean} rightToLeft Whether the component is rendered\n *     right-to-left.\n */\ngoog.ui.ControlRenderer.prototype.setRightToLeft = function(\n    element, rightToLeft) {\n  this.enableClassName(\n      element, goog.getCssName(this.getStructuralCssClass(), 'rtl'),\n      rightToLeft);\n};\n\n\n/**\n * Returns true if the control's key event target supports keyboard focus\n * (based on its `tabIndex` attribute), false otherwise.\n * @param {goog.ui.Control} control Control whose key event target is to be\n *     checked.\n * @return {boolean} Whether the control's key event target is focusable.\n */\ngoog.ui.ControlRenderer.prototype.isFocusable = function(control) {\n  var keyTarget;\n  if (control.isSupportedState(goog.ui.Component.State.FOCUSED) &&\n      (keyTarget = control.getKeyEventTarget())) {\n    return goog.dom.isFocusableTabIndex(keyTarget);\n  }\n  return false;\n};\n\n\n/**\n * Updates the control's key event target to make it focusable or non-focusable\n * via its `tabIndex` attribute.  Does nothing if the control doesn't\n * support the `FOCUSED` state, or if it has no key event target.\n * @param {goog.ui.Control} control Control whose key event target is to be\n *     updated.\n * @param {boolean} focusable Whether to enable keyboard focus support on the\n *     control's key event target.\n */\ngoog.ui.ControlRenderer.prototype.setFocusable = function(control, focusable) {\n  var keyTarget;\n  if (control.isSupportedState(goog.ui.Component.State.FOCUSED) &&\n      (keyTarget = control.getKeyEventTarget())) {\n    if (!focusable && control.isFocused()) {\n      // Blur before hiding.  Note that IE calls onblur handlers asynchronously.\n      try {\n        keyTarget.blur();\n      } catch (e) {\n        // TODO(user|user):  Find out why this fails on IE.\n      }\n      // The blur event dispatched by the key event target element when blur()\n      // was called on it should have been handled by the control's handleBlur()\n      // method, so at this point the control should no longer be focused.\n      // However, blur events are unreliable on IE and FF3, so if at this point\n      // the control is still focused, we trigger its handleBlur() method\n      // programmatically.\n      if (control.isFocused()) {\n        control.handleBlur(null);\n      }\n    }\n    // Don't overwrite existing tab index values unless needed.\n    if (goog.dom.isFocusableTabIndex(keyTarget) != focusable) {\n      goog.dom.setFocusableTabIndex(keyTarget, focusable);\n    }\n  }\n};\n\n\n/**\n * Shows or hides the element.\n * @param {Element} element Element to update.\n * @param {boolean} visible Whether to show the element.\n */\ngoog.ui.ControlRenderer.prototype.setVisible = function(element, visible) {\n  // The base class implementation is trivial; subclasses should override as\n  // needed.  It should be possible to do animated reveals, for example.\n  goog.style.setElementShown(element, visible);\n  if (element) {\n    goog.a11y.aria.setState(element, goog.a11y.aria.State.HIDDEN, !visible);\n  }\n};\n\n\n/**\n * Updates the appearance of the control in response to a state change.\n * @param {goog.ui.Control} control Control instance to update.\n * @param {goog.ui.Component.State} state State to enable or disable.\n * @param {boolean} enable Whether the control is entering or exiting the state.\n */\ngoog.ui.ControlRenderer.prototype.setState = function(control, state, enable) {\n  var element = control.getElement();\n  if (element) {\n    var className = this.getClassForState(state);\n    if (className) {\n      this.enableClassName(control, className, enable);\n    }\n    this.updateAriaState(element, state, enable);\n  }\n};\n\n\n/**\n * Updates the element's ARIA (accessibility) attributes , including\n * distinguishing between universally supported ARIA properties and ARIA states\n * that are only supported by certain ARIA roles.\n * @param {Element} element Element whose ARIA state is to be updated.\n * @param {goog.ui.Component.State} state Component state being enabled or\n *     disabled.\n * @param {boolean} enable Whether the state is being enabled or disabled.\n * @protected\n */\ngoog.ui.ControlRenderer.prototype.updateAriaState = function(\n    element, state, enable) {\n  // Ensure the ARIA attribute map exists.\n  if (!goog.ui.ControlRenderer.ariaAttributeMap_) {\n    goog.ui.ControlRenderer.ariaAttributeMap_ = goog.object.create(\n        goog.ui.Component.State.DISABLED, goog.a11y.aria.State.DISABLED,\n        goog.ui.Component.State.SELECTED, goog.a11y.aria.State.SELECTED,\n        goog.ui.Component.State.CHECKED, goog.a11y.aria.State.CHECKED,\n        goog.ui.Component.State.OPENED, goog.a11y.aria.State.EXPANDED);\n  }\n  goog.asserts.assert(\n      element, 'The element passed as a first parameter cannot be null.');\n  var ariaAttr = goog.ui.ControlRenderer.getAriaStateForAriaRole_(\n      element, goog.ui.ControlRenderer.ariaAttributeMap_[state]);\n  if (ariaAttr) {\n    goog.a11y.aria.setState(element, ariaAttr, enable);\n  }\n};\n\n\n/**\n * Returns the appropriate ARIA attribute based on ARIA role if the ARIA\n * attribute is an ARIA state.\n * @param {!Element} element The element from which to get the ARIA role for\n * matching ARIA state.\n * @param {goog.a11y.aria.State} attr The ARIA attribute to check to see if it\n * can be applied to the given ARIA role.\n * @return {goog.a11y.aria.State} An ARIA attribute that can be applied to the\n * given ARIA role.\n * @private\n */\ngoog.ui.ControlRenderer.getAriaStateForAriaRole_ = function(element, attr) {\n  var role = goog.a11y.aria.getRole(element);\n  if (!role) {\n    return attr;\n  }\n  role = /** @type {goog.a11y.aria.Role} */ (role);\n  var matchAttr = goog.ui.ControlRenderer.TOGGLE_ARIA_STATE_MAP_[role] || attr;\n  return goog.ui.ControlRenderer.isAriaState_(attr) ? matchAttr : attr;\n};\n\n\n/**\n * Determines if the given ARIA attribute is an ARIA property or ARIA state.\n * @param {goog.a11y.aria.State} attr The ARIA attribute to classify.\n * @return {boolean} If the ARIA attribute is an ARIA state.\n * @private\n */\ngoog.ui.ControlRenderer.isAriaState_ = function(attr) {\n  return attr == goog.a11y.aria.State.CHECKED ||\n      attr == goog.a11y.aria.State.SELECTED;\n};\n\n\n/**\n * Takes a control's root element, and sets its content to the given text\n * caption or DOM structure.  The default implementation replaces the children\n * of the given element.  Renderers that create more complex DOM structures\n * must override this method accordingly.\n * @param {Element} element The control's root element.\n * @param {goog.ui.ControlContent} content Text caption or DOM structure to be\n *     set as the control's content. The DOM nodes will not be cloned, they\n *     will only moved under the content element of the control.\n */\ngoog.ui.ControlRenderer.prototype.setContent = function(element, content) {\n  var contentElem = this.getContentElement(element);\n  if (contentElem) {\n    goog.dom.removeChildren(contentElem);\n    if (content) {\n      if (typeof content === 'string') {\n        goog.dom.setTextContent(contentElem, content);\n      } else {\n        var childHandler = function(child) {\n          if (child) {\n            var doc = goog.dom.getOwnerDocument(contentElem);\n            contentElem.appendChild(\n                typeof child === 'string' ? doc.createTextNode(child) : child);\n          }\n        };\n        if (goog.isArray(content)) {\n          // Array of nodes.\n          goog.array.forEach(content, childHandler);\n        } else if (goog.isArrayLike(content) && !('nodeType' in content)) {\n          // NodeList. The second condition filters out TextNode which also has\n          // length attribute but is not array like. The nodes have to be cloned\n          // because childHandler removes them from the list during iteration.\n          goog.array.forEach(\n              goog.array.clone(/** @type {!NodeList<?>} */ (content)),\n              childHandler);\n        } else {\n          // Node or string.\n          childHandler(content);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Returns the element within the component's DOM that should receive keyboard\n * focus (null if none).  The default implementation returns the control's root\n * element.\n * @param {goog.ui.Control} control Control whose key event target is to be\n *     returned.\n * @return {Element} The key event target.\n */\ngoog.ui.ControlRenderer.prototype.getKeyEventTarget = function(control) {\n  return control.getElement();\n};\n\n\n// CSS class name management.\n\n\n/**\n * Returns the CSS class name to be applied to the root element of all\n * components rendered or decorated using this renderer.  The class name\n * is expected to uniquely identify the renderer class, i.e. no two\n * renderer classes are expected to share the same CSS class name.\n * @return {string} Renderer-specific CSS class name.\n */\ngoog.ui.ControlRenderer.prototype.getCssClass = function() {\n  return goog.ui.ControlRenderer.CSS_CLASS;\n};\n\n\n/**\n * Returns an array of combinations of classes to apply combined class names for\n * in IE6 and below. See {@link IE6_CLASS_COMBINATIONS} for more detail. This\n * method doesn't reference {@link IE6_CLASS_COMBINATIONS} so that it can be\n * compiled out, but subclasses should return their IE6_CLASS_COMBINATIONS\n * static constant instead.\n * @return {Array<Array<string>>} Array of class name combinations.\n */\ngoog.ui.ControlRenderer.prototype.getIe6ClassCombinations = function() {\n  return [];\n};\n\n\n/**\n * Returns the name of a DOM structure-specific CSS class to be applied to the\n * root element of all components rendered or decorated using this renderer.\n * Unlike the class name returned by {@link #getCssClass}, the structural class\n * name may be shared among different renderers that generate similar DOM\n * structures.  The structural class name also serves as the basis of derived\n * class names used to identify and style structural elements of the control's\n * DOM, as well as the basis for state-specific class names.  The default\n * implementation returns the same class name as {@link #getCssClass}, but\n * subclasses are expected to override this method as needed.\n * @return {string} DOM structure-specific CSS class name (same as the renderer-\n *     specific CSS class name by default).\n */\ngoog.ui.ControlRenderer.prototype.getStructuralCssClass = function() {\n  return this.getCssClass();\n};\n\n\n/**\n * Returns all CSS class names applicable to the given control, based on its\n * state.  The return value is an array of strings containing\n * <ol>\n *   <li>the renderer-specific CSS class returned by {@link #getCssClass},\n *       followed by\n *   <li>the structural CSS class returned by {@link getStructuralCssClass} (if\n *       different from the renderer-specific CSS class), followed by\n *   <li>any state-specific classes returned by {@link #getClassNamesForState},\n *       followed by\n *   <li>any extra classes returned by the control's `getExtraClassNames`\n *       method and\n *   <li>for IE6 and lower, additional combined classes from\n *       {@link getAppliedCombinedClassNames_}.\n * </ol>\n * Since all controls have at least one renderer-specific CSS class name, this\n * method is guaranteed to return an array of at least one element.\n * @param {goog.ui.Control} control Control whose CSS classes are to be\n *     returned.\n * @return {!Array<string>} Array of CSS class names applicable to the control.\n * @protected\n */\ngoog.ui.ControlRenderer.prototype.getClassNames = function(control) {\n  var cssClass = this.getCssClass();\n\n  // Start with the renderer-specific class name.\n  var classNames = [cssClass];\n\n  // Add structural class name, if different.\n  var structuralCssClass = this.getStructuralCssClass();\n  if (structuralCssClass != cssClass) {\n    classNames.push(structuralCssClass);\n  }\n\n  // Add state-specific class names, if any.\n  var classNamesForState = this.getClassNamesForState(control.getState());\n  classNames.push.apply(classNames, classNamesForState);\n\n  // Add extra class names, if any.\n  var extraClassNames = control.getExtraClassNames();\n  if (extraClassNames) {\n    classNames.push.apply(classNames, extraClassNames);\n  }\n\n  // Add composite classes for IE6 support\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('7')) {\n    classNames.push.apply(\n        classNames, this.getAppliedCombinedClassNames_(classNames));\n  }\n\n  return classNames;\n};\n\n\n/**\n * Returns an array of all the combined class names that should be applied based\n * on the given list of classes. Checks the result of\n * {@link getIe6ClassCombinations} for any combinations that have all\n * members contained in classes. If a combination matches, the members are\n * joined with an underscore (in order), and added to the return array.\n *\n * If opt_includedClass is provided, return only the combined classes that have\n * all members contained in classes AND include opt_includedClass as well.\n * opt_includedClass is added to classes as well.\n * @param {IArrayLike<string>} classes Array-like thing of classes to\n *     return matching combined classes for.\n * @param {?string=} opt_includedClass If provided, get only the combined\n *     classes that include this one.\n * @return {!Array<string>} Array of combined class names that should be\n *     applied.\n * @private\n */\ngoog.ui.ControlRenderer.prototype.getAppliedCombinedClassNames_ = function(\n    classes, opt_includedClass) {\n  var toAdd = [];\n  if (opt_includedClass) {\n    classes = goog.array.concat(classes, [opt_includedClass]);\n  }\n  goog.array.forEach(this.getIe6ClassCombinations(), function(combo) {\n    if (goog.array.every(combo, goog.partial(goog.array.contains, classes)) &&\n        (!opt_includedClass || goog.array.contains(combo, opt_includedClass))) {\n      toAdd.push(combo.join('_'));\n    }\n  });\n  return toAdd;\n};\n\n\n/**\n * Takes a bit mask of {@link goog.ui.Component.State}s, and returns an array\n * of the appropriate class names representing the given state, suitable to be\n * applied to the root element of a component rendered using this renderer, or\n * null if no state-specific classes need to be applied.  This default\n * implementation uses the renderer's {@link getClassForState} method to\n * generate each state-specific class.\n * @param {number} state Bit mask of component states.\n * @return {!Array<string>} Array of CSS class names representing the given\n *     state.\n * @protected\n */\ngoog.ui.ControlRenderer.prototype.getClassNamesForState = function(state) {\n  var classNames = [];\n  while (state) {\n    // For each enabled state, push the corresponding CSS class name onto\n    // the classNames array.\n    var mask = state & -state;  // Least significant bit\n    classNames.push(\n        this.getClassForState(\n            /** @type {goog.ui.Component.State} */ (mask)));\n    state &= ~mask;\n  }\n  return classNames;\n};\n\n\n/**\n * Takes a single {@link goog.ui.Component.State}, and returns the\n * corresponding CSS class name (null if none).\n * @param {goog.ui.Component.State} state Component state.\n * @return {string|undefined} CSS class representing the given state (undefined\n *     if none).\n * @protected\n */\ngoog.ui.ControlRenderer.prototype.getClassForState = function(state) {\n  if (!this.classByState_) {\n    this.createClassByStateMap_();\n  }\n  return this.classByState_[state];\n};\n\n\n/**\n * Takes a single CSS class name which may represent a component state, and\n * returns the corresponding component state (0x00 if none).\n * @param {string} className CSS class name, possibly representing a component\n *     state.\n * @return {goog.ui.Component.State} state Component state corresponding\n *     to the given CSS class (0x00 if none).\n * @protected\n */\ngoog.ui.ControlRenderer.prototype.getStateFromClass = function(className) {\n  if (!this.stateByClass_) {\n    this.createStateByClassMap_();\n  }\n  var state = parseInt(this.stateByClass_[className], 10);\n  return /** @type {goog.ui.Component.State} */ (isNaN(state) ? 0x00 : state);\n};\n\n\n/**\n * Creates the lookup table of states to classes, used during state changes.\n * @private\n */\ngoog.ui.ControlRenderer.prototype.createClassByStateMap_ = function() {\n  var baseClass = this.getStructuralCssClass();\n\n  // This ensures space-separated css classnames are not allowed, which some\n  // ControlRenderers had been doing.  See http://b/13694665.\n  var isValidClassName =\n      !goog.string.contains(goog.string.normalizeWhitespace(baseClass), ' ');\n  goog.asserts.assert(\n      isValidClassName,\n      'ControlRenderer has an invalid css class: \\'' + baseClass + '\\'');\n\n  /**\n   * Map of component states to state-specific structural class names,\n   * used when changing the DOM in response to a state change.  Precomputed\n   * and cached on first use to minimize object allocations and string\n   * concatenation.\n   * @type {Object}\n   * @private\n   */\n  this.classByState_ = goog.object.create(\n      goog.ui.Component.State.DISABLED, goog.getCssName(baseClass, 'disabled'),\n      goog.ui.Component.State.HOVER, goog.getCssName(baseClass, 'hover'),\n      goog.ui.Component.State.ACTIVE, goog.getCssName(baseClass, 'active'),\n      goog.ui.Component.State.SELECTED, goog.getCssName(baseClass, 'selected'),\n      goog.ui.Component.State.CHECKED, goog.getCssName(baseClass, 'checked'),\n      goog.ui.Component.State.FOCUSED, goog.getCssName(baseClass, 'focused'),\n      goog.ui.Component.State.OPENED, goog.getCssName(baseClass, 'open'));\n};\n\n\n/**\n * Creates the lookup table of classes to states, used during decoration.\n * @private\n */\ngoog.ui.ControlRenderer.prototype.createStateByClassMap_ = function() {\n  // We need the classByState_ map so we can transpose it.\n  if (!this.classByState_) {\n    this.createClassByStateMap_();\n  }\n\n  /**\n   * Map of state-specific structural class names to component states,\n   * used during element decoration.  Precomputed and cached on first use\n   * to minimize object allocations and string concatenation.\n   * @type {Object}\n   * @private\n   */\n  this.stateByClass_ = goog.object.transpose(this.classByState_);\n};\n"],
"names":["goog","provide","forwardDeclare","require","ui","ControlRenderer","goog.ui.ControlRenderer","addSingletonGetter","tagUnsealableClass","getCustomRenderer","goog.ui.ControlRenderer.getCustomRenderer","ctor","cssClassName","renderer","getCssClass","renderer.getCssClass","CSS_CLASS","getCssName","IE6_CLASS_COMBINATIONS","ariaAttributeMap_","TOGGLE_ARIA_STATE_MAP_","object","create","a11y","aria","Role","BUTTON","State","PRESSED","CHECKBOX","CHECKED","MENU_ITEM","SELECTED","MENU_ITEM_CHECKBOX","MENU_ITEM_RADIO","RADIO","TAB","TREEITEM","prototype","getAriaRole","goog.ui.ControlRenderer.prototype.getAriaRole","undefined","createDom","goog.ui.ControlRenderer.prototype.createDom","control","element","getDomHelper","dom","TagName","DIV","getClassNames","join","getContent","getContentElement","goog.ui.ControlRenderer.prototype.getContentElement","enableClassName","goog.ui.ControlRenderer.prototype.enableClassName","className","enable","getElement","classNames","userAgent","IE","isVersionOrHigher","getAppliedCombinedClassNames_","classlist","get","push","enableAll","enableExtraClassName","goog.ui.ControlRenderer.prototype.enableExtraClassName","canDecorate","goog.ui.ControlRenderer.prototype.canDecorate","decorate","goog.ui.ControlRenderer.prototype.decorate","id","setId","contentElem","firstChild","setContentInternal","nextSibling","array","clone","childNodes","state","rendererClassName","structuralClassName","getStructuralCssClass","hasRendererClassName","hasStructuralClassName","hasCombinedClassName","toArray","forEach","getStateFromClass","Component","DISABLED","asserts","assertElement","isFocusableTabIndex","setFocusableTabIndex","setStateInternal","extraClassNames","getExtraClassNames","apply","combinedClasses","length","set","initializeDom","goog.ui.ControlRenderer.prototype.initializeDom","isRightToLeft","setRightToLeft","isEnabled","setFocusable","isVisible","setAriaRole","goog.ui.ControlRenderer.prototype.setAriaRole","opt_preferredRole","ariaRole","assert","currentRole","getRole","setRole","setAriaStates","goog.ui.ControlRenderer.prototype.setAriaStates","ariaLabel","getAriaLabel","setAriaLabel","setState","HIDDEN","updateAriaState","isSupportedState","isSelected","isChecked","OPENED","isOpen","goog.ui.ControlRenderer.prototype.setAriaLabel","setLabel","setAllowTextSelection","goog.ui.ControlRenderer.prototype.setAllowTextSelection","allow","style","setUnselectable","OPERA","goog.ui.ControlRenderer.prototype.setRightToLeft","rightToLeft","isFocusable","goog.ui.ControlRenderer.prototype.isFocusable","keyTarget","FOCUSED","getKeyEventTarget","goog.ui.ControlRenderer.prototype.setFocusable","focusable","isFocused","blur","e","handleBlur","setVisible","goog.ui.ControlRenderer.prototype.setVisible","visible","setElementShown","goog.ui.ControlRenderer.prototype.setState","getClassForState","goog.ui.ControlRenderer.prototype.updateAriaState","EXPANDED","ariaAttr","getAriaStateForAriaRole_","goog.ui.ControlRenderer.getAriaStateForAriaRole_","attr","role","matchAttr","isAriaState_","goog.ui.ControlRenderer.isAriaState_","setContent","goog.ui.ControlRenderer.prototype.setContent","content","removeChildren","setTextContent","childHandler","child","doc","getOwnerDocument","appendChild","createTextNode","isArray","isArrayLike","goog.ui.ControlRenderer.prototype.getKeyEventTarget","goog.ui.ControlRenderer.prototype.getCssClass","getIe6ClassCombinations","goog.ui.ControlRenderer.prototype.getIe6ClassCombinations","goog.ui.ControlRenderer.prototype.getStructuralCssClass","goog.ui.ControlRenderer.prototype.getClassNames","cssClass","structuralCssClass","classNamesForState","getClassNamesForState","getState","goog.ui.ControlRenderer.prototype.getAppliedCombinedClassNames_","classes","opt_includedClass","toAdd","concat","combo","every","partial","contains","goog.ui.ControlRenderer.prototype.getClassNamesForState","mask","goog.ui.ControlRenderer.prototype.getClassForState","classByState_","createClassByStateMap_","goog.ui.ControlRenderer.prototype.getStateFromClass","stateByClass_","createStateByClassMap_","parseInt","isNaN","goog.ui.ControlRenderer.prototype.createClassByStateMap_","baseClass","isValidClassName","string","normalizeWhitespace","HOVER","ACTIVE","goog.ui.ControlRenderer.prototype.createStateByClassMap_","transpose"]
}
