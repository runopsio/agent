{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$hubextensions.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/@sentry/tracing/dist/hubextensions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$hubextensions\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hub_1 = require(\"@sentry/hub\");\nvar types_1 = require(\"@sentry/types\");\nvar utils_1 = require(\"@sentry/utils\");\nvar errors_1 = require(\"./errors\");\nvar idletransaction_1 = require(\"./idletransaction\");\nvar transaction_1 = require(\"./transaction\");\nvar utils_2 = require(\"./utils\");\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n    var scope = this.getScope();\n    if (scope) {\n        var span = scope.getSpan();\n        if (span) {\n            return {\n                'sentry-trace': span.toTraceparent(),\n            };\n        }\n    }\n    return {};\n}\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param hub: The hub off of which to read config options\n * @param transaction: The transaction needing a sampling decision\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(transaction, options, samplingContext) {\n    // nothing to do if tracing is not enabled\n    if (!utils_2.hasTracingEnabled(options)) {\n        transaction.sampled = false;\n        return transaction;\n    }\n    // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n    if (transaction.sampled !== undefined) {\n        transaction.setMetadata({\n            transactionSampling: { method: types_1.TransactionSamplingMethod.Explicit },\n        });\n        return transaction;\n    }\n    // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n    // work; prefer the hook if so\n    var sampleRate;\n    if (typeof options.tracesSampler === 'function') {\n        sampleRate = options.tracesSampler(samplingContext);\n        transaction.setMetadata({\n            transactionSampling: {\n                method: types_1.TransactionSamplingMethod.Sampler,\n                // cast to number in case it's a boolean\n                rate: Number(sampleRate),\n            },\n        });\n    }\n    else if (samplingContext.parentSampled !== undefined) {\n        sampleRate = samplingContext.parentSampled;\n        transaction.setMetadata({\n            transactionSampling: { method: types_1.TransactionSamplingMethod.Inheritance },\n        });\n    }\n    else {\n        sampleRate = options.tracesSampleRate;\n        transaction.setMetadata({\n            transactionSampling: {\n                method: types_1.TransactionSamplingMethod.Rate,\n                // cast to number in case it's a boolean\n                rate: Number(sampleRate),\n            },\n        });\n    }\n    // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n    // only valid values are booleans or numbers between 0 and 1.)\n    if (!isValidSampleRate(sampleRate)) {\n        utils_1.logger.warn(\"[Tracing] Discarding transaction because of invalid sample rate.\");\n        transaction.sampled = false;\n        return transaction;\n    }\n    // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n    if (!sampleRate) {\n        utils_1.logger.log(\"[Tracing] Discarding transaction because \" + (typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'));\n        transaction.sampled = false;\n        return transaction;\n    }\n    // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n    // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n    transaction.sampled = Math.random() < sampleRate;\n    // if we're not going to keep it, we're done\n    if (!transaction.sampled) {\n        utils_1.logger.log(\"[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = \" + Number(sampleRate) + \")\");\n        return transaction;\n    }\n    utils_1.logger.log(\"[Tracing] starting \" + transaction.op + \" transaction - \" + transaction.name);\n    return transaction;\n}\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n    // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n        utils_1.logger.warn(\"[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got \" + JSON.stringify(rate) + \" of type \" + JSON.stringify(typeof rate) + \".\");\n        return false;\n    }\n    // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n    if (rate < 0 || rate > 1) {\n        utils_1.logger.warn(\"[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got \" + rate + \".\");\n        return false;\n    }\n    return true;\n}\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(transactionContext, customSamplingContext) {\n    var _a, _b;\n    var options = ((_a = this.getClient()) === null || _a === void 0 ? void 0 : _a.getOptions()) || {};\n    var transaction = new transaction_1.Transaction(transactionContext, this);\n    transaction = sample(transaction, options, tslib_1.__assign({ parentSampled: transactionContext.parentSampled, transactionContext: transactionContext }, customSamplingContext));\n    if (transaction.sampled) {\n        transaction.initSpanRecorder((_b = options._experiments) === null || _b === void 0 ? void 0 : _b.maxSpans);\n    }\n    return transaction;\n}\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(hub, transactionContext, idleTimeout, onScope, customSamplingContext) {\n    var _a, _b;\n    var options = ((_a = hub.getClient()) === null || _a === void 0 ? void 0 : _a.getOptions()) || {};\n    var transaction = new idletransaction_1.IdleTransaction(transactionContext, hub, idleTimeout, onScope);\n    transaction = sample(transaction, options, tslib_1.__assign({ parentSampled: transactionContext.parentSampled, transactionContext: transactionContext }, customSamplingContext));\n    if (transaction.sampled) {\n        transaction.initSpanRecorder((_b = options._experiments) === null || _b === void 0 ? void 0 : _b.maxSpans);\n    }\n    return transaction;\n}\nexports.startIdleTransaction = startIdleTransaction;\n/**\n * @private\n */\nfunction _addTracingExtensions() {\n    var carrier = hub_1.getMainCarrier();\n    if (!carrier.__SENTRY__) {\n        return;\n    }\n    carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n    if (!carrier.__SENTRY__.extensions.startTransaction) {\n        carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n    }\n    if (!carrier.__SENTRY__.extensions.traceHeaders) {\n        carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n    }\n}\nexports._addTracingExtensions = _addTracingExtensions;\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n    var carrier = hub_1.getMainCarrier();\n    if (!carrier.__SENTRY__) {\n        return;\n    }\n    var packageToIntegrationMapping = {\n        mongodb: function () {\n            var integration = utils_1.dynamicRequire(module, './integrations/node/mongo');\n            return new integration.Mongo();\n        },\n        mongoose: function () {\n            var integration = utils_1.dynamicRequire(module, './integrations/node/mongo');\n            return new integration.Mongo({ mongoose: true });\n        },\n        mysql: function () {\n            var integration = utils_1.dynamicRequire(module, './integrations/node/mysql');\n            return new integration.Mysql();\n        },\n        pg: function () {\n            var integration = utils_1.dynamicRequire(module, './integrations/node/postgres');\n            return new integration.Postgres();\n        },\n    };\n    var mappedPackages = Object.keys(packageToIntegrationMapping)\n        .filter(function (moduleName) { return !!utils_1.loadModule(moduleName); })\n        .map(function (pkg) {\n        try {\n            return packageToIntegrationMapping[pkg]();\n        }\n        catch (e) {\n            return undefined;\n        }\n    })\n        .filter(function (p) { return p; });\n    if (mappedPackages.length > 0) {\n        carrier.__SENTRY__.integrations = tslib_1.__spread((carrier.__SENTRY__.integrations || []), mappedPackages);\n    }\n}\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nfunction addExtensionMethods() {\n    _addTracingExtensions();\n    // Detect and automatically load specified integrations.\n    if (utils_1.isNodeEnv()) {\n        _autoloadDatabaseIntegrations();\n    }\n    // If an error happens globally, we should make sure transaction status is set to error.\n    errors_1.registerErrorInstrumentation();\n}\nexports.addExtensionMethods = addExtensionMethods;\n//# sourceMappingURL=hubextensions.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","traceHeaders","scope","getScope","span","getSpan","toTraceparent","sample","transaction","options","samplingContext","utils_2","hasTracingEnabled","sampled","undefined","setMetadata","transactionSampling","method","types_1","TransactionSamplingMethod","Explicit","tracesSampler","sampleRate","Sampler","rate","Number","parentSampled","Inheritance","tracesSampleRate","Rate","isNaN","utils_1","logger","warn","JSON","stringify","log","Math","random","op","name","_startTransaction","transactionContext","customSamplingContext","_a","_b","getClient","getOptions","transaction_1","Transaction","tslib_1","__assign","initSpanRecorder","_experiments","maxSpans","_addTracingExtensions","carrier","hub_1","getMainCarrier","__SENTRY__","extensions","startTransaction","_autoloadDatabaseIntegrations","packageToIntegrationMapping","mongodb","dynamicRequire","integration","Mongo","mongoose","mysql","Mysql","pg","Postgres","mappedPackages","Object","keys","filter","moduleName","loadModule","map","pkg","e","p","length","integrations","__spread","defineProperty","value","errors_1","idletransaction_1","startIdleTransaction","hub","idleTimeout","onScope","IdleTransaction","addExtensionMethods","isNodeEnv","registerErrorInstrumentation"]
}
