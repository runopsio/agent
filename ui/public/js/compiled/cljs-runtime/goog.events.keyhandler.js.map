{
"version":3,
"file":"goog.events.keyhandler.js",
"lineCount":170,
"mappings":"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",
"sources":["goog/events/keyhandler.js"],
"sourcesContent":["// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview This file contains a class for working with keyboard events\n * that repeat consistently across browsers and platforms. It also unifies the\n * key code so that it is the same in all browsers and platforms.\n *\n * Different web browsers have very different keyboard event handling. Most\n * importantly is that only certain browsers repeat keydown events:\n * IE, Opera, FF/Win32, and Safari 3 repeat keydown events.\n * FF/Mac and Safari 2 do not.\n *\n * For the purposes of this code, \"Safari 3\" means WebKit 525+, when WebKit\n * decided that they should try to match IE's key handling behavior.\n * Safari 3.0.4, which shipped with Leopard (WebKit 523), has the\n * Safari 2 behavior.\n *\n * Firefox, Safari, Opera prevent on keypress\n *\n * IE prevents on keydown\n *\n * Firefox does not fire keypress for shift, ctrl, alt\n * Firefox does fire keydown for shift, ctrl, alt, meta\n * Firefox does not repeat keydown for shift, ctrl, alt, meta\n *\n * Firefox does not fire keypress for up and down in an input\n *\n * Opera fires keypress for shift, ctrl, alt, meta\n * Opera does not repeat keypress for shift, ctrl, alt, meta\n *\n * Safari 2 and 3 do not fire keypress for shift, ctrl, alt\n * Safari 2 does not fire keydown for shift, ctrl, alt\n * Safari 3 *does* fire keydown for shift, ctrl, alt\n *\n * IE provides the keycode for keyup/down events and the charcode (in the\n * keycode field) for keypress.\n *\n * Mozilla provides the keycode for keyup/down and the charcode for keypress\n * unless it's a non text modifying key in which case the keycode is provided.\n *\n * Safari 3 provides the keycode and charcode for all events.\n *\n * Opera provides the keycode for keyup/down event and either the charcode or\n * the keycode (in the keycode field) for keypress events.\n *\n * Firefox x11 doesn't fire keydown events if a another key is already held down\n * until the first key is released. This can cause a key event to be fired with\n * a keyCode for the first key and a charCode for the second key.\n *\n * Safari in keypress\n *\n *        charCode keyCode which\n * ENTER:       13      13    13\n * F1:       63236   63236 63236\n * F8:       63243   63243 63243\n * ...\n * p:          112     112   112\n * P:           80      80    80\n *\n * Firefox, keypress:\n *\n *        charCode keyCode which\n * ENTER:        0      13    13\n * F1:           0     112     0\n * F8:           0     119     0\n * ...\n * p:          112       0   112\n * P:           80       0    80\n *\n * Opera, Mac+Win32, keypress:\n *\n *         charCode keyCode which\n * ENTER: undefined      13    13\n * F1:    undefined     112     0\n * F8:    undefined     119     0\n * ...\n * p:     undefined     112   112\n * P:     undefined      80    80\n *\n * IE7, keydown\n *\n *         charCode keyCode     which\n * ENTER: undefined      13 undefined\n * F1:    undefined     112 undefined\n * F8:    undefined     119 undefined\n * ...\n * p:     undefined      80 undefined\n * P:     undefined      80 undefined\n *\n * @author arv@google.com (Erik Arvidsson)\n * @author eae@google.com (Emil A Eklund)\n * @see ../demos/keyhandler.html\n */\n\ngoog.provide('goog.events.KeyEvent');\ngoog.provide('goog.events.KeyHandler');\ngoog.provide('goog.events.KeyHandler.EventType');\n\ngoog.require('goog.events');\ngoog.require('goog.events.BrowserEvent');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.events.EventType');\ngoog.require('goog.events.KeyCodes');\ngoog.require('goog.userAgent');\n\n\n\n/**\n * A wrapper around an element that you want to listen to keyboard events on.\n * @param {Element|Document=} opt_element The element or document to listen on.\n * @param {boolean=} opt_capture Whether to listen for browser events in\n *     capture phase (defaults to false).\n * @constructor\n * @extends {goog.events.EventTarget}\n * @final\n */\ngoog.events.KeyHandler = function(opt_element, opt_capture) {\n  goog.events.EventTarget.call(this);\n\n  if (opt_element) {\n    this.attach(opt_element, opt_capture);\n  }\n};\ngoog.inherits(goog.events.KeyHandler, goog.events.EventTarget);\n\n\n/**\n * This is the element that we will listen to the real keyboard events on.\n * @type {?Element|?Document|null}\n * @private\n */\ngoog.events.KeyHandler.prototype.element_ = null;\n\n\n/**\n * The key for the key press listener.\n * @type {?goog.events.Key}\n * @private\n */\ngoog.events.KeyHandler.prototype.keyPressKey_ = null;\n\n\n/**\n * The key for the key down listener.\n * @type {?goog.events.Key}\n * @private\n */\ngoog.events.KeyHandler.prototype.keyDownKey_ = null;\n\n\n/**\n * The key for the key up listener.\n * @type {?goog.events.Key}\n * @private\n */\ngoog.events.KeyHandler.prototype.keyUpKey_ = null;\n\n\n/**\n * Used to detect keyboard repeat events.\n * @private\n * @type {number}\n */\ngoog.events.KeyHandler.prototype.lastKey_ = -1;\n\n\n/**\n * Keycode recorded for key down events. As most browsers don't report the\n * keycode in the key press event we need to record it in the key down phase.\n * @private\n * @type {number}\n */\ngoog.events.KeyHandler.prototype.keyCode_ = -1;\n\n\n/**\n * Alt key recorded for key down events. FF on Mac does not report the alt key\n * flag in the key press event, we need to record it in the key down phase.\n * @type {boolean}\n * @private\n */\ngoog.events.KeyHandler.prototype.altKey_ = false;\n\n\n/**\n * Enum type for the events fired by the key handler\n * @enum {string}\n */\ngoog.events.KeyHandler.EventType = {\n  KEY: 'key'\n};\n\n\n/**\n * An enumeration of key codes that Safari 2 does incorrectly\n * @type {Object}\n * @private\n */\ngoog.events.KeyHandler.safariKey_ = {\n  '3': goog.events.KeyCodes.ENTER,             // 13\n  '12': goog.events.KeyCodes.NUMLOCK,          // 144\n  '63232': goog.events.KeyCodes.UP,            // 38\n  '63233': goog.events.KeyCodes.DOWN,          // 40\n  '63234': goog.events.KeyCodes.LEFT,          // 37\n  '63235': goog.events.KeyCodes.RIGHT,         // 39\n  '63236': goog.events.KeyCodes.F1,            // 112\n  '63237': goog.events.KeyCodes.F2,            // 113\n  '63238': goog.events.KeyCodes.F3,            // 114\n  '63239': goog.events.KeyCodes.F4,            // 115\n  '63240': goog.events.KeyCodes.F5,            // 116\n  '63241': goog.events.KeyCodes.F6,            // 117\n  '63242': goog.events.KeyCodes.F7,            // 118\n  '63243': goog.events.KeyCodes.F8,            // 119\n  '63244': goog.events.KeyCodes.F9,            // 120\n  '63245': goog.events.KeyCodes.F10,           // 121\n  '63246': goog.events.KeyCodes.F11,           // 122\n  '63247': goog.events.KeyCodes.F12,           // 123\n  '63248': goog.events.KeyCodes.PRINT_SCREEN,  // 44\n  '63272': goog.events.KeyCodes.DELETE,        // 46\n  '63273': goog.events.KeyCodes.HOME,          // 36\n  '63275': goog.events.KeyCodes.END,           // 35\n  '63276': goog.events.KeyCodes.PAGE_UP,       // 33\n  '63277': goog.events.KeyCodes.PAGE_DOWN,     // 34\n  '63289': goog.events.KeyCodes.NUMLOCK,       // 144\n  '63302': goog.events.KeyCodes.INSERT         // 45\n};\n\n\n/**\n * An enumeration of key identifiers currently part of the W3C draft for DOM3\n * and their mappings to keyCodes.\n * http://www.w3.org/TR/DOM-Level-3-Events/keyset.html#KeySet-Set\n * This is currently supported in Safari and should be platform independent.\n * @type {Object}\n * @private\n */\ngoog.events.KeyHandler.keyIdentifier_ = {\n  'Up': goog.events.KeyCodes.UP,               // 38\n  'Down': goog.events.KeyCodes.DOWN,           // 40\n  'Left': goog.events.KeyCodes.LEFT,           // 37\n  'Right': goog.events.KeyCodes.RIGHT,         // 39\n  'Enter': goog.events.KeyCodes.ENTER,         // 13\n  'F1': goog.events.KeyCodes.F1,               // 112\n  'F2': goog.events.KeyCodes.F2,               // 113\n  'F3': goog.events.KeyCodes.F3,               // 114\n  'F4': goog.events.KeyCodes.F4,               // 115\n  'F5': goog.events.KeyCodes.F5,               // 116\n  'F6': goog.events.KeyCodes.F6,               // 117\n  'F7': goog.events.KeyCodes.F7,               // 118\n  'F8': goog.events.KeyCodes.F8,               // 119\n  'F9': goog.events.KeyCodes.F9,               // 120\n  'F10': goog.events.KeyCodes.F10,             // 121\n  'F11': goog.events.KeyCodes.F11,             // 122\n  'F12': goog.events.KeyCodes.F12,             // 123\n  'U+007F': goog.events.KeyCodes.DELETE,       // 46\n  'Home': goog.events.KeyCodes.HOME,           // 36\n  'End': goog.events.KeyCodes.END,             // 35\n  'PageUp': goog.events.KeyCodes.PAGE_UP,      // 33\n  'PageDown': goog.events.KeyCodes.PAGE_DOWN,  // 34\n  'Insert': goog.events.KeyCodes.INSERT        // 45\n};\n\n\n/**\n * If true, the KeyEvent fires on keydown. Otherwise, it fires on keypress.\n *\n * @type {boolean}\n * @private\n */\ngoog.events.KeyHandler.USES_KEYDOWN_ =\n    !goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher('525');\n\n\n/**\n * If true, the alt key flag is saved during the key down and reused when\n * handling the key press. FF on Mac does not set the alt flag in the key press\n * event.\n * @type {boolean}\n * @private\n */\ngoog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_ =\n    goog.userAgent.MAC && goog.userAgent.GECKO;\n\n\n/**\n * Records the keycode for browsers that only returns the keycode for key up/\n * down events. For browser/key combinations that doesn't trigger a key pressed\n * event it also fires the patched key event.\n * @param {goog.events.BrowserEvent} e The key down event.\n * @private\n */\ngoog.events.KeyHandler.prototype.handleKeyDown_ = function(e) {\n  // Ctrl-Tab and Alt-Tab can cause the focus to be moved to another window\n  // before we've caught a key-up event.  If the last-key was one of these we\n  // reset the state.\n  if (goog.userAgent.WEBKIT || goog.userAgent.EDGE) {\n    if (this.lastKey_ == goog.events.KeyCodes.CTRL && !e.ctrlKey ||\n        this.lastKey_ == goog.events.KeyCodes.ALT && !e.altKey ||\n        goog.userAgent.MAC && this.lastKey_ == goog.events.KeyCodes.META &&\n            !e.metaKey) {\n      this.resetState();\n    }\n  }\n\n  if (this.lastKey_ == -1) {\n    if (e.ctrlKey && e.keyCode != goog.events.KeyCodes.CTRL) {\n      this.lastKey_ = goog.events.KeyCodes.CTRL;\n    } else if (e.altKey && e.keyCode != goog.events.KeyCodes.ALT) {\n      this.lastKey_ = goog.events.KeyCodes.ALT;\n    } else if (e.metaKey && e.keyCode != goog.events.KeyCodes.META) {\n      this.lastKey_ = goog.events.KeyCodes.META;\n    }\n  }\n\n  if (goog.events.KeyHandler.USES_KEYDOWN_ &&\n      !goog.events.KeyCodes.firesKeyPressEvent(\n          e.keyCode, this.lastKey_, e.shiftKey, e.ctrlKey, e.altKey,\n          e.metaKey)) {\n    this.handleEvent(e);\n  } else {\n    this.keyCode_ = goog.events.KeyCodes.normalizeKeyCode(e.keyCode);\n    if (goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_) {\n      this.altKey_ = e.altKey;\n    }\n  }\n};\n\n\n/**\n * Resets the stored previous values. Needed to be called for webkit which will\n * not generate a key up for meta key operations. This should only be called\n * when having finished with repeat key possibilities.\n */\ngoog.events.KeyHandler.prototype.resetState = function() {\n  this.lastKey_ = -1;\n  this.keyCode_ = -1;\n};\n\n\n/**\n * Clears the stored previous key value, resetting the key repeat status. Uses\n * -1 because the Safari 3 Windows beta reports 0 for certain keys (like Home\n * and End.)\n * @param {goog.events.BrowserEvent} e The keyup event.\n * @private\n */\ngoog.events.KeyHandler.prototype.handleKeyup_ = function(e) {\n  this.resetState();\n  this.altKey_ = e.altKey;\n};\n\n\n/**\n * Handles the events on the element.\n * @param {goog.events.BrowserEvent} e  The keyboard event sent from the\n *     browser.\n */\ngoog.events.KeyHandler.prototype.handleEvent = function(e) {\n  var be = e.getBrowserEvent();\n  var keyCode, charCode;\n  var altKey = be.altKey;\n\n  // IE reports the character code in the keyCode field for keypress events.\n  // There are two exceptions however, Enter and Escape.\n  if (goog.userAgent.IE && e.type == goog.events.EventType.KEYPRESS) {\n    keyCode = this.keyCode_;\n    charCode = keyCode != goog.events.KeyCodes.ENTER &&\n            keyCode != goog.events.KeyCodes.ESC ?\n        be.keyCode :\n        0;\n\n    // Safari reports the character code in the keyCode field for keypress\n    // events but also has a charCode field.\n  } else if (\n      (goog.userAgent.WEBKIT || goog.userAgent.EDGE) &&\n      e.type == goog.events.EventType.KEYPRESS) {\n    keyCode = this.keyCode_;\n    charCode = be.charCode >= 0 && be.charCode < 63232 &&\n            goog.events.KeyCodes.isCharacterKey(keyCode) ?\n        be.charCode :\n        0;\n\n    // Opera reports the keycode or the character code in the keyCode field.\n  } else if (goog.userAgent.OPERA && !goog.userAgent.WEBKIT) {\n    keyCode = this.keyCode_;\n    charCode = goog.events.KeyCodes.isCharacterKey(keyCode) ? be.keyCode : 0;\n\n    // Mozilla reports the character code in the charCode field.\n  } else {\n    if (e.type == goog.events.EventType.KEYPRESS) {\n      if (goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_) {\n        altKey = this.altKey_;\n      }\n\n      // Newer versions of Firefox will set the keyCode of non-function keys to\n      // be the same as charCode. We need to account for this and update the\n      // key event values accordingly. See\n      // https://github.com/google/closure-library/issues/932 for more details.\n      if (be.keyCode == be.charCode) {\n        // Adjust any function key (ie. non-printable, such as ESC or\n        // backspace) to not have a charCode. We don't want these keys to\n        // accidentally be interpreted as insertable characters.\n        if (be.keyCode < 0x20) {\n          keyCode = be.keyCode;\n          charCode = 0;\n        } else {\n          // For character keys, we want to use the preserved key code rather\n          // than the keyCode on the browser event, which now uses the charCode.\n          // These differ (eg. pressing 'a' gives keydown with keyCode = 65,\n          // keypress with keyCode = charCode = 97) and so we need to account\n          // for this.\n          keyCode = this.keyCode_;\n          charCode = be.charCode;\n        }\n      } else {\n        keyCode = be.keyCode || this.keyCode_;\n        charCode = be.charCode || 0;\n      }\n    } else {\n      keyCode = be.keyCode || this.keyCode_;\n      charCode = be.charCode || 0;\n    }\n\n    // On the Mac, shift-/ triggers a question mark char code and no key code\n    // (WIN_KEY_FF_LINUX), so we synthesize the latter.\n    if (goog.userAgent.MAC && charCode == goog.events.KeyCodes.QUESTION_MARK &&\n        keyCode == goog.events.KeyCodes.WIN_KEY) {\n      keyCode = goog.events.KeyCodes.SLASH;\n    }\n  }\n\n  keyCode = goog.events.KeyCodes.normalizeKeyCode(keyCode);\n  var key = keyCode;\n\n  // Correct the key value for certain browser-specific quirks.\n  if (keyCode) {\n    if (keyCode >= 63232 && keyCode in goog.events.KeyHandler.safariKey_) {\n      // NOTE(nicksantos): Safari 3 has fixed this problem,\n      // this is only needed for Safari 2.\n      key = goog.events.KeyHandler.safariKey_[keyCode];\n    } else {\n      // Safari returns 25 for Shift+Tab instead of 9.\n      if (keyCode == 25 && e.shiftKey) {\n        key = 9;\n      }\n    }\n  } else if (\n      be.keyIdentifier &&\n      be.keyIdentifier in goog.events.KeyHandler.keyIdentifier_) {\n    // This is needed for Safari Windows because it currently doesn't give a\n    // keyCode/which for non printable keys.\n    key = goog.events.KeyHandler.keyIdentifier_[be.keyIdentifier];\n  }\n\n  // If this was a redundant keypress event, we ignore it to avoid double-firing\n  // an event as the event would've been handled by KEYDOWN. Gecko is currently\n  // in the process of removing keypress events for non-printable characters\n  // (https://bugzilla.mozilla.org/show_bug.cgi?id=968056) so we simulate this\n  // logic here for older Gecko versions which still fire the events.\n  if (goog.userAgent.GECKO && goog.events.KeyHandler.USES_KEYDOWN_ &&\n      e.type == goog.events.EventType.KEYPRESS &&\n      !goog.events.KeyCodes.firesKeyPressEvent(\n          key, this.lastKey_, e.shiftKey, e.ctrlKey, altKey, e.metaKey)) {\n    return;\n  }\n\n  // If we get the same keycode as a keydown/keypress without having seen a\n  // keyup event, then this event was caused by key repeat.\n  var repeat = key == this.lastKey_;\n  this.lastKey_ = key;\n\n  var event = new goog.events.KeyEvent(key, charCode, repeat, be);\n  event.altKey = altKey;\n  this.dispatchEvent(event);\n};\n\n\n/**\n * Returns the element listened on for the real keyboard events.\n * @return {Element|Document|null} The element listened on for the real\n *     keyboard events.\n */\ngoog.events.KeyHandler.prototype.getElement = function() {\n  return this.element_;\n};\n\n\n/**\n * Adds the proper key event listeners to the element.\n * @param {Element|Document} element The element to listen on.\n * @param {boolean=} opt_capture Whether to listen for browser events in\n *     capture phase (defaults to false).\n */\ngoog.events.KeyHandler.prototype.attach = function(element, opt_capture) {\n  if (this.keyUpKey_) {\n    this.detach();\n  }\n\n  this.element_ = element;\n\n  this.keyPressKey_ = goog.events.listen(\n      this.element_, goog.events.EventType.KEYPRESS, this, opt_capture);\n\n  // Most browsers (Safari 2 being the notable exception) doesn't include the\n  // keyCode in keypress events (IE has the char code in the keyCode field and\n  // Mozilla only included the keyCode if there's no charCode). Thus we have to\n  // listen for keydown to capture the keycode.\n  this.keyDownKey_ = goog.events.listen(\n      this.element_, goog.events.EventType.KEYDOWN, this.handleKeyDown_,\n      opt_capture, this);\n\n\n  this.keyUpKey_ = goog.events.listen(\n      this.element_, goog.events.EventType.KEYUP, this.handleKeyup_,\n      opt_capture, this);\n};\n\n\n/**\n * Removes the listeners that may exist.\n */\ngoog.events.KeyHandler.prototype.detach = function() {\n  if (this.keyPressKey_) {\n    goog.events.unlistenByKey(this.keyPressKey_);\n    goog.events.unlistenByKey(this.keyDownKey_);\n    goog.events.unlistenByKey(this.keyUpKey_);\n    this.keyPressKey_ = null;\n    this.keyDownKey_ = null;\n    this.keyUpKey_ = null;\n  }\n  this.element_ = null;\n  this.lastKey_ = -1;\n  this.keyCode_ = -1;\n};\n\n\n/** @override */\ngoog.events.KeyHandler.prototype.disposeInternal = function() {\n  goog.events.KeyHandler.superClass_.disposeInternal.call(this);\n  this.detach();\n};\n\n\n\n/**\n * This class is used for the goog.events.KeyHandler.EventType.KEY event and\n * it overrides the key code with the fixed key code.\n * @param {number} keyCode The adjusted key code.\n * @param {number} charCode The unicode character code.\n * @param {boolean} repeat Whether this event was generated by keyboard repeat.\n * @param {Event} browserEvent Browser event object.\n * @constructor\n * @extends {goog.events.BrowserEvent}\n * @final\n */\ngoog.events.KeyEvent = function(keyCode, charCode, repeat, browserEvent) {\n  goog.events.BrowserEvent.call(this, browserEvent);\n  this.type = goog.events.KeyHandler.EventType.KEY;\n\n  /**\n   * Keycode of key press.\n   * @type {number}\n   */\n  this.keyCode = keyCode;\n\n  /**\n   * Unicode character code.\n   * @type {number}\n   */\n  this.charCode = charCode;\n\n  /**\n   * True if this event was generated by keyboard auto-repeat (i.e., the user is\n   * holding the key down.)\n   * @type {boolean}\n   */\n  this.repeat = repeat;\n};\ngoog.inherits(goog.events.KeyEvent, goog.events.BrowserEvent);\n"],
"names":["goog","provide","require","events","KeyHandler","goog.events.KeyHandler","opt_element","opt_capture","EventTarget","call","attach","inherits","prototype","element_","keyPressKey_","keyDownKey_","keyUpKey_","lastKey_","keyCode_","altKey_","EventType","KEY","safariKey_","KeyCodes","ENTER","NUMLOCK","UP","DOWN","LEFT","RIGHT","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PRINT_SCREEN","DELETE","HOME","END","PAGE_UP","PAGE_DOWN","INSERT","keyIdentifier_","USES_KEYDOWN_","userAgent","WEBKIT","isVersionOrHigher","SAVE_ALT_FOR_KEYPRESS_","MAC","GECKO","handleKeyDown_","goog.events.KeyHandler.prototype.handleKeyDown_","e","EDGE","CTRL","ctrlKey","ALT","altKey","META","metaKey","resetState","keyCode","firesKeyPressEvent","shiftKey","handleEvent","normalizeKeyCode","goog.events.KeyHandler.prototype.resetState","handleKeyup_","goog.events.KeyHandler.prototype.handleKeyup_","goog.events.KeyHandler.prototype.handleEvent","be","getBrowserEvent","charCode","IE","type","KEYPRESS","ESC","isCharacterKey","OPERA","QUESTION_MARK","WIN_KEY","SLASH","key","keyIdentifier","repeat","event","KeyEvent","dispatchEvent","getElement","goog.events.KeyHandler.prototype.getElement","goog.events.KeyHandler.prototype.attach","element","detach","listen","KEYDOWN","KEYUP","goog.events.KeyHandler.prototype.detach","unlistenByKey","disposeInternal","goog.events.KeyHandler.prototype.disposeInternal","superClass_","goog.events.KeyEvent","browserEvent","BrowserEvent"]
}
