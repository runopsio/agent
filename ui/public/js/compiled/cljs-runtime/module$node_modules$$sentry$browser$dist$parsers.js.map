{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$parsers.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/parsers.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$parsers\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@sentry/utils\");\nvar tracekit_1 = require(\"./tracekit\");\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nfunction exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\nexports.exceptionFromStacktrace = exceptionFromStacktrace;\n/**\n * @hidden\n */\nfunction eventFromPlainObject(exception, syntheticException, rejection) {\n    var event = {\n        exception: {\n            values: [\n                {\n                    type: utils_1.isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n                    value: \"Non-Error \" + (rejection ? 'promise rejection' : 'exception') + \" captured with keys: \" + utils_1.extractExceptionKeysForMessage(exception),\n                },\n            ],\n        },\n        extra: {\n            __serialized__: utils_1.normalizeToSize(exception),\n        },\n    };\n    if (syntheticException) {\n        var stacktrace = tracekit_1.computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\nexports.eventFromPlainObject = eventFromPlainObject;\n/**\n * @hidden\n */\nfunction eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\nexports.eventFromStacktrace = eventFromStacktrace;\n/**\n * @hidden\n */\nfunction prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .slice(0, STACKTRACE_LIMIT)\n        .map(function (frame) { return ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n    }); })\n        .reverse();\n}\nexports.prepareFramesForEvent = prepareFramesForEvent;\n//# sourceMappingURL=parsers.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","exceptionFromStacktrace","stacktrace","frames","prepareFramesForEvent","stack","exception","type","name","value","message","length","undefined","localStack","firstFrameFunction","func","lastFrameFunction","indexOf","slice","STACKTRACE_LIMIT","map","frame","colno","column","filename","url","function","in_app","lineno","line","reverse","Object","defineProperty","utils_1","tracekit_1","eventFromPlainObject","syntheticException","rejection","event","values","isEvent","constructor","extractExceptionKeysForMessage","extra","__serialized__","normalizeToSize","computeStackTrace","frames_1","eventFromStacktrace"]
}
