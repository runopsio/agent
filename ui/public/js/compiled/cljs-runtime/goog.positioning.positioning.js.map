{
"version":3,
"file":"goog.positioning.positioning.js",
"lineCount":200,
"mappings":"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",
"sources":["goog/positioning/positioning.js"],
"sourcesContent":["// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Common positioning code.\n *\n * @author eae@google.com (Emil A Eklund)\n */\n\ngoog.provide('goog.positioning');\ngoog.provide('goog.positioning.Corner');\ngoog.provide('goog.positioning.CornerBit');\ngoog.provide('goog.positioning.Overflow');\ngoog.provide('goog.positioning.OverflowStatus');\n\ngoog.require('goog.asserts');\ngoog.require('goog.dom');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.math.Coordinate');\ngoog.require('goog.math.Rect');\ngoog.require('goog.math.Size');\ngoog.require('goog.style');\ngoog.require('goog.style.bidi');\n\n\n/**\n * Enum for bits in the {@see goog.positioning.Corner) bitmap.\n *\n * @enum {number}\n */\ngoog.positioning.CornerBit = {\n  BOTTOM: 1,\n  CENTER: 2,\n  RIGHT: 4,\n  FLIP_RTL: 8\n};\n\n\n/**\n * Enum for representing an element corner for positioning the popup.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n *\n * @enum {number}\n */\ngoog.positioning.Corner = {\n  TOP_LEFT: 0,\n  TOP_RIGHT: goog.positioning.CornerBit.RIGHT,\n  BOTTOM_LEFT: goog.positioning.CornerBit.BOTTOM,\n  BOTTOM_RIGHT:\n      goog.positioning.CornerBit.BOTTOM | goog.positioning.CornerBit.RIGHT,\n  TOP_START: goog.positioning.CornerBit.FLIP_RTL,\n  TOP_END:\n      goog.positioning.CornerBit.FLIP_RTL | goog.positioning.CornerBit.RIGHT,\n  BOTTOM_START:\n      goog.positioning.CornerBit.BOTTOM | goog.positioning.CornerBit.FLIP_RTL,\n  BOTTOM_END: goog.positioning.CornerBit.BOTTOM |\n      goog.positioning.CornerBit.RIGHT | goog.positioning.CornerBit.FLIP_RTL,\n  TOP_CENTER: goog.positioning.CornerBit.CENTER,\n  BOTTOM_CENTER:\n      goog.positioning.CornerBit.BOTTOM | goog.positioning.CornerBit.CENTER\n};\n\n\n/**\n * Enum for representing position handling in cases where the element would be\n * positioned outside the viewport.\n *\n * @enum {number}\n */\ngoog.positioning.Overflow = {\n  /** Ignore overflow */\n  IGNORE: 0,\n\n  /** Try to fit horizontally in the viewport at all costs. */\n  ADJUST_X: 1,\n\n  /** If the element can't fit horizontally, report positioning failure. */\n  FAIL_X: 2,\n\n  /** Try to fit vertically in the viewport at all costs. */\n  ADJUST_Y: 4,\n\n  /** If the element can't fit vertically, report positioning failure. */\n  FAIL_Y: 8,\n\n  /** Resize the element's width to fit in the viewport. */\n  RESIZE_WIDTH: 16,\n\n  /** Resize the element's height to fit in the viewport. */\n  RESIZE_HEIGHT: 32,\n\n  /**\n   * If the anchor goes off-screen in the x-direction, position the movable\n   * element off-screen. Otherwise, try to fit horizontally in the viewport.\n   */\n  ADJUST_X_EXCEPT_OFFSCREEN: 64 | 1,\n\n  /**\n   * If the anchor goes off-screen in the y-direction, position the movable\n   * element off-screen. Otherwise, try to fit vertically in the viewport.\n   */\n  ADJUST_Y_EXCEPT_OFFSCREEN: 128 | 4\n};\n\n\n/**\n * Enum for representing the outcome of a positioning call.\n *\n * @enum {number}\n */\ngoog.positioning.OverflowStatus = {\n  NONE: 0,\n  ADJUSTED_X: 1,\n  ADJUSTED_Y: 2,\n  WIDTH_ADJUSTED: 4,\n  HEIGHT_ADJUSTED: 8,\n  FAILED_LEFT: 16,\n  FAILED_RIGHT: 32,\n  FAILED_TOP: 64,\n  FAILED_BOTTOM: 128,\n  FAILED_OUTSIDE_VIEWPORT: 256\n};\n\n\n/**\n * Shorthand to check if a status code contains any fail code.\n * @type {number}\n */\ngoog.positioning.OverflowStatus.FAILED =\n    goog.positioning.OverflowStatus.FAILED_LEFT |\n    goog.positioning.OverflowStatus.FAILED_RIGHT |\n    goog.positioning.OverflowStatus.FAILED_TOP |\n    goog.positioning.OverflowStatus.FAILED_BOTTOM |\n    goog.positioning.OverflowStatus.FAILED_OUTSIDE_VIEWPORT;\n\n\n/**\n * Shorthand to check if horizontal positioning failed.\n * @type {number}\n */\ngoog.positioning.OverflowStatus.FAILED_HORIZONTAL =\n    goog.positioning.OverflowStatus.FAILED_LEFT |\n    goog.positioning.OverflowStatus.FAILED_RIGHT;\n\n\n/**\n * Shorthand to check if vertical positioning failed.\n * @type {number}\n */\ngoog.positioning.OverflowStatus.FAILED_VERTICAL =\n    goog.positioning.OverflowStatus.FAILED_TOP |\n    goog.positioning.OverflowStatus.FAILED_BOTTOM;\n\n\n/**\n * Positions a movable element relative to an anchor element. The caller\n * specifies the corners that should touch. This functions then moves the\n * movable element accordingly.\n *\n * @param {Element} anchorElement The element that is the anchor for where\n *    the movable element should position itself.\n * @param {goog.positioning.Corner} anchorElementCorner The corner of the\n *     anchorElement for positioning the movable element.\n * @param {Element} movableElement The element to move.\n * @param {goog.positioning.Corner} movableElementCorner The corner of the\n *     movableElement that that should be positioned adjacent to the anchor\n *     element.\n * @param {goog.math.Coordinate=} opt_offset An offset specified in pixels.\n *    After the normal positioning algorithm is applied, the offset is then\n *    applied. Positive coordinates move the popup closer to the center of the\n *    anchor element. Negative coordinates move the popup away from the center\n *    of the anchor element.\n * @param {goog.math.Box=} opt_margin A margin specified in pixels.\n *    After the normal positioning algorithm is applied and any offset, the\n *    margin is then applied. Positive coordinates move the popup away from the\n *    spot it was positioned towards its center. Negative coordinates move it\n *    towards the spot it was positioned away from its center.\n * @param {?number=} opt_overflow Overflow handling mode. Defaults to IGNORE if\n *     not specified. Bitmap, {@see goog.positioning.Overflow}.\n * @param {goog.math.Size=} opt_preferredSize The preferred size of the\n *     movableElement.\n * @param {goog.math.Box=} opt_viewport Box object describing the dimensions of\n *     the viewport. The viewport is specified relative to offsetParent of\n *     `movableElement`. In other words, the viewport can be thought of as\n *     describing a \"position: absolute\" element contained in the offsetParent.\n *     It defaults to visible area of nearest scrollable ancestor of\n *     `movableElement` (see `goog.style.getVisibleRectForElement`).\n * @return {goog.positioning.OverflowStatus} Status bitmap,\n *     {@see goog.positioning.OverflowStatus}.\n */\ngoog.positioning.positionAtAnchor = function(\n    anchorElement, anchorElementCorner, movableElement, movableElementCorner,\n    opt_offset, opt_margin, opt_overflow, opt_preferredSize, opt_viewport) {\n\n  goog.asserts.assert(movableElement);\n  var movableParentTopLeft =\n      goog.positioning.getOffsetParentPageOffset(movableElement);\n\n  // Get the visible part of the anchor element.  anchorRect is\n  // relative to anchorElement's page.\n  var anchorRect = goog.positioning.getVisiblePart_(anchorElement);\n\n  // Translate anchorRect to be relative to movableElement's page.\n  goog.style.translateRectForAnotherFrame(\n      anchorRect, goog.dom.getDomHelper(anchorElement),\n      goog.dom.getDomHelper(movableElement));\n\n  // Offset based on which corner of the element we want to position against.\n  var corner =\n      goog.positioning.getEffectiveCorner(anchorElement, anchorElementCorner);\n  var offsetLeft = anchorRect.left;\n  if (corner & goog.positioning.CornerBit.RIGHT) {\n    offsetLeft += anchorRect.width;\n  } else if (corner & goog.positioning.CornerBit.CENTER) {\n    offsetLeft += anchorRect.width / 2;\n  }\n\n  // absolutePos is a candidate position relative to the\n  // movableElement's window.\n  var absolutePos = new goog.math.Coordinate(\n      offsetLeft, anchorRect.top +\n          (corner & goog.positioning.CornerBit.BOTTOM ? anchorRect.height : 0));\n\n  // Translate absolutePos to be relative to the offsetParent.\n  absolutePos =\n      goog.math.Coordinate.difference(absolutePos, movableParentTopLeft);\n\n  // Apply offset, if specified\n  if (opt_offset) {\n    absolutePos.x +=\n        (corner & goog.positioning.CornerBit.RIGHT ? -1 : 1) * opt_offset.x;\n    absolutePos.y +=\n        (corner & goog.positioning.CornerBit.BOTTOM ? -1 : 1) * opt_offset.y;\n  }\n\n  // Determine dimension of viewport.\n  var viewport;\n  if (opt_overflow) {\n    if (opt_viewport) {\n      viewport = opt_viewport;\n    } else {\n      viewport = goog.style.getVisibleRectForElement(movableElement);\n      if (viewport) {\n        viewport.top -= movableParentTopLeft.y;\n        viewport.right -= movableParentTopLeft.x;\n        viewport.bottom -= movableParentTopLeft.y;\n        viewport.left -= movableParentTopLeft.x;\n      }\n    }\n  }\n\n  return goog.positioning.positionAtCoordinate(\n      absolutePos, movableElement, movableElementCorner, opt_margin, viewport,\n      opt_overflow, opt_preferredSize);\n};\n\n\n/**\n * Calculates the page offset of the given element's\n * offsetParent. This value can be used to translate any x- and\n * y-offset relative to the page to an offset relative to the\n * offsetParent, which can then be used directly with as position\n * coordinate for `positionWithCoordinate`.\n * @param {!Element} movableElement The element to calculate.\n * @return {!goog.math.Coordinate} The page offset, may be (0, 0).\n */\ngoog.positioning.getOffsetParentPageOffset = function(movableElement) {\n  // Ignore offset for the BODY element unless its position is non-static.\n  // For cases where the offset parent is HTML rather than the BODY (such as in\n  // IE strict mode) there's no need to get the position of the BODY as it\n  // doesn't affect the page offset.\n  var movableParentTopLeft;\n  var parent = /** @type {?} */ (movableElement).offsetParent;\n  if (parent) {\n    var isBody = parent.tagName == goog.dom.TagName.HTML ||\n        parent.tagName == goog.dom.TagName.BODY;\n    if (!isBody || goog.style.getComputedPosition(parent) != 'static') {\n      // Get the top-left corner of the parent, in page coordinates.\n      movableParentTopLeft = goog.style.getPageOffset(parent);\n\n      if (!isBody) {\n        movableParentTopLeft = goog.math.Coordinate.difference(\n            movableParentTopLeft,\n            new goog.math.Coordinate(\n                goog.style.bidi.getScrollLeft(parent), parent.scrollTop));\n      }\n    }\n  }\n\n  return movableParentTopLeft || new goog.math.Coordinate();\n};\n\n\n/**\n * Returns intersection of the specified element and\n * goog.style.getVisibleRectForElement for it.\n *\n * @param {Element} el The target element.\n * @return {!goog.math.Rect} Intersection of getVisibleRectForElement\n *     and the current bounding rectangle of the element.  If the\n *     intersection is empty, returns the bounding rectangle.\n * @private\n */\ngoog.positioning.getVisiblePart_ = function(el) {\n  var rect = goog.style.getBounds(el);\n  var visibleBox = goog.style.getVisibleRectForElement(el);\n  if (visibleBox) {\n    rect.intersection(goog.math.Rect.createFromBox(visibleBox));\n  }\n  return rect;\n};\n\n\n/**\n * Positions the specified corner of the movable element at the\n * specified coordinate.\n *\n * @param {goog.math.Coordinate} absolutePos The coordinate to position the\n *     element at.\n * @param {Element} movableElement The element to be positioned.\n * @param {goog.positioning.Corner} movableElementCorner The corner of the\n *     movableElement that that should be positioned.\n * @param {goog.math.Box=} opt_margin A margin specified in pixels.\n *    After the normal positioning algorithm is applied and any offset, the\n *    margin is then applied. Positive coordinates move the popup away from the\n *    spot it was positioned towards its center. Negative coordinates move it\n *    towards the spot it was positioned away from its center.\n * @param {goog.math.Box=} opt_viewport Box object describing the dimensions of\n *     the viewport. Required if opt_overflow is specified.\n * @param {?number=} opt_overflow Overflow handling mode. Defaults to IGNORE if\n *     not specified, {@see goog.positioning.Overflow}.\n * @param {goog.math.Size=} opt_preferredSize The preferred size of the\n *     movableElement. Defaults to the current size.\n * @return {goog.positioning.OverflowStatus} Status bitmap.\n */\ngoog.positioning.positionAtCoordinate = function(\n    absolutePos, movableElement, movableElementCorner, opt_margin, opt_viewport,\n    opt_overflow, opt_preferredSize) {\n  absolutePos = absolutePos.clone();\n\n  // Offset based on attached corner and desired margin.\n  var corner =\n      goog.positioning.getEffectiveCorner(movableElement, movableElementCorner);\n  var elementSize = goog.style.getSize(movableElement);\n  var size =\n      opt_preferredSize ? opt_preferredSize.clone() : elementSize.clone();\n\n  var positionResult = goog.positioning.getPositionAtCoordinate(\n      absolutePos, size, corner, opt_margin, opt_viewport, opt_overflow);\n\n  if (positionResult.status & goog.positioning.OverflowStatus.FAILED) {\n    return positionResult.status;\n  }\n\n  goog.style.setPosition(movableElement, positionResult.rect.getTopLeft());\n  size = positionResult.rect.getSize();\n  if (!goog.math.Size.equals(elementSize, size)) {\n    goog.style.setBorderBoxSize(movableElement, size);\n  }\n\n  return positionResult.status;\n};\n\n\n/**\n * Computes the position for an element to be placed on-screen at the\n * specified coordinates. Returns an object containing both the resulting\n * rectangle, and the overflow status bitmap.\n *\n * @param {!goog.math.Coordinate} absolutePos The coordinate to position the\n *     element at.\n * @param {!goog.math.Size} elementSize The size of the element to be\n *     positioned.\n * @param {goog.positioning.Corner} elementCorner The corner of the\n *     movableElement that that should be positioned.\n * @param {goog.math.Box=} opt_margin A margin specified in pixels.\n *    After the normal positioning algorithm is applied and any offset, the\n *    margin is then applied. Positive coordinates move the popup away from the\n *    spot it was positioned towards its center. Negative coordinates move it\n *    towards the spot it was positioned away from its center.\n * @param {goog.math.Box=} opt_viewport Box object describing the dimensions of\n *     the viewport. Required if opt_overflow is specified.\n * @param {?number=} opt_overflow Overflow handling mode. Defaults to IGNORE\n *     if not specified, {@see goog.positioning.Overflow}.\n * @return {{rect:!goog.math.Rect, status:goog.positioning.OverflowStatus}}\n *     Object containing the computed position and status bitmap.\n */\ngoog.positioning.getPositionAtCoordinate = function(\n    absolutePos, elementSize, elementCorner, opt_margin, opt_viewport,\n    opt_overflow) {\n  absolutePos = absolutePos.clone();\n  elementSize = elementSize.clone();\n  var status = goog.positioning.OverflowStatus.NONE;\n\n  if (opt_margin || elementCorner != goog.positioning.Corner.TOP_LEFT) {\n    if (elementCorner & goog.positioning.CornerBit.RIGHT) {\n      absolutePos.x -= elementSize.width + (opt_margin ? opt_margin.right : 0);\n    } else if (elementCorner & goog.positioning.CornerBit.CENTER) {\n      absolutePos.x -= elementSize.width / 2;\n    } else if (opt_margin) {\n      absolutePos.x += opt_margin.left;\n    }\n    if (elementCorner & goog.positioning.CornerBit.BOTTOM) {\n      absolutePos.y -=\n          elementSize.height + (opt_margin ? opt_margin.bottom : 0);\n    } else if (opt_margin) {\n      absolutePos.y += opt_margin.top;\n    }\n  }\n\n  // Adjust position to fit inside viewport.\n  if (opt_overflow) {\n    status = opt_viewport ?\n        goog.positioning.adjustForViewport_(\n            absolutePos, elementSize, opt_viewport, opt_overflow) :\n        goog.positioning.OverflowStatus.FAILED_OUTSIDE_VIEWPORT;\n  }\n\n  var rect = new goog.math.Rect(0, 0, 0, 0);\n  rect.left = absolutePos.x;\n  rect.top = absolutePos.y;\n  rect.width = elementSize.width;\n  rect.height = elementSize.height;\n  return {rect: rect, status: status};\n};\n\n\n/**\n * Adjusts the position and/or size of an element, identified by its position\n * and size, to fit inside the viewport. If the position or size of the element\n * is adjusted the pos or size objects, respectively, are modified.\n *\n * @param {goog.math.Coordinate} pos Position of element, updated if the\n *     position is adjusted.\n * @param {goog.math.Size} size Size of element, updated if the size is\n *     adjusted.\n * @param {goog.math.Box} viewport Bounding box describing the viewport.\n * @param {number} overflow Overflow handling mode,\n *     {@see goog.positioning.Overflow}.\n * @return {goog.positioning.OverflowStatus} Status bitmap,\n *     {@see goog.positioning.OverflowStatus}.\n * @private\n */\ngoog.positioning.adjustForViewport_ = function(pos, size, viewport, overflow) {\n  var status = goog.positioning.OverflowStatus.NONE;\n\n  var ADJUST_X_EXCEPT_OFFSCREEN =\n      goog.positioning.Overflow.ADJUST_X_EXCEPT_OFFSCREEN;\n  var ADJUST_Y_EXCEPT_OFFSCREEN =\n      goog.positioning.Overflow.ADJUST_Y_EXCEPT_OFFSCREEN;\n  if ((overflow & ADJUST_X_EXCEPT_OFFSCREEN) == ADJUST_X_EXCEPT_OFFSCREEN &&\n      (pos.x < viewport.left || pos.x >= viewport.right)) {\n    overflow &= ~goog.positioning.Overflow.ADJUST_X;\n  }\n  if ((overflow & ADJUST_Y_EXCEPT_OFFSCREEN) == ADJUST_Y_EXCEPT_OFFSCREEN &&\n      (pos.y < viewport.top || pos.y >= viewport.bottom)) {\n    overflow &= ~goog.positioning.Overflow.ADJUST_Y;\n  }\n\n  // Left edge outside viewport, try to move it.\n  if (pos.x < viewport.left && overflow & goog.positioning.Overflow.ADJUST_X) {\n    pos.x = viewport.left;\n    status |= goog.positioning.OverflowStatus.ADJUSTED_X;\n  }\n\n  // Ensure object is inside the viewport width if required.\n  if (overflow & goog.positioning.Overflow.RESIZE_WIDTH) {\n    // Move left edge inside viewport.\n    var originalX = pos.x;\n    if (pos.x < viewport.left) {\n      pos.x = viewport.left;\n      status |= goog.positioning.OverflowStatus.WIDTH_ADJUSTED;\n    }\n\n    // Shrink width to inside right of viewport.\n    if (pos.x + size.width > viewport.right) {\n      // Set the width to be either the new maximum width within the viewport\n      // or the width originally within the viewport, whichever is less.\n      size.width = Math.min(\n          viewport.right - pos.x, originalX + size.width - viewport.left);\n      size.width = Math.max(size.width, 0);\n      status |= goog.positioning.OverflowStatus.WIDTH_ADJUSTED;\n    }\n  }\n\n  // Right edge outside viewport, try to move it.\n  if (pos.x + size.width > viewport.right &&\n      overflow & goog.positioning.Overflow.ADJUST_X) {\n    pos.x = Math.max(viewport.right - size.width, viewport.left);\n    status |= goog.positioning.OverflowStatus.ADJUSTED_X;\n  }\n\n  // Left or right edge still outside viewport, fail if the FAIL_X option was\n  // specified, ignore it otherwise.\n  if (overflow & goog.positioning.Overflow.FAIL_X) {\n    status |=\n        (pos.x < viewport.left ? goog.positioning.OverflowStatus.FAILED_LEFT :\n                                 0) |\n        (pos.x + size.width > viewport.right ?\n             goog.positioning.OverflowStatus.FAILED_RIGHT :\n             0);\n  }\n\n  // Top edge outside viewport, try to move it.\n  if (pos.y < viewport.top && overflow & goog.positioning.Overflow.ADJUST_Y) {\n    pos.y = viewport.top;\n    status |= goog.positioning.OverflowStatus.ADJUSTED_Y;\n  }\n\n  // Ensure object is inside the viewport height if required.\n  if (overflow & goog.positioning.Overflow.RESIZE_HEIGHT) {\n    // Move top edge inside viewport.\n    var originalY = pos.y;\n    if (pos.y < viewport.top) {\n      pos.y = viewport.top;\n      status |= goog.positioning.OverflowStatus.HEIGHT_ADJUSTED;\n    }\n\n    // Shrink height to inside bottom of viewport.\n    if (pos.y + size.height > viewport.bottom) {\n      // Set the height to be either the new maximum height within the viewport\n      // or the height originally within the viewport, whichever is less.\n      size.height = Math.min(\n          viewport.bottom - pos.y, originalY + size.height - viewport.top);\n      size.height = Math.max(size.height, 0);\n      status |= goog.positioning.OverflowStatus.HEIGHT_ADJUSTED;\n    }\n  }\n\n  // Bottom edge outside viewport, try to move it.\n  if (pos.y + size.height > viewport.bottom &&\n      overflow & goog.positioning.Overflow.ADJUST_Y) {\n    pos.y = Math.max(viewport.bottom - size.height, viewport.top);\n    status |= goog.positioning.OverflowStatus.ADJUSTED_Y;\n  }\n\n  // Top or bottom edge still outside viewport, fail if the FAIL_Y option was\n  // specified, ignore it otherwise.\n  if (overflow & goog.positioning.Overflow.FAIL_Y) {\n    status |=\n        (pos.y < viewport.top ? goog.positioning.OverflowStatus.FAILED_TOP :\n                                0) |\n        (pos.y + size.height > viewport.bottom ?\n             goog.positioning.OverflowStatus.FAILED_BOTTOM :\n             0);\n  }\n\n  return /** @type {!goog.positioning.OverflowStatus} */ (status);\n};\n\n\n/**\n * Returns an absolute corner (top/bottom left/right) given an absolute\n * or relative (top/bottom start/end) corner and the direction of an element.\n * Absolute corners remain unchanged.\n * @param {Element} element DOM element to test for RTL direction.\n * @param {goog.positioning.Corner} corner The popup corner used for\n *     positioning.\n * @return {goog.positioning.Corner} Effective corner.\n */\ngoog.positioning.getEffectiveCorner = function(element, corner) {\n  return /** @type {goog.positioning.Corner} */ (\n      (corner & goog.positioning.CornerBit.FLIP_RTL &&\n               goog.style.isRightToLeft(element) ?\n           corner ^ goog.positioning.CornerBit.RIGHT :\n           corner) &\n      ~goog.positioning.CornerBit.FLIP_RTL);\n};\n\n\n/**\n * Returns the corner opposite the given one horizontally.\n * @param {goog.positioning.Corner} corner The popup corner used to flip.\n * @return {goog.positioning.Corner} The opposite corner horizontally.\n */\ngoog.positioning.flipCornerHorizontal = function(corner) {\n  return /** @type {goog.positioning.Corner} */ (\n      corner ^ goog.positioning.CornerBit.RIGHT);\n};\n\n\n/**\n * Returns the corner opposite the given one vertically.\n * @param {goog.positioning.Corner} corner The popup corner used to flip.\n * @return {goog.positioning.Corner} The opposite corner vertically.\n */\ngoog.positioning.flipCornerVertical = function(corner) {\n  return /** @type {goog.positioning.Corner} */ (\n      corner ^ goog.positioning.CornerBit.BOTTOM);\n};\n\n\n/**\n * Returns the corner opposite the given one horizontally and vertically.\n * @param {goog.positioning.Corner} corner The popup corner used to flip.\n * @return {goog.positioning.Corner} The opposite corner horizontally and\n *     vertically.\n */\ngoog.positioning.flipCorner = function(corner) {\n  return /** @type {goog.positioning.Corner} */ (\n      corner ^ goog.positioning.CornerBit.BOTTOM ^\n      goog.positioning.CornerBit.RIGHT);\n};\n"],
"names":["goog","provide","require","positioning","CornerBit","BOTTOM","CENTER","RIGHT","FLIP_RTL","Corner","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_START","TOP_END","BOTTOM_START","BOTTOM_END","TOP_CENTER","BOTTOM_CENTER","Overflow","IGNORE","ADJUST_X","FAIL_X","ADJUST_Y","FAIL_Y","RESIZE_WIDTH","RESIZE_HEIGHT","ADJUST_X_EXCEPT_OFFSCREEN","ADJUST_Y_EXCEPT_OFFSCREEN","OverflowStatus","NONE","ADJUSTED_X","ADJUSTED_Y","WIDTH_ADJUSTED","HEIGHT_ADJUSTED","FAILED_LEFT","FAILED_RIGHT","FAILED_TOP","FAILED_BOTTOM","FAILED_OUTSIDE_VIEWPORT","FAILED","FAILED_HORIZONTAL","FAILED_VERTICAL","positionAtAnchor","goog.positioning.positionAtAnchor","anchorElement","anchorElementCorner","movableElement","movableElementCorner","opt_offset","opt_margin","opt_overflow","opt_preferredSize","opt_viewport","asserts","assert","movableParentTopLeft","getOffsetParentPageOffset","anchorRect","getVisiblePart_","style","translateRectForAnotherFrame","dom","getDomHelper","corner","getEffectiveCorner","offsetLeft","left","width","absolutePos","math","Coordinate","top","height","difference","x","y","viewport","getVisibleRectForElement","right","bottom","positionAtCoordinate","goog.positioning.getOffsetParentPageOffset","parent","offsetParent","isBody","tagName","TagName","HTML","BODY","getComputedPosition","getPageOffset","bidi","getScrollLeft","scrollTop","goog.positioning.getVisiblePart_","el","rect","getBounds","visibleBox","intersection","Rect","createFromBox","goog.positioning.positionAtCoordinate","clone","elementSize","getSize","size","positionResult","getPositionAtCoordinate","status","setPosition","getTopLeft","Size","equals","setBorderBoxSize","goog.positioning.getPositionAtCoordinate","elementCorner","adjustForViewport_","goog.positioning.adjustForViewport_","pos","overflow","originalX","Math","min","max","originalY","goog.positioning.getEffectiveCorner","element","isRightToLeft","flipCornerHorizontal","goog.positioning.flipCornerHorizontal","flipCornerVertical","goog.positioning.flipCornerVertical","flipCorner","goog.positioning.flipCorner"]
}
