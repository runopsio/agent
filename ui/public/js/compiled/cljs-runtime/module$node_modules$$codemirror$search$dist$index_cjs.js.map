{
"version":3,
"file":"module$node_modules$$codemirror$search$dist$index_cjs.js",
"lineCount":51,
"mappings":"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",
"sources":["node_modules/@codemirror/search/dist/index.cjs"],
"sourcesContent":["shadow$provide[\"module$node_modules$$codemirror$search$dist$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar view = require('@codemirror/view');\nvar state = require('@codemirror/state');\nvar panel = require('@codemirror/panel');\nvar rangeset = require('@codemirror/rangeset');\nvar elt = require('crelt');\nvar text = require('@codemirror/text');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar elt__default = /*#__PURE__*/_interopDefaultLegacy(elt);\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\"\n    ? x => x.normalize(\"NFKD\") : x => x;\n/**\nA search cursor provides an iterator over text matches in a\ndocument.\n*/\nclass SearchCursor {\n    /**\n    Create a text cursor. The query is the search string, `from` to\n    `to` provides the region to search.\n    \n    When `normalize` is given, it will be called, on both the query\n    string and the content it is matched against, before comparing.\n    You can, for example, create a case-insensitive search by\n    passing `s => s.toLowerCase()`.\n    \n    Text is always normalized with\n    [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    (when supported).\n    */\n    constructor(text, query, from = 0, to = text.length, normalize) {\n        /**\n        The current match (only holds a meaningful value after\n        [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when\n        `done` is false).\n        */\n        this.value = { from: 0, to: 0 };\n        /**\n        Whether the end of the iterated region has been reached.\n        */\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return text.codePointAt(this.buffer, this.bufferPos);\n    }\n    /**\n    Look for the next match. Updates the iterator's\n    [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n    [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n    at least once before using the cursor.\n    */\n    next() {\n        while (this.matches.length)\n            this.matches.pop();\n        return this.nextOverlapping();\n    }\n    /**\n    The `next` method will ignore matches that partially overlap a\n    previous match. This method behaves like `next`, but includes\n    such matches.\n    */\n    nextOverlapping() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = text.fromCodePoint(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos += text.codePointSize(next);\n            let norm = this.normalize(str);\n            for (let i = 0, pos = start;; i++) {\n                let code = norm.charCodeAt(i);\n                let match = this.match(code, pos);\n                if (match) {\n                    this.value = match;\n                    return this;\n                }\n                if (i == norm.length - 1)\n                    break;\n                if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                    pos++;\n            }\n        }\n    }\n    match(code, pos) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: pos + 1 };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: pos + 1 };\n            else\n                this.matches.push(1, pos);\n        }\n        return match;\n    }\n}\nif (typeof Symbol != \"undefined\")\n    SearchCursor.prototype[Symbol.iterator] = function () { return this; };\n\nconst empty = { from: -1, to: -1, match: /.*/.exec(\"\") };\nconst baseFlags = \"gm\" + (/x/.unicode == null ? \"\" : \"u\");\n/**\nThis class is similar to [`SearchCursor`](https://codemirror.net/6/docs/ref/#search.SearchCursor)\nbut searches for a regular expression pattern instead of a plain\nstring.\n*/\nclass RegExpCursor {\n    /**\n    Create a cursor that will search the given range in the given\n    document. `query` should be the raw pattern (as you'd pass it to\n    `new RegExp`).\n    */\n    constructor(text, query, options, from = 0, to = text.length) {\n        this.to = to;\n        this.curLine = \"\";\n        /**\n        Set to `true` when the cursor has reached the end of the search\n        range.\n        */\n        this.done = false;\n        /**\n        Will contain an object with the extent of the match and the\n        match object when [`next`](https://codemirror.net/6/docs/ref/#search.RegExpCursor.next)\n        sucessfully finds a match.\n        */\n        this.value = empty;\n        if (/\\\\[sWDnr]|\\n|\\r|\\[\\^/.test(query))\n            return new MultilineRegExpCursor(text, query, options, from, to);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.iter = text.iter();\n        let startLine = text.lineAt(from);\n        this.curLineStart = startLine.from;\n        this.matchPos = from;\n        this.getLine(this.curLineStart);\n    }\n    getLine(skip) {\n        this.iter.next(skip);\n        if (this.iter.lineBreak) {\n            this.curLine = \"\";\n        }\n        else {\n            this.curLine = this.iter.value;\n            if (this.curLineStart + this.curLine.length > this.to)\n                this.curLine = this.curLine.slice(0, this.to - this.curLineStart);\n            this.iter.next();\n        }\n    }\n    nextLine() {\n        this.curLineStart = this.curLineStart + this.curLine.length + 1;\n        if (this.curLineStart > this.to)\n            this.curLine = \"\";\n        else\n            this.getLine(0);\n    }\n    /**\n    Move to the next match, if there is one.\n    */\n    next() {\n        for (let off = this.matchPos - this.curLineStart;;) {\n            this.re.lastIndex = off;\n            let match = this.matchPos <= this.to && this.re.exec(this.curLine);\n            if (match) {\n                let from = this.curLineStart + match.index, to = from + match[0].length;\n                this.matchPos = to + (from == to ? 1 : 0);\n                if (from == this.curLine.length)\n                    this.nextLine();\n                if (from < to || from > this.value.to) {\n                    this.value = { from, to, match };\n                    return this;\n                }\n                off = this.matchPos - this.curLineStart;\n            }\n            else if (this.curLineStart + this.curLine.length < this.to) {\n                this.nextLine();\n                off = 0;\n            }\n            else {\n                this.done = true;\n                return this;\n            }\n        }\n    }\n}\nconst flattened = new WeakMap();\n// Reusable (partially) flattened document strings\nclass FlattenedDoc {\n    constructor(from, text) {\n        this.from = from;\n        this.text = text;\n    }\n    get to() { return this.from + this.text.length; }\n    static get(doc, from, to) {\n        let cached = flattened.get(doc);\n        if (!cached || cached.from >= to || cached.to <= from) {\n            let flat = new FlattenedDoc(from, doc.sliceString(from, to));\n            flattened.set(doc, flat);\n            return flat;\n        }\n        if (cached.from == from && cached.to == to)\n            return cached;\n        let { text, from: cachedFrom } = cached;\n        if (cachedFrom > from) {\n            text = doc.sliceString(from, cachedFrom) + text;\n            cachedFrom = from;\n        }\n        if (cached.to < to)\n            text += doc.sliceString(cached.to, to);\n        flattened.set(doc, new FlattenedDoc(cachedFrom, text));\n        return new FlattenedDoc(from, text.slice(from - cachedFrom, to - cachedFrom));\n    }\n}\nclass MultilineRegExpCursor {\n    constructor(text, query, options, from, to) {\n        this.text = text;\n        this.to = to;\n        this.done = false;\n        this.value = empty;\n        this.matchPos = from;\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.flat = FlattenedDoc.get(text, from, this.chunkEnd(from + 5000 /* Base */));\n    }\n    chunkEnd(pos) {\n        return pos >= this.to ? this.to : this.text.lineAt(pos).to;\n    }\n    next() {\n        for (;;) {\n            let off = this.re.lastIndex = this.matchPos - this.flat.from;\n            let match = this.re.exec(this.flat.text);\n            // Skip empty matches directly after the last match\n            if (match && !match[0] && match.index == off) {\n                this.re.lastIndex = off + 1;\n                match = this.re.exec(this.flat.text);\n            }\n            // If a match goes almost to the end of a noncomplete chunk, try\n            // again, since it'll likely be able to match more\n            if (match && this.flat.to < this.to && match.index + match[0].length > this.flat.text.length - 10)\n                match = null;\n            if (match) {\n                let from = this.flat.from + match.index, to = from + match[0].length;\n                this.value = { from, to, match };\n                this.matchPos = to + (from == to ? 1 : 0);\n                return this;\n            }\n            else {\n                if (this.flat.to == this.to) {\n                    this.done = true;\n                    return this;\n                }\n                // Grow the flattened doc\n                this.flat = FlattenedDoc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));\n            }\n        }\n    }\n}\nif (typeof Symbol != \"undefined\") {\n    RegExpCursor.prototype[Symbol.iterator] = MultilineRegExpCursor.prototype[Symbol.iterator] =\n        function () { return this; };\n}\nfunction validRegExp(source) {\n    try {\n        new RegExp(source, baseFlags);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\nfunction createLineDialog(view) {\n    let input = elt__default[\"default\"](\"input\", { class: \"cm-textfield\", name: \"line\" });\n    let dom = elt__default[\"default\"](\"form\", {\n        class: \"cm-gotoLine\",\n        onkeydown: (event) => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                view.dispatch({ effects: dialogEffect.of(false) });\n                view.focus();\n            }\n            else if (event.keyCode == 13) { // Enter\n                event.preventDefault();\n                go();\n            }\n        },\n        onsubmit: (event) => {\n            event.preventDefault();\n            go();\n        }\n    }, elt__default[\"default\"](\"label\", view.state.phrase(\"Go to line\"), \": \", input), \" \", elt__default[\"default\"](\"button\", { class: \"cm-button\", type: \"submit\" }, view.state.phrase(\"go\")));\n    function go() {\n        let match = /^([+-])?(\\d+)?(:\\d+)?(%)?$/.exec(input.value);\n        if (!match)\n            return;\n        let { state: state$1 } = view, startLine = state$1.doc.lineAt(state$1.selection.main.head);\n        let [, sign, ln, cl, percent] = match;\n        let col = cl ? +cl.slice(1) : 0;\n        let line = ln ? +ln : startLine.number;\n        if (ln && percent) {\n            let pc = line / 100;\n            if (sign)\n                pc = pc * (sign == \"-\" ? -1 : 1) + (startLine.number / state$1.doc.lines);\n            line = Math.round(state$1.doc.lines * pc);\n        }\n        else if (ln && sign) {\n            line = line * (sign == \"-\" ? -1 : 1) + startLine.number;\n        }\n        let docLine = state$1.doc.line(Math.max(1, Math.min(state$1.doc.lines, line)));\n        view.dispatch({\n            effects: dialogEffect.of(false),\n            selection: state.EditorSelection.cursor(docLine.from + Math.max(0, Math.min(col, docLine.length))),\n            scrollIntoView: true\n        });\n        view.focus();\n    }\n    return { dom, pos: -10 };\n}\nconst dialogEffect = state.StateEffect.define();\nconst dialogField = state.StateField.define({\n    create() { return true; },\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(dialogEffect))\n                value = e.value;\n        return value;\n    },\n    provide: f => panel.showPanel.from(f, val => val ? createLineDialog : null)\n});\n/**\nCommand that shows a dialog asking the user for a line number, and\nwhen a valid position is provided, moves the cursor to that line.\n\nSupports line numbers, relative line offsets prefixed with `+` or\n`-`, document percentages suffixed with `%`, and an optional\ncolumn position by adding `:` and a second number after the line\nnumber.\n\nThe dialog can be styled with the `panel.gotoLine` theme\nselector.\n*/\nconst gotoLine = view => {\n    let panel$1 = panel.getPanel(view, createLineDialog);\n    if (!panel$1) {\n        let effects = [dialogEffect.of(true)];\n        if (view.state.field(dialogField, false) == null)\n            effects.push(state.StateEffect.appendConfig.of([dialogField, baseTheme$1]));\n        view.dispatch({ effects });\n        panel$1 = panel.getPanel(view, createLineDialog);\n    }\n    if (panel$1)\n        panel$1.dom.querySelector(\"input\").focus();\n    return true;\n};\nconst baseTheme$1 = view.EditorView.baseTheme({\n    \".cm-panel.cm-gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100\n};\nconst highlightConfig = state.Facet.define({\n    combine(options) {\n        return state.combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/**\nThis extension highlights text that matches the selection. It uses\nthe `\"cm-selectionMatch\"` class for the highlighting. When\n`highlightWordAroundCursor` is enabled, the word at the cursor\nitself will be highlighted with `\"cm-selectionMatch-main\"`.\n*/\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nconst matchDeco = view.Decoration.mark({ class: \"cm-selectionMatch\" });\nconst mainMatchDeco = view.Decoration.mark({ class: \"cm-selectionMatch cm-selectionMatch-main\" });\nconst matchHighlighter = view.ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view$1) {\n        let conf = view$1.state.facet(highlightConfig);\n        let { state: state$1 } = view$1, sel = state$1.selection;\n        if (sel.ranges.length > 1)\n            return view.Decoration.none;\n        let range = sel.main, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return view.Decoration.none;\n            let word = state$1.wordAt(range.head);\n            if (!word)\n                return view.Decoration.none;\n            check = state$1.charCategorizer(range.head);\n            query = state$1.sliceDoc(word.from, word.to);\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return view.Decoration.none;\n            query = state$1.sliceDoc(range.from, range.to).trim();\n            if (!query)\n                return view.Decoration.none;\n        }\n        let deco = [];\n        for (let part of view$1.visibleRanges) {\n            let cursor = new SearchCursor(state$1.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || ((from == 0 || check(state$1.sliceDoc(from - 1, from)) != state.CharCategory.Word) &&\n                    (to == state$1.doc.length || check(state$1.sliceDoc(to, to + 1)) != state.CharCategory.Word))) {\n                    if (check && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return view.Decoration.none;\n                }\n            }\n        }\n        return view.Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = view.EditorView.baseTheme({\n    \".cm-selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \".cm-searchMatch .cm-selectionMatch\": { backgroundColor: \"transparent\" }\n});\n// Select the words around the cursors.\nconst selectWord = ({ state: state$1, dispatch }) => {\n    let { selection } = state$1;\n    let newSel = state.EditorSelection.create(selection.ranges.map(range => state$1.wordAt(range.head) || state.EditorSelection.cursor(range.head)), selection.mainIndex);\n    if (newSel.eq(selection))\n        return false;\n    dispatch(state$1.update({ selection: newSel }));\n    return true;\n};\n// Find next occurrence of query relative to last cursor. Wrap around\n// the document if there are no more matches.\nfunction findNextOccurrence(state, query) {\n    let { main, ranges } = state.selection;\n    let word = state.wordAt(main.head), fullWord = word && word.from == main.from && word.to == main.to;\n    for (let cycled = false, cursor = new SearchCursor(state.doc, query, ranges[ranges.length - 1].to);;) {\n        cursor.next();\n        if (cursor.done) {\n            if (cycled)\n                return null;\n            cursor = new SearchCursor(state.doc, query, 0, Math.max(0, ranges[ranges.length - 1].from - 1));\n            cycled = true;\n        }\n        else {\n            if (cycled && ranges.some(r => r.from == cursor.value.from))\n                continue;\n            if (fullWord) {\n                let word = state.wordAt(cursor.value.from);\n                if (!word || word.from != cursor.value.from || word.to != cursor.value.to)\n                    continue;\n            }\n            return cursor.value;\n        }\n    }\n}\n/**\nSelect next occurrence of the current selection.\nExpand selection to the word when selection range is empty.\n*/\nconst selectNextOccurrence = ({ state: state$1, dispatch }) => {\n    let { ranges } = state$1.selection;\n    if (ranges.some(sel => sel.from === sel.to))\n        return selectWord({ state: state$1, dispatch });\n    let searchedText = state$1.sliceDoc(ranges[0].from, ranges[0].to);\n    if (state$1.selection.ranges.some(r => state$1.sliceDoc(r.from, r.to) != searchedText))\n        return false;\n    let range = findNextOccurrence(state$1, searchedText);\n    if (!range)\n        return false;\n    dispatch(state$1.update({\n        selection: state$1.selection.addRange(state.EditorSelection.range(range.from, range.to), false),\n        effects: view.EditorView.scrollIntoView(range.to)\n    }));\n    return true;\n};\n\nconst searchConfigFacet = state.Facet.define({\n    combine(configs) {\n        var _a;\n        return {\n            top: configs.reduce((val, conf) => val !== null && val !== void 0 ? val : conf.top, undefined) || false,\n            caseSensitive: configs.reduce((val, conf) => val !== null && val !== void 0 ? val : (conf.caseSensitive || conf.matchCase), undefined) || false,\n            createPanel: ((_a = configs.find(c => c.createPanel)) === null || _a === void 0 ? void 0 : _a.createPanel) || (view => new SearchPanel(view))\n        };\n    }\n});\n/**\nConfigure the behavior of the search extension.\n*/\nfunction searchConfig(config) {\n    return searchConfigFacet.of(config);\n}\n/**\nA search query. Part of the editor's search state.\n*/\nclass SearchQuery {\n    /**\n    Create a query object.\n    */\n    constructor(config) {\n        this.search = config.search;\n        this.caseSensitive = !!config.caseSensitive;\n        this.regexp = !!config.regexp;\n        this.replace = config.replace || \"\";\n        this.valid = !!this.search && (!this.regexp || validRegExp(this.search));\n    }\n    /**\n    Compare this query to another query.\n    */\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace &&\n            this.caseSensitive == other.caseSensitive && this.regexp == other.regexp;\n    }\n    /**\n    @internal\n    */\n    create() {\n        return this.regexp ? new RegExpQuery(this) : new StringQuery(this);\n    }\n}\nclass QueryType {\n    constructor(spec) {\n        this.spec = spec;\n    }\n}\nclass StringQuery extends QueryType {\n    constructor(spec) {\n        super(spec);\n        this.unquoted = spec.search.replace(/\\\\([nrt\\\\])/g, (_, ch) => ch == \"n\" ? \"\\n\" : ch == \"r\" ? \"\\r\" : ch == \"t\" ? \"\\t\" : \"\\\\\");\n    }\n    cursor(doc, from = 0, to = doc.length) {\n        return new SearchCursor(doc, this.unquoted, from, to, this.spec.caseSensitive ? undefined : x => x.toLowerCase());\n    }\n    nextMatch(doc, curFrom, curTo) {\n        let cursor = this.cursor(doc, curTo).nextOverlapping();\n        if (cursor.done)\n            cursor = this.cursor(doc, 0, curFrom).nextOverlapping();\n        return cursor.done ? null : cursor.value;\n    }\n    // Searching in reverse is, rather than implementing inverted search\n    // cursor, done by scanning chunk after chunk forward.\n    prevMatchInRange(doc, from, to) {\n        for (let pos = to;;) {\n            let start = Math.max(from, pos - 10000 /* ChunkSize */ - this.unquoted.length);\n            let cursor = this.cursor(doc, start, pos), range = null;\n            while (!cursor.nextOverlapping().done)\n                range = cursor.value;\n            if (range)\n                return range;\n            if (start == from)\n                return null;\n            pos -= 10000 /* ChunkSize */;\n        }\n    }\n    prevMatch(doc, curFrom, curTo) {\n        return this.prevMatchInRange(doc, 0, curFrom) ||\n            this.prevMatchInRange(doc, curTo, doc.length);\n    }\n    getReplacement(_result) { return this.spec.replace; }\n    matchAll(doc, limit) {\n        let cursor = this.cursor(doc), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(doc, from, to, add) {\n        let cursor = this.cursor(doc, Math.max(0, from - this.unquoted.length), Math.min(to + this.unquoted.length, doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\nclass RegExpQuery extends QueryType {\n    cursor(doc, from = 0, to = doc.length) {\n        return new RegExpCursor(doc, this.spec.search, this.spec.caseSensitive ? undefined : { ignoreCase: true }, from, to);\n    }\n    nextMatch(doc, curFrom, curTo) {\n        let cursor = this.cursor(doc, curTo).next();\n        if (cursor.done)\n            cursor = this.cursor(doc, 0, curFrom).next();\n        return cursor.done ? null : cursor.value;\n    }\n    prevMatchInRange(doc, from, to) {\n        for (let size = 1;; size++) {\n            let start = Math.max(from, to - size * 10000 /* ChunkSize */);\n            let cursor = this.cursor(doc, start, to), range = null;\n            while (!cursor.next().done)\n                range = cursor.value;\n            if (range && (start == from || range.from > start + 10))\n                return range;\n            if (start == from)\n                return null;\n        }\n    }\n    prevMatch(doc, curFrom, curTo) {\n        return this.prevMatchInRange(doc, 0, curFrom) ||\n            this.prevMatchInRange(doc, curTo, doc.length);\n    }\n    getReplacement(result) {\n        return this.spec.replace.replace(/\\$([$&\\d+])/g, (m, i) => i == \"$\" ? \"$\"\n            : i == \"&\" ? result.match[0]\n                : i != \"0\" && +i < result.match.length ? result.match[i]\n                    : m);\n    }\n    matchAll(doc, limit) {\n        let cursor = this.cursor(doc), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(doc, from, to, add) {\n        let cursor = this.cursor(doc, Math.max(0, from - 250 /* HighlightMargin */), Math.min(to + 250 /* HighlightMargin */, doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\n/**\nA state effect that updates the current search query.\n*/\nconst setSearchQuery = state.StateEffect.define();\nconst togglePanel = state.StateEffect.define();\nconst searchState = state.StateField.define({\n    create(state) {\n        return new SearchState(defaultQuery(state).create(), createSearchPanel);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setSearchQuery))\n                value = new SearchState(effect.value.create(), value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? createSearchPanel : null);\n        }\n        return value;\n    },\n    provide: f => panel.showPanel.from(f, val => val.panel)\n});\n/**\nGet the current search query from an editor state.\n*/\nfunction getSearchQuery(state) {\n    let curState = state.field(searchState, false);\n    return curState ? curState.query.spec : defaultQuery(state);\n}\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = view.Decoration.mark({ class: \"cm-searchMatch\" }), selectedMatchMark = view.Decoration.mark({ class: \"cm-searchMatch cm-searchMatch-selected\" });\nconst searchHighlighter = view.ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.startState.field(searchState) || update.docChanged || update.selectionSet)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel || !query.spec.valid)\n            return view.Decoration.none;\n        let { view: view$1 } = this;\n        let builder = new rangeset.RangeSetBuilder();\n        for (let i = 0, ranges = view$1.visibleRanges, l = ranges.length; i < l; i++) {\n            let { from, to } = ranges[i];\n            while (i < l - 1 && to > ranges[i + 1].from - 2 * 250 /* HighlightMargin */)\n                to = ranges[++i].to;\n            query.highlight(view$1.state.doc, from, to, (from, to) => {\n                let selected = view$1.state.selection.ranges.some(r => r.from == from && r.to == to);\n                builder.add(from, to, selected ? selectedMatchMark : matchMark);\n            });\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.spec.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\n/**\nOpen the search panel if it isn't already open, and move the\nselection to the first match after the current main selection.\nWill wrap around to the start of the document when it reaches the\nend.\n*/\nconst findNext = searchCommand((view, { query }) => {\n    let { from, to } = view.state.selection.main;\n    let next = query.nextMatch(view.state.doc, from, to);\n    if (!next || next.from == from && next.to == to)\n        return false;\n    view.dispatch({\n        selection: { anchor: next.from, head: next.to },\n        scrollIntoView: true,\n        effects: announceMatch(view, next),\n        userEvent: \"select.search\"\n    });\n    return true;\n});\n/**\nMove the selection to the previous instance of the search query,\nbefore the current main selection. Will wrap past the start\nof the document to start searching at the end again.\n*/\nconst findPrevious = searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    let range = query.prevMatch(state.doc, from, to);\n    if (!range)\n        return false;\n    view.dispatch({\n        selection: { anchor: range.from, head: range.to },\n        scrollIntoView: true,\n        effects: announceMatch(view, range),\n        userEvent: \"select.search\"\n    });\n    return true;\n});\n/**\nSelect all instances of the search query.\n*/\nconst selectMatches = searchCommand((view, { query }) => {\n    let ranges = query.matchAll(view.state.doc, 1000);\n    if (!ranges || !ranges.length)\n        return false;\n    view.dispatch({\n        selection: state.EditorSelection.create(ranges.map(r => state.EditorSelection.range(r.from, r.to))),\n        userEvent: \"select.search.matches\"\n    });\n    return true;\n});\n/**\nSelect all instances of the currently selected text.\n*/\nconst selectSelectionMatches = ({ state: state$1, dispatch }) => {\n    let sel = state$1.selection;\n    if (sel.ranges.length > 1 || sel.main.empty)\n        return false;\n    let { from, to } = sel.main;\n    let ranges = [], main = 0;\n    for (let cur = new SearchCursor(state$1.doc, state$1.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            main = ranges.length;\n        ranges.push(state.EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state$1.update({\n        selection: state.EditorSelection.create(ranges, main),\n        userEvent: \"select.search.matches\"\n    }));\n    return true;\n};\n/**\nReplace the current match of the search query.\n*/\nconst replaceNext = searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    if (state.readOnly)\n        return false;\n    let next = query.nextMatch(state.doc, from, from);\n    if (!next)\n        return false;\n    let changes = [], selection, replacement;\n    if (next.from == from && next.to == to) {\n        replacement = state.toText(query.getReplacement(next));\n        changes.push({ from: next.from, to: next.to, insert: replacement });\n        next = query.nextMatch(state.doc, next.from, next.to);\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - replacement.length;\n        selection = { anchor: next.from - off, head: next.to - off };\n    }\n    view.dispatch({\n        changes, selection,\n        scrollIntoView: !!selection,\n        effects: next ? announceMatch(view, next) : undefined,\n        userEvent: \"input.replace\"\n    });\n    return true;\n});\n/**\nReplace all instances of the search query with the given\nreplacement.\n*/\nconst replaceAll = searchCommand((view, { query }) => {\n    if (view.state.readOnly)\n        return false;\n    let changes = query.matchAll(view.state.doc, 1e9).map(match => {\n        let { from, to } = match;\n        return { from, to, insert: query.getReplacement(match) };\n    });\n    if (!changes.length)\n        return false;\n    view.dispatch({\n        changes,\n        userEvent: \"input.replace.all\"\n    });\n    return true;\n});\nfunction createSearchPanel(view) {\n    return view.state.facet(searchConfigFacet).createPanel(view);\n}\nfunction defaultQuery(state, fallback) {\n    var _a;\n    let sel = state.selection.main;\n    let selText = sel.empty || sel.to > sel.from + 100 ? \"\" : state.sliceDoc(sel.from, sel.to);\n    let caseSensitive = (_a = fallback === null || fallback === void 0 ? void 0 : fallback.caseSensitive) !== null && _a !== void 0 ? _a : state.facet(searchConfigFacet).caseSensitive;\n    return fallback && !selText ? fallback : new SearchQuery({ search: selText.replace(/\\n/g, \"\\\\n\"), caseSensitive });\n}\n/**\nMake sure the search panel is open and focused.\n*/\nconst openSearchPanel = view => {\n    let state$1 = view.state.field(searchState, false);\n    if (state$1 && state$1.panel) {\n        let panel$1 = panel.getPanel(view, createSearchPanel);\n        if (!panel$1)\n            return false;\n        let searchInput = panel$1.dom.querySelector(\"[name=search]\");\n        if (searchInput != view.root.activeElement) {\n            let query = defaultQuery(view.state, state$1.query.spec);\n            if (query.valid)\n                view.dispatch({ effects: setSearchQuery.of(query) });\n            searchInput.focus();\n            searchInput.select();\n        }\n    }\n    else {\n        view.dispatch({ effects: [\n                togglePanel.of(true),\n                state$1 ? setSearchQuery.of(defaultQuery(view.state, state$1.query.spec)) : state.StateEffect.appendConfig.of(searchExtensions)\n            ] });\n    }\n    return true;\n};\n/**\nClose the search panel.\n*/\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel)\n        return false;\n    let panel$1 = panel.getPanel(view, createSearchPanel);\n    if (panel$1 && panel$1.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nDefault search-related key bindings.\n\n - Mod-f: [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel)\n - F3, Mod-g: [`findNext`](https://codemirror.net/6/docs/ref/#search.findNext)\n - Shift-F3, Shift-Mod-g: [`findPrevious`](https://codemirror.net/6/docs/ref/#search.findPrevious)\n - Alt-g: [`gotoLine`](https://codemirror.net/6/docs/ref/#search.gotoLine)\n - Mod-d: [`selectNextOccurrence`](https://codemirror.net/6/docs/ref/#search.selectNextOccurrence)\n*/\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches },\n    { key: \"Alt-g\", run: gotoLine },\n    { key: \"Mod-d\", run: selectNextOccurrence, preventDefault: true },\n];\nclass SearchPanel {\n    constructor(view) {\n        this.view = view;\n        let query = this.query = view.state.field(searchState).query.spec;\n        this.commit = this.commit.bind(this);\n        this.searchField = elt__default[\"default\"](\"input\", {\n            value: query.search,\n            placeholder: phrase(view, \"Find\"),\n            \"aria-label\": phrase(view, \"Find\"),\n            class: \"cm-textfield\",\n            name: \"search\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.replaceField = elt__default[\"default\"](\"input\", {\n            value: query.replace,\n            placeholder: phrase(view, \"Replace\"),\n            \"aria-label\": phrase(view, \"Replace\"),\n            class: \"cm-textfield\",\n            name: \"replace\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.caseField = elt__default[\"default\"](\"input\", {\n            type: \"checkbox\",\n            name: \"case\",\n            checked: query.caseSensitive,\n            onchange: this.commit\n        });\n        this.reField = elt__default[\"default\"](\"input\", {\n            type: \"checkbox\",\n            name: \"re\",\n            checked: query.regexp,\n            onchange: this.commit\n        });\n        function button(name, onclick, content) {\n            return elt__default[\"default\"](\"button\", { class: \"cm-button\", name, onclick, type: \"button\" }, content);\n        }\n        this.dom = elt__default[\"default\"](\"div\", { onkeydown: (e) => this.keydown(e), class: \"cm-search\" }, [\n            this.searchField,\n            button(\"next\", () => findNext(view), [phrase(view, \"next\")]),\n            button(\"prev\", () => findPrevious(view), [phrase(view, \"previous\")]),\n            button(\"select\", () => selectMatches(view), [phrase(view, \"all\")]),\n            elt__default[\"default\"](\"label\", null, [this.caseField, phrase(view, \"match case\")]),\n            elt__default[\"default\"](\"label\", null, [this.reField, phrase(view, \"regexp\")]),\n            ...view.state.readOnly ? [] : [\n                elt__default[\"default\"](\"br\"),\n                this.replaceField,\n                button(\"replace\", () => replaceNext(view), [phrase(view, \"replace\")]),\n                button(\"replaceAll\", () => replaceAll(view), [phrase(view, \"replace all\")]),\n                elt__default[\"default\"](\"button\", {\n                    name: \"close\",\n                    onclick: () => closeSearchPanel(view),\n                    \"aria-label\": phrase(view, \"close\"),\n                    type: \"button\"\n                }, [\"\u00d7\"])\n            ]\n        ]);\n    }\n    commit() {\n        let query = new SearchQuery({\n            search: this.searchField.value,\n            caseSensitive: this.caseField.checked,\n            regexp: this.reField.checked,\n            replace: this.replaceField.value\n        });\n        if (!query.eq(this.query)) {\n            this.query = query;\n            this.view.dispatch({ effects: setSearchQuery.of(query) });\n        }\n    }\n    keydown(e) {\n        if (view.runScopeHandlers(this.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == this.searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(this.view);\n        }\n        else if (e.keyCode == 13 && e.target == this.replaceField) {\n            e.preventDefault();\n            replaceNext(this.view);\n        }\n    }\n    update(update) {\n        for (let tr of update.transactions)\n            for (let effect of tr.effects) {\n                if (effect.is(setSearchQuery) && !effect.value.eq(this.query))\n                    this.setQuery(effect.value);\n            }\n    }\n    setQuery(query) {\n        this.query = query;\n        this.searchField.value = query.search;\n        this.replaceField.value = query.replace;\n        this.caseField.checked = query.caseSensitive;\n        this.reField.checked = query.regexp;\n    }\n    mount() {\n        this.searchField.select();\n    }\n    get pos() { return 80; }\n    get top() { return this.view.state.facet(searchConfigFacet).top; }\n}\nfunction phrase(view, phrase) { return view.state.phrase(phrase); }\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\nfunction announceMatch(view$1, { from, to }) {\n    let lineStart = view$1.state.doc.lineAt(from).from, lineEnd = view$1.state.doc.lineAt(to).to;\n    let start = Math.max(lineStart, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view$1.state.sliceDoc(start, end);\n    if (start != lineStart) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    return view.EditorView.announce.of(`${view$1.state.phrase(\"current match\")}. ${text} ${view$1.state.phrase(\"on line\")} ${view$1.state.doc.lineAt(from).number}`);\n}\nconst baseTheme = view.EditorView.baseTheme({\n    \".cm-panel.cm-search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button, & label\": {\n            margin: \".2em .6em .2em 0\"\n        },\n        \"& input[type=checkbox]\": {\n            marginRight: \".2em\"\n        },\n        \"& label\": {\n            fontSize: \"80%\",\n            whiteSpace: \"pre\"\n        }\n    },\n    \"&light .cm-searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"&dark .cm-searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"&light .cm-searchMatch-selected\": { backgroundColor: \"#ff6a0054\" },\n    \"&dark .cm-searchMatch-selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    state.Prec.lowest(searchHighlighter),\n    baseTheme\n];\n\nexports.RegExpCursor = RegExpCursor;\nexports.SearchCursor = SearchCursor;\nexports.SearchQuery = SearchQuery;\nexports.closeSearchPanel = closeSearchPanel;\nexports.findNext = findNext;\nexports.findPrevious = findPrevious;\nexports.getSearchQuery = getSearchQuery;\nexports.gotoLine = gotoLine;\nexports.highlightSelectionMatches = highlightSelectionMatches;\nexports.openSearchPanel = openSearchPanel;\nexports.replaceAll = replaceAll;\nexports.replaceNext = replaceNext;\nexports.searchConfig = searchConfig;\nexports.searchKeymap = searchKeymap;\nexports.selectMatches = selectMatches;\nexports.selectNextOccurrence = selectNextOccurrence;\nexports.selectSelectionMatches = selectSelectionMatches;\nexports.setSearchQuery = setSearchQuery;\n\n};"],
"names":["shadow$provide","global","require","module","exports","createLineDialog","view","go","match","exec","input","value","state$1","startLine","doc","lineAt","selection","main","head","sign","ln","cl","percent","col","slice","line","number","pc","lines","Math","round","docLine","max","min","dispatch","effects","dialogEffect","of","state","EditorSelection","cursor","from","length","scrollIntoView","focus","elt__default","class","name","dom","onkeydown","event","keyCode","preventDefault","onsubmit","phrase","type","pos","findNextOccurrence","query","ranges","word","wordAt","fullWord","to","cycled","SearchCursor","next","done","some","r","searchCommand","f","field","searchState","spec","valid","openSearchPanel","createSearchPanel","facet","searchConfigFacet","createPanel","defaultQuery","fallback","_a","sel","selText","empty","sliceDoc","caseSensitive","SearchQuery","search","replace","announceMatch","view$1","lineStart","lineEnd","start","AnnounceMargin","end","text","i","Break","test","EditorView","announce","Object","defineProperty","panel","rangeset","elt","basicNormalize","String","prototype","normalize","x","constructor","matches","buffer","bufferPos","iter","iterRange","bufferStart","peek","codePointAt","pop","nextOverlapping","str","fromCodePoint","codePointSize","norm","code","charCodeAt","index","keep","splice","push","Symbol","iterator","baseFlags","unicode","RegExpCursor","options","curLine","MultilineRegExpCursor","re","RegExp","ignoreCase","curLineStart","matchPos","getLine","skip","lineBreak","nextLine","off","lastIndex","flattened","WeakMap","FlattenedDoc","get","cached","flat","sliceString","set","cachedFrom","chunkEnd","StateEffect","define","dialogField","StateField","create","update","tr","e","is","provide","showPanel","val","gotoLine","panel$1","getPanel","appendConfig","baseTheme$1","querySelector","baseTheme","padding","fontSize","defaultHighlightOptions","highlightWordAroundCursor","minSelectionLength","maxMatches","highlightConfig","Facet","combine","combineConfig","a","b","matchDeco","Decoration","mark","mainMatchDeco","matchHighlighter","ViewPlugin","fromClass","decorations","getDeco","selectionSet","docChanged","viewportChanged","conf","none","range","check","charCategorizer","len","trim","deco","part","visibleRanges","CharCategory","Word","v","defaultTheme","backgroundColor","selectWord","newSel","map","mainIndex","eq","selectNextOccurrence","searchedText","addRange","configs","top","reduce","undefined","matchCase","find","c","SearchPanel","config","regexp","source","other","RegExpQuery","StringQuery","QueryType","unquoted","_","ch","toLowerCase","nextMatch","curFrom","curTo","prevMatchInRange","prevMatch","getReplacement","_result","matchAll","limit","highlight","add","size","result","m","setSearchQuery","togglePanel","SearchState","effect","matchMark","selectedMatchMark","searchHighlighter","startState","builder","RangeSetBuilder","l","selected","finish","findNext","anchor","userEvent","findPrevious","selectMatches","selectSelectionMatches","cur","replaceNext","readOnly","changes","replacement","toText","insert","replaceAll","searchInput","root","activeElement","select","searchExtensions","closeSearchPanel","contains","searchKeymap","key","run","scope","shift","button","onclick","content","commit","bind","searchField","placeholder","onchange","onkeyup","replaceField","caseField","checked","reField","keydown","runScopeHandlers","target","shiftKey","transactions","setQuery","mount","position","right","border","font","margin","marginRight","whiteSpace","Prec","lowest","getSearchQuery","curState","highlightSelectionMatches","ext","searchConfig"]
}
