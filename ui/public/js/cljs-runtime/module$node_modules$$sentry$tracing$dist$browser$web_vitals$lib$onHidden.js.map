{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$onHidden.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBrIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,QAAUN,OAAA,CAAQ,8CAAR,CACdE,QAAQK,CAAAA,QAAR,CAAmBC,QAAS,CAACC,EAAD,CAAKC,IAAL,CAAW,CACnC,IAAIC,mBAAqBA,QAAS,CAACC,KAAD,CAAQ,CACtC,GAAmB,UAAnB,GAAIA,KAAMC,CAAAA,IAAV,EAAwF,QAAxF,GAAiCP,OAAQQ,CAAAA,eAAR,EAA0BC,CAAAA,QAASC,CAAAA,eAApE,CACIP,EAAA,CAAGG,KAAH,CACA,CAAIF,IAAJ,GACIO,mBAAA,CAAoB,kBAApB,CAAwCN,kBAAxC,CAA4D,CAAA,CAA5D,CACA,CAAAM,mBAAA,CAAoB,UAApB;AAAgCN,kBAAhC,CAAoD,CAAA,CAApD,CAFJ,CAHkC,CAS1CO,iBAAA,CAAiB,kBAAjB,CAAqCP,kBAArC,CAAyD,CAAA,CAAzD,CAGAO,iBAAA,CAAiB,UAAjB,CAA6BP,kBAA7B,CAAiD,CAAA,CAAjD,CAbmC,CAlB8F;",
"sources":["node_modules/@sentry/tracing/dist/browser/web-vitals/lib/onHidden.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$onHidden\"] = function(global,require,module,exports) {\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@sentry/utils\");\nexports.onHidden = function (cb, once) {\n    var onHiddenOrPageHide = function (event) {\n        if (event.type === 'pagehide' || utils_1.getGlobalObject().document.visibilityState === 'hidden') {\n            cb(event);\n            if (once) {\n                removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n                removeEventListener('pagehide', onHiddenOrPageHide, true);\n            }\n        }\n    };\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n//# sourceMappingURL=onHidden.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils_1","onHidden","exports.onHidden","cb","once","onHiddenOrPageHide","event","type","getGlobalObject","document","visibilityState","removeEventListener","addEventListener"]
}
