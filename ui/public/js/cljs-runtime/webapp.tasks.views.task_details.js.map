{"version":3,"sources":["webapp/tasks/views/task_details.cljs"],"mappings":"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","names":["webapp.tasks.views.task-details/copy-clipboard","data-clipboard-target","webapp.tasks.views.task-details/kill-task","task-details","targets-not-killable","task-id","cljs.core/deref","dialog-text","on-success-dialog","re-frame.core/dispatch","open-dialog","cljs.core._EQ_","cljs.core/not","p1__30782#","cljs.core/some","webapp.components.button/secondary","webapp.tasks.views.task-details/run-task","status","webapp.components.button/green","cljs.core.not_EQ_","webapp.tasks.views.task-details/script-details","task","allow-copy?","webapp.tasks.views.task-details/template-details","template-name","p__30811","map__30812","cljs.core/--destructure-map","cljs.core.get","webapp.tasks.views.task-details/main","copy-to-new-script?","re_frame.core.subscribe","clipboard","js/module$node_modules$clipboard$dist$clipboard","show-script?","reagent.core.atom","clipboard-url","interval","js/window","and__4251__auto__","cljs.core.partial","cljs.core/=","js/document","_","reagent.core.create_class","labels","task-logs","webapp.components.headings/h2","webapp.formatters/time-ago","or__4253__auto__","webapp.formatters/time-elapsed","webapp.tasks.views.reviewers/reviewers","temp__5753__auto__","cljs.core/reset!","webapp.components.icon/regular","webapp.tasks.views.tasks-logs-container/main"],"sourcesContent":["(ns webapp.tasks.views.task-details\n  (:require\n   [reagent.core :as r]\n   [re-frame.core :as rf]\n   [\"clipboard\" :as clipboardjs]\n   [webapp.subs :as subs]\n   [webapp.formatters :as formatters]\n   [webapp.tasks.views.reviewers :as reviewers]\n   [webapp.components.icon :as icon]\n   [webapp.components.headings :as h]\n   [webapp.components.button :as button]\n   [webapp.tasks.views.tasks-logs-container :as logs-container]))\n\n(defn- copy-clipboard [data-clipboard-target]\n  [:div.copy-to-clipboard.absolute.w-6.h-6.rounded-lg.p-x-small.top-2.right-2.bg-gray-200.cursor-pointer.shadow.box-border.opacity-0.group-hover:opacity-100.transition\n   {:data-clipboard-target data-clipboard-target}\n   [:figure\n    [:img {:src \"/icons/icon-copy.svg\"}]]])\n\n(defn- kill-task [task-details]\n  (let [targets-not-killable [\"ecs-exec\" \"k8s-exec\" \"rails-console-ecs\"]\n        task-id (-> @task-details :task :id)\n        dialog-text (str \"Are you sure you want to kill task \"\n                         task-id \"?\")\n        on-success-dialog #(rf/dispatch [:kill-task (:task @task-details)])\n        open-dialog #(rf/dispatch [:open-dialog {:text dialog-text\n                                                 :on-success on-success-dialog}])]\n    (fn [task-details]\n      (when (and (= (-> @task-details :task :status) \"running\")\n                 (not (some #(= (-> @task-details :task :type) %) targets-not-killable)))\n        [:div\n         [button/secondary {:text \"Kill task\"\n                            :outlined true\n                            :variant :small\n                            :on-click open-dialog}]]))))\n\n(defn run-task [task-details]\n  (let [status (-> @task-details :task :status)]\n    (when (or (= status \"approved\")\n              (= status \"pending-review\"))\n      [:section\n       [:div\n        [button/green\n         :small\n         {:text [:span.flex.items-center.justify-center [:span :Run] [:img {:src \"/icons/icon-play-white.svg\"}]]\n          :on-click #(rf/dispatch [:run-task (-> @task-details :task :id)])\n          :disabled (when (not= status \"approved\") true)}]]])))\n\n(defn- script-details [task allow-copy?]\n  [:div\n   [:header {:class \"flex mb-regular col-span-2 items-end\"}\n    [:span {:class \"flex-grow font-bold\"}\n     \"Script\"]\n    (when allow-copy?\n      [:span {:class \"flex-shrink text-blue-500 cursor-pointer text-xs\"\n              :id \"copy-task-to-new-script\"\n              :on-click #(rf/dispatch [:tasks->copy-to-new-script\n                                       (:script task)\n                                       (:target task)])}\n       \"Copy this to a new script\"])]\n   [:section {:class (str \"relative group p-regular overflow-auto max-h-32\"\n                          \" bg-gray-100 rounded-lg\"\n                          \" text-xs font-mono whitespace-pre\")}\n    (copy-clipboard \"#task-script\")\n    [:span {:id \"task-script\"}\n     (:script task)]]])\n\n(defn- template-details [template-name]\n  [:div\n   [:span {:class \"text-sm text-gray-700\"}\n    \"Template: \"]\n   [:span {:class \"text-sm text-blue-500 font-bold\"}\n    template-name]])\n\n(defn main [{:keys [copy-to-new-script?]}]\n  (let [task-details (rf/subscribe [::subs/active-task-details])\n        clipboard (new clipboardjs \".copy-to-clipboard\")\n        show-script? (r/atom false)\n        clipboard-url (new clipboardjs \".copy-to-clipboard-url\")\n        interval (.setInterval\n                  js/window\n                  (fn []\n                    (let [task (:task @task-details)]\n                      (when (and\n                             (some (partial = (:status task))\n                                   [\"pending-review\"\n                                    \"approved\"\n                                    \"running\"])\n                             (not (.-hidden js/document)))\n                        (rf/dispatch [:get-task-by-id task])))) 5000)\n        _ (.on clipboard \"success\" #(rf/dispatch [:show-snackbar {:level :success :text \"Text copied to clipboard\"}]))\n        _ (.on clipboard-url \"success\" #(rf/dispatch [:show-snackbar {:level :success :text \"Task URL copied to clipboard\"}]))]\n\n    (r/create-class\n     {:display-name \"query-details\"\n      :component-will-unmount #(.clearInterval js/window interval)\n      :reagent-render\n      (fn []\n        (let [task (:task @task-details)\n              labels (:labels task)\n              task-logs (:task-logs @task-details)]\n          [:div\n           [:header.flex.mb-regular\n            [:div.flex-grow\n             [:div {:class \"flex gap-small items-center\"}\n              [h/h2 (str \"Query \" (:id task)) {}]\n              [:span {:class (str \"flex items-center gap-1 \"\n                                  \"cursor-pointer copy-to-clipboard-url \"\n                                  \" text-xs text-gray-500 border-b border-transparent \"\n                                  \" hover:border-gray-400 transition\")\n                      :data-clipboard-text (str \"https://use.runops.io/queries/\" (:id task))}\n               [:span \"Copy link\"]\n               [:figure {:class \"w-3\"}\n                [:img {:role \"button\"\n                       :src \"/icons/icon-document-gray.svg\"}]]]]\n             [:span.text-xs.text-gray-400\n              (str (:created task)\n                   \" - \"\n                   (formatters/time-ago (:created task)))]]\n            [:div.flex-shrink [run-task task-details]]\n            [:div.flex-shrink [kill-task task-details]]]\n\n           [:section.grid.grid-cols-3\n            [:section.col-span-2\n             [:div\n              [:span.text-sm.text-gray-600.font-light \"Connection: \"]\n              [:span.font-semibold.text-sm.text-gray-700 (:target task)]]\n             [:div\n              [:span.text-sm.text-gray-600.font-light \"Type: \"]\n              [:span.font-semibold.text-sm.text-gray-700 (:type task)]]\n             [:div\n              [:span.text-sm.text-gray-600.font-light \"User: \"]\n              [:span.font-semibold.text-sm.text-gray-700 (:user_email task)]]\n             [:div\n              [:span.text-sm.text-gray-600.font-light \"Redact: \"]\n              [:span.font-semibold.text-sm.text-gray-700\n               (or (:redact task) [:span.text-xs.text-gray-400.italic \"This task has no information regards redaction\"])]]\n             [:div\n              [:span.text-sm.text-gray-600.font-light \"Status: \"]\n              [:span.font-semibold.text-sm.text-gray-700 (:status task)]]\n             (when (not (nil? (:elapsed_time_ms task)))\n               [:div\n                [:span.text-sm.text-gray-600.font-light \"Execution time: \"]\n                [:span.text-sm.text-gray-700.font-semibold\n                 (formatters/time-elapsed (:elapsed_time_ms task))]])]\n            [reviewers/reviewers :opened task :tasks]]\n           [:div.pt-regular\n            [:div.grid.grid-cols-2.pb-regular.gap-regular\n             [:section\n              [:div\n               [:span.text-sm.text-gray-800 (or (:description task)\n                                                [:span.text-xs.text-gray-400.italic \"This task has no description\"])]]]\n             [:section {:class \"col-span-2\"}\n              (when-let [template-name (:template_name labels)]\n                [:div {:class \"flex flex-col gap-regular\"}\n                 [:div {:class \"flex items-center\"}\n                  [:div {:class \"flex-grow\"}\n                   [template-details template-name]]\n                  [:span {:class (str \"flex justify-end\"\n                                      \" text-blue-500 text-xs cursor-pointer hover:underline\")\n                          :on-click #(reset! show-script? (not @show-script?))}\n                   (if @show-script?\n                     [:span {:class \"flex items-center\"}\n                      [:span \"Hide script\"]\n                      [icon/regular {:icon-name \"cheveron-up-blue\"}]]\n                     [:span {:class \"flex items-center\"}\n                      [:span \"Show script for this template\"]\n                      [icon/regular {:icon-name \"cheveron-down-blue\"}]])]]\n                 (when @show-script?\n                   [script-details task copy-to-new-script?])])\n              (when-not (:template_name labels)\n                [script-details task copy-to-new-script?])]\n             (when (or (= (:status task) \"failure\") (= (:status task) \"success\"))\n               [:section\n                {:class \"col-span-2 h-96\"}\n                [logs-container/main\n                 {:logs (:logs task-logs)\n                  :log-status (:status task-logs)\n                  :classes \"h-96\"\n                  :task-status (:status task)\n                  :task-id (:id task)\n                  :connection (:type task)}]])]]]))})))\n"]}