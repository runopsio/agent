{"version":3,"sources":["webapp/quickstarts/views/connection_card.cljs"],"mappings":";AAIA,gDAAA,hDAAMA,wGACHC,KAAKC,YAAYC,WAAWC;AAD/B,AAEE,IAAMC,QAAM,AAAA,oFAAQJ;IACdK,OAAK,AAAA,oFAAOL;IACZM,MAAI,AAAA,iFAAMN;IACVO,cAAY,AAAA,kGAAcP;AAHhC,AAAA,2BAAA,oHAAA,2CAAA,iEAAA,mFAAA,yDAAA,mFAAA,mDAAA,2CAAA,wDAAA,8IAAA,+DAAA,mFAAA,uDAAA,2CAAA,wDAAA,sEAAA,lgCAIgBQ,8fAAiDF,qDACA,CAAA,oDAAaD,sYAIlCE,iFACF;AAAA,AACE,AAACE,sBAAOR,YAAYG;;AACpB,AAACK,sBAAOP,WAAWI;;AACnB,OAACG,sBAAON,QAAQ,AAACO,6CAAsB,AAACC,gDAAQP;mBAb5F,2CAAA,oDAISC","names":["webapp.quickstarts.views.connection-card/main","attr","target-type","target-img","configs","value","text","img","description","webapp.components.flip-card/main","cljs.core/reset!","webapp.quickstarts.utilities/get-config-keys","cljs.core.keyword"],"sourcesContent":["(ns webapp.quickstarts.views.connection-card\n  (:require [webapp.components.flip-card :as flip-card]\n            [webapp.quickstarts.utilities :as utils]))\n\n(defn main\n  [attr target-type target-img configs]\n  (let [value (:value attr)\n        text (:text attr)\n        img (:img attr)\n        description (:description attr)]\n    ^{:key text} [flip-card/main {:comp-front [:figure [:img {:src img\n                                                              :alt (str \"logo \" text)}]]\n\n\n                                  :comp-back [:small {:class \"block text-gray-600 whitespace-pre-line\"}\n                                              description]\n                                  :on-click (fn []\n                                              (reset! target-type value)\n                                              (reset! target-img img)\n                                              (reset! configs (utils/get-config-keys (keyword value))))}]))\n"]}