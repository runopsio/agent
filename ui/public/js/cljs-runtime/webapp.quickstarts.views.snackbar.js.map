{"version":3,"sources":["webapp/quickstarts/views/snackbar.cljs"],"mappings":";AAGA,GAAA,QAAAA,mCAAAC,+CAAAC,qDAAAC,8DAAAC;AAAA;AAAA,AAAA,yCAAA,iBAAAC,6BAAA,AAAAC,6CAAA,pIAAUS;IAAVR,6BAAA,AAAAD,6CAAA;IAAAE,6BAAA,AAAAF,6CAAA;IAAAG,iCAAA,AAAAH,6CAAA;IAAAI,0BAAA,AAAAC,4CAAA,mCAAA,gEAAA,iBAAAC,eAAA;AAAA,AAAA,QAAAA,6CAAAA,+CAAAA;;AAAA,AAAA,YAAAC,kBAAA,AAAAC,+CAAA,oCAAA,2BAAA,4DAAAJ,wBAAAL,2BAAAE,2BAAAC,2BAAAC,xLAAeO;;;AACf,AAAAD,mFAAA,6DAAA,WAA2BE;AAA3B,AACE,8BAAA,mFAAA,uEAAA,2CAAA,uDAAA,2DAAA,sDAAA,pYAACC;;AACH,AAAAH,mFAAA,0DAAA,WAAyBE;AAAzB,AACE,8BAAA,mFAAA,uEAAA,2CAAA,uDAAA,uDAAA,sDAAA,hYAACC;;AACH,AAAAH,mFAAA,gEAAA,WAA4BE;AAA5B,AACE,8BAAA,mFAAA,uEAAA,2CAAA,uDAAA,uDAAA,sDAAA,hYAACC;;AACH,AAAAH,mFAAA,sEAAA,WAAgCE;AAAhC,AACE,8BAAA,mFAAA,uEAAA,2CAAA,uDAAA,uDAAA,sDAAA,hYAACC;;AACH,AAAAH,mFAAA,0EAAA,WAAiCE;AAAjC,AACE,8BAAA,mFAAA,uEAAA,2CAAA,uDAAA,uDAAA,sDAAA,hYAACC","names":["js/webapp","js/webapp.quickstarts","js/webapp.quickstarts.views","js/webapp.quickstarts.views.snackbar","js/webapp.quickstarts.views.snackbar.main","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__30711","cljs.core/MultiFn","cljs.core.symbol","webapp.quickstarts.views.snackbar/main","cljs.core/identity","_","re-frame.core/dispatch"],"sourcesContent":["(ns webapp.quickstarts.views.snackbar\n  (:require [re-frame.core :as rf]))\n\n(defmulti main identity)\n(defmethod main :verified [_]\n  (rf/dispatch [:show-snackbar {:level :success :text \"Agent verified and target successfully created!\"}]))\n(defmethod main :not-up [_]\n  (rf/dispatch [:show-snackbar {:level :error :text \"Agent is not working! Please verify your configurations.\"}]))\n(defmethod main :not-exist [_]\n  (rf/dispatch [:show-snackbar {:level :error :text \"Agent not found! Please verify your configurations.\"}]))\n(defmethod main :agent-failure [_]\n  (rf/dispatch [:show-snackbar {:level :error :text \"Agent not verified! Please try again in a few minutes.\"}]))\n(defmethod main :target-failure [_]\n  (rf/dispatch [:show-snackbar {:level :error :text \"Target not created! Please try again in a few minutes.\"}]))\n"]}