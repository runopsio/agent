{"version":3,"sources":["webapp/components/forms.cljs"],"mappings":"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","names":["webapp.components.forms/form-label","text","webapp.components.forms/form-helper-text","js/webapp","js/webapp.components","js/webapp.components.forms","js/webapp.components.forms.input-styles","webapp.components.forms/input-styles","webapp.components.forms/input","_","p__50776","map__50777","cljs.core/--destructure-map","cljs.core.get","type","on-blur","on-focus","local-type","reagent.core.atom","or__4253__auto__","on-blur-cb","cljs.core._EQ_","cljs.core/reset!","on-focus-cb","p__50779","map__50780","label","placeholder","helper-text","value","defaultValue","on-change","on-keyDown","required","pattern","disabled","minlength","maxlength","min","max","step","cljs.core/deref","webapp.components.forms/textarea","config","webapp.components.forms/option","item","selected","attrs","p__50791","map__50792","webapp.components.forms/select","id","name","options","p1__50788#","cljs.core.map"],"sourcesContent":["(ns webapp.components.forms\n  (:require [reagent.core :as r]))\n\n(defn- form-label\n  [text]\n  [:label {:class \"block text-sm font-medium text-gray-700\"} text])\n\n(defn- form-helper-text\n  [text]\n  [:div {:class \"relative flex flex-col items-center group\"}\n   [:img {:class \"w-4 h-4\"\n          :alt \"Helper icon\"\n          :src \"/icons/icon-help-with-thin-circle-black.svg\"}]\n   [:div {:class \"absolute bottom-0 flex-col items-center hidden mb-6 w-max group-hover:flex\"}\n    [:span {:class (str \"relative border border-gray-300 bg-white rounded-md \"\n                        \"p-2 text-xs text-gray-700 leading-none whitespace-no-wrap shadow-lg\")}\n     text]\n    [:div {:class \"w-3 h-3 -mt-2 border-r border-b border-gray-300 bg-white transform rotate-45\"}]]])\n\n(defonce input-styles\n  \"relative block w-full h-12\n   py-3 px-2 mt-1\n   border border-gray-300 rounded-md\n   focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm disabled:opacity-50\")\n\n(defn input\n  \"Multi purpose HTML input component.\n  Props signature:\n  :label -> html label text;\n  :placeholder -> html prop placeholder for input;\n  :value -> a reagent atom piece of state.\"\n  [_]\n  (fn\n    [{:keys [type on-blur on-focus]}]\n    (let [local-type (r/atom (or type \"text\"))\n          on-blur-cb (fn []\n                       (when (= type \"password\")\n                         (reset! local-type \"password\"))\n                       (when on-blur (on-blur)))\n          on-focus-cb (fn []\n                        (when (= type \"password\")\n                          (reset! local-type \"text\"))\n                        (when on-focus (on-focus)))]\n      (fn [{:keys [label\n                   placeholder\n                   helper-text\n                   value\n                   defaultValue\n                   on-change\n                   on-keyDown\n                   required\n                   pattern\n                   disabled\n                   minlength\n                   maxlength\n                   min\n                   max\n                   step]}]\n        [:div {:class \"mb-regular text-sm\"}\n         [:div {:class \"flex items-center gap-2\"}\n          [form-label label]\n          (when helper-text [form-helper-text helper-text])]\n         [:input\n          {:type (if (= \"string\" @local-type) \"text\" @local-type)\n           :class input-styles\n           :placeholder (or placeholder label)\n           :pattern pattern\n           :minLength minlength\n           :maxLength maxlength\n           :min min\n           :max max\n           :step step\n           :value value\n           :defaultValue defaultValue\n           :on-change on-change\n           :on-keyDown on-keyDown\n           :on-blur on-blur-cb\n           :on-focus on-focus-cb\n           :disabled (or disabled false)\n           :required (or required false)}]]))))\n\n(defn textarea\n  [config]\n  [:div.mb-regular\n   [:div {:class \"flex items-center gap-2\"}\n    [form-label (:label config)]\n    (when (:helper-text config) [form-helper-text (:helper-text config)])]\n   [:textarea\n    {:class (str input-styles \" \" (or (:classes config) \"\"))\n     :id (or (:id config) \"\")\n     :rows (or (:rows config) 5)\n     :name (or (:name config) \"\")\n     :value (:value config)\n     :defaultValue (:defaultValue config)\n     :autoFocus (:autoFocus config)\n     :placeholder (:placeholder config)\n     :on-change (:on-change config)\n     :on-keyDown (:on-keyDown config)\n     :disabled (or (:disabled config) false)\n     :required (or (:required config) false)}]])\n\n(defn- option\n  [item selected]\n  (let [attrs {:key (:value item)\n               :value (:value item)}]\n    [:option attrs (:text item)]))\n\n(defn select\n  \"HTML select.\n  Props signature:\n  label -> html label text;\n  options -> List of {:text string :value string};\n  active -> the option value of an already active item;\n  on-change -> function to be executed on change;\n  required -> HTML required attribute;\"\n  [{:keys [label helper-text id name options selected on-change required disabled]}]\n  [:div.mb-regular.text-sm.w-full\n   [:div {:class \"flex items-center gap-2\"}\n    [form-label label]\n    (when helper-text [form-helper-text helper-text])]\n   [:select\n    {:class input-styles\n     :name (or name \"\")\n     :id (or id \"\")\n     :on-change on-change\n     :value selected\n     :required (or required false)\n     :disabled (or disabled false)}\n    [:option {:value \"\"\n              :disabled true\n              :label \"Select one\"}]\n    (map #(option % selected) options)]])\n"]}