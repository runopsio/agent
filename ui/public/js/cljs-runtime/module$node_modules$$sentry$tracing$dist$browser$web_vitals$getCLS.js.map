{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$web_vitals$getCLS.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,kEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgB/HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,eAAiBN,OAAA,CAAQ,8EAAR,CAArB,CACIO,aAAeP,OAAA,CAAQ,4EAAR,CADnB,CAEIQ,UAAYR,OAAA,CAAQ,yEAAR,CAFhB,CAGIS,WAAaT,OAAA,CAAQ,0EAAR,CACjBE;OAAQQ,CAAAA,MAAR,CAAiBC,QAAS,CAACC,QAAD,CAAWC,gBAAX,CAA6B,CACnD,IAAIC,OAASP,YAAaQ,CAAAA,UAAb,CAAwB,KAAxB,CAA+B,CAA/B,CAAb,CAEIC,aAAe,CAFnB,CAGIC,eAAiB,EAHrB,CAIIC,aAAeA,QAAS,CAACC,KAAD,CAAQ,CAGhC,GAAIA,KAAJ,EAAa,CAACA,KAAMC,CAAAA,cAApB,CAAoC,CAChC,IAAIC,kBAAoBJ,cAAA,CAAe,CAAf,CAAxB,CACIK,iBAAmBL,cAAA,CAAeA,cAAeM,CAAAA,MAA9B,CAAuC,CAAvC,CAInBP,aAAJ,EAC8B,CAD9B,GACIC,cAAeM,CAAAA,MADnB,EAEmD,GAFnD,CAEIJ,KAAMK,CAAAA,SAFV,CAEsBF,gBAAiBE,CAAAA,SAFvC,EAGoD,GAHpD,CAGIL,KAAMK,CAAAA,SAHV,CAGsBH,iBAAkBG,CAAAA,SAHxC,EAIIR,YACA,EADgBG,KAAMd,CAAAA,KACtB,CAAAY,cAAeQ,CAAAA,IAAf,CAAoBN,KAApB,CALJ,GAQIH,YACA,CADeG,KAAMd,CAAAA,KACrB;AAAAY,cAAA,CAAiB,CAACE,KAAD,CATrB,CAaIH,aAAJ,CAAmBF,MAAOT,CAAAA,KAA1B,GACIS,MAAOT,CAAAA,KAEP,CAFeW,YAEf,CADAF,MAAOY,CAAAA,OACP,CADiBT,cACjB,CAAIU,MAAJ,EACIA,MAAA,EAJR,CAnBgC,CAHJ,CAJpC,CAmCIC,GAAKpB,SAAUqB,CAAAA,OAAV,CAAkB,cAAlB,CAAkCX,YAAlC,CACT,IAAIU,EAAJ,CAAQ,CACJ,IAAAD,OAASrB,cAAewB,CAAAA,YAAf,CAA4BlB,QAA5B,CAAsCE,MAAtC,CAA8CD,gBAA9C,CACTJ,WAAWsB,CAAAA,QAAX,CAAoB,QAAS,EAAG,CAC5BH,EAAGI,CAAAA,WAAH,EAAiBC,CAAAA,GAAjB,CAAqBf,YAArB,CACAS,OAAA,CAAO,CAAA,CAAP,CAF4B,CAAhC,CAFI,CArC2C,CArBwE;",
"sources":["node_modules/@sentry/tracing/dist/browser/web-vitals/getCLS.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$web_vitals$getCLS\"] = function(global,require,module,exports) {\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bindReporter_1 = require(\"./lib/bindReporter\");\nvar initMetric_1 = require(\"./lib/initMetric\");\nvar observe_1 = require(\"./lib/observe\");\nvar onHidden_1 = require(\"./lib/onHidden\");\nexports.getCLS = function (onReport, reportAllChanges) {\n    var metric = initMetric_1.initMetric('CLS', 0);\n    var report;\n    var sessionValue = 0;\n    var sessionEntries = [];\n    var entryHandler = function (entry) {\n        // Only count layout shifts without recent user input.\n        // TODO: Figure out why entry can be undefined\n        if (entry && !entry.hadRecentInput) {\n            var firstSessionEntry = sessionEntries[0];\n            var lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n            // If the entry occurred less than 1 second after the previous entry and\n            // less than 5 seconds after the first entry in the session, include the\n            // entry in the current session. Otherwise, start a new session.\n            if (sessionValue &&\n                sessionEntries.length !== 0 &&\n                entry.startTime - lastSessionEntry.startTime < 1000 &&\n                entry.startTime - firstSessionEntry.startTime < 5000) {\n                sessionValue += entry.value;\n                sessionEntries.push(entry);\n            }\n            else {\n                sessionValue = entry.value;\n                sessionEntries = [entry];\n            }\n            // If the current session value is larger than the current CLS value,\n            // update CLS and the entries contributing to it.\n            if (sessionValue > metric.value) {\n                metric.value = sessionValue;\n                metric.entries = sessionEntries;\n                if (report) {\n                    report();\n                }\n            }\n        }\n    };\n    var po = observe_1.observe('layout-shift', entryHandler);\n    if (po) {\n        report = bindReporter_1.bindReporter(onReport, metric, reportAllChanges);\n        onHidden_1.onHidden(function () {\n            po.takeRecords().map(entryHandler);\n            report(true);\n        });\n    }\n};\n//# sourceMappingURL=getCLS.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","bindReporter_1","initMetric_1","observe_1","onHidden_1","getCLS","exports.getCLS","onReport","reportAllChanges","metric","initMetric","sessionValue","sessionEntries","entryHandler","entry","hadRecentInput","firstSessionEntry","lastSessionEntry","length","startTime","push","entries","report","po","observe","bindReporter","onHidden","takeRecords","map"]
}
