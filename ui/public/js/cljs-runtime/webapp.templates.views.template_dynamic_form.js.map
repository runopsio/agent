{"version":3,"sources":["webapp/templates/views/template_dynamic_form.cljs"],"mappings":";AAGA,4DAAA,yEAAAA,rIAAMI,gIACHC;AADH,AAAA,IAAAJ,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;cAAA,AAAAE,4CAAAF,eAAA,rEAagBiB;kBAbhB,AAAAf,4CAAAF,eAAA,zEAYgBgB;gBAZhB,AAAAd,4CAAAF,eAAA,vEAEgBM;WAFhB,AAAAJ,4CAAAF,eAAA,lEAWgBe;eAXhB,AAAAb,4CAAAF,eAAA,tEAMgBU;cANhB,AAAAR,4CAAAF,eAAA,rEAKgBS;UALhB,AAAAP,4CAAAF,eAAA,jEASgBa;kBAThB,AAAAX,4CAAAF,eAAA,zEAGgBO;YAHhB,AAAAL,4CAAAF,eAAA,nEAIgBQ;gBAJhB,AAAAN,4CAAAF,eAAA,vEAOgBW;gBAPhB,AAAAT,4CAAAF,eAAA,vEAQgBY;YARhB,AAAAV,4CAAAF,eAAA,nEACgBK;UADhB,AAAAH,4CAAAF,eAAA,jEAUgBc;AAVhB,AAAA,0FAAA,mDAeG,iBAAAI,WAAMd;AAAN,AAAA,QAAAc;KAAA;AAAA,0FACYC,+BAAa,uGAAA,2CAAA,6DAAA,yEAAA,xRAACC,yMACQf,qEACIC,sEACD,iBAAAe,mBAAIb;AAAJ,AAAA,oBAAAa;AAAAA;;AAAA;;KAHZ,yDAIW,4CAAA,WAAAC,vDAACC;AAAD,AAAM,oDAAA,mCAAA,2CAAA,sDAAAD,iBAAA,sDAAAA,xPAACE;YAJlB,TAI8CP,6EAC/BD,oBACd,kBAAM,iBAAAS,oBACC,yDAAA,zDAACC,gDAAKhB;AADP,AAAA,GAAAe;AAEC,IAAAJ,mBAAIX;AAAJ,AAAA,oBAAAW;AAAAA;;AAAa,oBAAA,ZAAMX;;;AAFpBe;;MAAN,AAAA,2CAAA,6DAAA,aAAA;;;;AAP1B,0FAWGE,8BAAY,uGAAA,wCAAA,kDAAA,mEAAA,sDAAA,qDAAA,gEAAA,iDAAA,uDAAA,gEAAA,oEAAA,+DAAA,qDAAA,/wBAACP,+0BAEc,iBAAAC,mBAAId,xCAOZM;AAPQ,AAAA,oBAAAQ;AAAAA;;AAAgB,QAAA,kEAA2BhB;;8BADjDA,zBAEAG,MACDJ,8DACGK,fACEH,1CACAK,oBACAC,VAENE,0CACCC,tBACOC,qCACd,kBAAM,iBAAAS,oBACC,yDAAA,zDAACC,gDAAKhB;AADP,AAAA,GAAAe;AAEC,IAAAJ,mBAAIX;AAAJ,AAAA,oBAAAW;AAAAA;;AAAa,oBAAA,ZAAMX;;;AAFpBe;;MAAN,AAAA,2CAAA,6DAAA,aAAA","names":["p__50799","map__50800","cljs.core/--destructure-map","cljs.core.get","webapp.templates.views.template-dynamic-form/dynamic-form","type","label","on-change","placeholder","value","pattern","required","minlength","maxlength","min","max","step","helper-text","options","G__50801","webapp.components.forms/select","cljs.core.merge","or__4253__auto__","p1__50798#","cljs.core.map","cljs.core.into","and__4251__auto__","cljs.core.not_EQ_","webapp.components.forms/input"],"sourcesContent":["(ns webapp.templates.views.template-dynamic-form\n  (:require [webapp.components.forms :as forms]))\n\n(defn dynamic-form\n  [type {:keys [label\n                on-change\n                placeholder\n                value\n                pattern\n                required\n                minlength\n                maxlength\n                min\n                max\n                step\n                helper-text\n                options]}]\n  [:div\n   (case type\n     \"select\" [forms/select (merge\n                             {:label label\n                              :on-change on-change\n                              :selected (or value \"\")\n                              :options (map #(into {} {:value % :text %}) options)\n                              :helper-text helper-text}\n                             (when (and\n                                    (not= required \"false\")\n                                    (or required (nil? required)))\n                               {:required true}))]\n     [forms/input (merge\n                   {:label label\n                    :placeholder (or placeholder (str \"Define a value for \" label))\n                    :value value\n                    :type type\n                    :pattern pattern\n                    :on-change on-change\n                    :minLength minlength\n                    :maxLength maxlength\n                    :min min\n                    :max max\n                    :step step\n                    :helper-text helper-text}\n                   (when (and\n                          (not= required \"false\")\n                          (or required (nil? required)))\n                     {:required true}))])])\n"]}