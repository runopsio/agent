{"version":3,"sources":["webapp/connections/views/main.cljs"],"mappings":"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","names":["webapp.connections.views.main/close-modal-dialog","dialog-text","on-success-dialog","re-frame.core/dispatch","open-dialog","webapp.connections.views.main/section-header","admin?","searched-connections-atom","webapp.connections.views.connections-filter/main","webapp.components.button/primary","webapp.connections.views.connection-form-modal/form","webapp.connections.views.main/next-page","js/webapp","js/webapp.connections","js/webapp.connections.views","js/webapp.connections.views.main","js/webapp.connections.views.main.connections-layout","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__30287","cljs.core/MultiFn","cljs.core.symbol","webapp.connections.views.main/connections-layout","cljs.core/identity","_","connections","webapp.connections.views.list-view/main","webapp.connections.views.grid-view/main","p__30288","map__30289","cljs.core/--destructure-map","webapp.connections.views.main/layout-switcher","set-grid","set-list","view-style","cljs.core._EQ_","webapp.connections.views.main/panel","user","re_frame.core.subscribe","searched-connections","reagent.core.atom","connections-next-page","feature-flags","cljs.core/deref","cljs.core/some","cljs.core.partial","cljs.core/=","cljs.core/reset!","cljs.core/empty?"],"sourcesContent":["(ns webapp.connections.views.main\n  (:require [re-frame.core :as rf]\n            [reagent.core :as r]\n            [webapp.connections.events :as events]\n            [webapp.subs :as subs]\n            [webapp.components.button :as button]\n            [webapp.connections.views.connections-filter :as connections-filter]\n            [webapp.connections.views.grid-view :as grid-view]\n            [webapp.connections.views.list-view :as list-view]\n            [webapp.connections.views.connection-form-modal :as connection-form-modal]))\n\n(defn close-modal-dialog []\n  (let [dialog-text (str \"Are you sure you want to discard this new connection?\")\n        on-success-dialog #(rf/dispatch [:close-modal])\n        open-dialog #(rf/dispatch [:open-dialog {:text dialog-text\n                                                 :on-success on-success-dialog}])]\n    (open-dialog)))\n\n(defn section-header [admin? searched-connections-atom]\n  [:div\n   {:class \"grid grid-cols-4 gap-regular items-center\"}\n   [:div.search-bar.col-span-3\n    [connections-filter/main searched-connections-atom]]\n   (when admin? [:div\n                 (button/primary {:text \"Create connection\"\n                                  :on-click #(rf/dispatch [:open-modal [connection-form-modal/form] :large close-modal-dialog])})])])\n\n(defn next-page []\n  [:div.flex.pt-regular.justify-center\n   [:div.w-48\n    (button/primary {:text \"Load more\"\n                     :on-click #(rf/dispatch [::events/get-next-page])})]])\n\n(defmulti ^:private connections-layout identity)\n(defmethod ^:private connections-layout :list [_ connections]\n  [list-view/main connections])\n(defmethod ^:private connections-layout :default [_ connections]\n  [grid-view/main connections])\n\n(defn- layout-switcher [{:keys [set-grid set-list view-style]}]\n  [:div\n   {:class \"flex gap-small text-xs pt-regular pb-small justify-end px-small\"}\n   [:span {:class \"text-xs text-gray-800\"}\n    \"View in:\"]\n   [:span {:on-click set-grid}\n    [:figure {:class (str \"w-4 cursor-pointer \"\n                          \"hover:opacity-80 transition \"\n                          (if (= view-style :grid) \"opacity-100\" \"opacity-50\"))}\n     [:img {:alt \"Grid view\"\n            :role \"button\"\n            :src \"/icons/icon-grid-gray.svg\"}]]]\n   [:span {:on-click set-list}\n    [:figure {:class (str \"w-4 cursor-pointer \"\n                          \"hover:opacity-80 transition \"\n                          (if (= view-style :list) \"opacity-100\" \"opacity-50\"))}\n     [:img {:alt \"List view\"\n            :role \"button\"\n            :src \"/icons/icon-list-gray.svg\"}]]]])\n\n(defn panel []\n  (let [user (rf/subscribe [::subs/user])\n        connections (rf/subscribe [::subs/connections])\n        searched-connections (r/atom nil)\n        connections-next-page (rf/subscribe [::subs/connections-next-page])\n        feature-flags (rf/subscribe [:feature-flags])\n        view-style (r/atom :grid)]\n    (rf/dispatch [:get-connections])\n    (fn []\n      (let [admin? (some (partial = \"admin\") (:groups @user))]\n        (when @feature-flags (rf/dispatch [:settings->get-agents (if (:agents-events @feature-flags) :new :vintage)]))\n        [:div.px-large\n         [section-header admin? searched-connections]\n         [layout-switcher {:set-grid #(reset! view-style :grid)\n                           :set-list #(reset! view-style :list)\n                           :view-style @view-style}]\n         [connections-layout\n          @view-style\n          (if @searched-connections\n            @searched-connections\n            (:results @connections))]\n         (when-not (empty? (:results @connections-next-page)) (next-page))]))))\n"]}