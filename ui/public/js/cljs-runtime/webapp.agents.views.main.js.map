{"version":3,"sources":["webapp/agents/views/main.cljs"],"mappings":";AAQA,qCAAA,rCAAMA,kFACHC;AADH,AAEE,mCAAA,mFAAA,oFAAA,mFAAA,sPAAA,mFAAA,gMAAA,mFAAA,6MAAA,mFAAA,6MAAA,2CAAA,14CAACC,gZAE4C,AAAA,8GAAoBD,gMAClC,AAAA,mFAAOA,gMACP,AAAA,gGAAcA,gMACd,AAAA,wFAASA,qHACjC,AAAA,8GAAoBA;;AAE7B,uCAAA,vCAAME,sFACHC;AADH,AAAA,0FAAA,g3BAAA,7zBAGG,+BAAA,mFAAA,oFAAA,mFAAA,uDAAA,eAAA,mFAAA,uDAAA,eAAA,mFAAA,uDAAA,kBAAA,mFAAA,uDAAA,yBAAA,vzBAACC,g5BAQAC,6BAAW,AAACC,4CAAIP,mCAAUI;;AAE9B,0CAAA,1CAAMI,4FACHJ;AADH,AAAA,0FAAA,iIAAA,mFAGIK,8BAAY,sEAAA,zBAAK,AAACC,gBAAMN,kBAAiB,mCAAA,GAAA,pCAAI,2BAAA,1BAAG,AAACM,gBAAMN;;AAE3D,iCAAA,jCAAMO;AAAN,AACE,aAAA,AAAAC,TAAMR,yBAAQ,sDAAA,mFAAA,zIAACS;oBAAf,AAAAD,hBACME,gCAAe,sDAAA,mFAAA,zIAACD;AADtB,AAEE,oBAAMC;AAAN,AAAoB,uBAAA,mFAAA,1GAACC,2KAAyB,uIAAA,oDAAA,zKAAI,AAAA,qGAAgBD;;AAAlE;;AAFF,0FAAA,mDAAA,0IAAA,vDAIIN,wCAAeJ,kGACfD,qCAAYC","names":["webapp.agents.views.main/list-item","item","webapp.components.table/row","webapp.agents.views.main/agents-list","agents","webapp.components.table/header","webapp.components.table/rows","cljs.core.map","webapp.agents.views.main/section-header","webapp.components.headings/h2","cljs.core/count","webapp.agents.views.main/panel","cljs.core/deref","re_frame.core.subscribe","feature-flags","re-frame.core/dispatch"],"sourcesContent":["(ns webapp.agents.views.main\n  (:require [re-frame.core :as rf]\n            [webapp.subs :as subs]\n            [webapp.components.headings :as headings]\n            [webapp.components.table :as table]\n            ;; needs to import even tho not using to register events\n            [webapp.agents.events :as events]))\n\n(defn list-item\n  [item]\n  (table/row\n   [:div.grid.grid-cols-4\n     [:small.font-semibold.text-gray-700.block (:subscription_name item)]\n     [:small.block.text-gray-500 (:tags item)]\n     [:small.block.text-gray-500 (:app_version item)]\n     [:small.block.text-gray-500 (:status item)]]\n   {:key (:subscription_name item)}))\n\n(defn agents-list\n  [agents]\n  [:div\n   (table/header\n    [:div.grid.grid-cols-4\n     [:small \"Name\"]\n     [:small \"Tags\"]\n     [:small \"Version\"]\n     [:small \"Status\"]]\n    nil)\n\n   [table/rows (map list-item agents)]])\n\n(defn section-header\n  [agents]\n  [:div.grid.grid-cols-4.items-center.mb-large\n   [headings/h2 (str (count agents) \" Agent\" (if (< (count agents) 2) \"\" \"s\"))]])\n\n(defn panel []\n  (let [agents @(rf/subscribe [::subs/agents])\n        feature-flags @(rf/subscribe [::subs/feature-flags])]\n    (when feature-flags (rf/dispatch [:get-agents (if (:agents-events feature-flags) :new :vintage)]) )\n    [:div\n     [section-header agents]\n     [agents-list agents]]))\n"]}