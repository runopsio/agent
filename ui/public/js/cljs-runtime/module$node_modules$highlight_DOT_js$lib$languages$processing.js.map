{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$processing.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/processing.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$processing\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: Processing\nDescription: Processing is a flexible software sketchbook and a language for learning how to code within the context of the visual arts.\nAuthor: Erik Paluka <erik.paluka@gmail.com>\nWebsite: https://processing.org\nCategory: graphics\n*/\n\nfunction processing(hljs) {\n  const BUILT_INS = [\n    \"displayHeight\",\n    \"displayWidth\",\n    \"mouseY\",\n    \"mouseX\",\n    \"mousePressed\",\n    \"pmouseX\",\n    \"pmouseY\",\n    \"key\",\n    \"keyCode\",\n    \"pixels\",\n    \"focused\",\n    \"frameCount\",\n    \"frameRate\",\n    \"height\",\n    \"width\",\n    \"size\",\n    \"createGraphics\",\n    \"beginDraw\",\n    \"createShape\",\n    \"loadShape\",\n    \"PShape\",\n    \"arc\",\n    \"ellipse\",\n    \"line\",\n    \"point\",\n    \"quad\",\n    \"rect\",\n    \"triangle\",\n    \"bezier\",\n    \"bezierDetail\",\n    \"bezierPoint\",\n    \"bezierTangent\",\n    \"curve\",\n    \"curveDetail\",\n    \"curvePoint\",\n    \"curveTangent\",\n    \"curveTightness\",\n    \"shape\",\n    \"shapeMode\",\n    \"beginContour\",\n    \"beginShape\",\n    \"bezierVertex\",\n    \"curveVertex\",\n    \"endContour\",\n    \"endShape\",\n    \"quadraticVertex\",\n    \"vertex\",\n    \"ellipseMode\",\n    \"noSmooth\",\n    \"rectMode\",\n    \"smooth\",\n    \"strokeCap\",\n    \"strokeJoin\",\n    \"strokeWeight\",\n    \"mouseClicked\",\n    \"mouseDragged\",\n    \"mouseMoved\",\n    \"mousePressed\",\n    \"mouseReleased\",\n    \"mouseWheel\",\n    \"keyPressed\",\n    \"keyPressedkeyReleased\",\n    \"keyTyped\",\n    \"print\",\n    \"println\",\n    \"save\",\n    \"saveFrame\",\n    \"day\",\n    \"hour\",\n    \"millis\",\n    \"minute\",\n    \"month\",\n    \"second\",\n    \"year\",\n    \"background\",\n    \"clear\",\n    \"colorMode\",\n    \"fill\",\n    \"noFill\",\n    \"noStroke\",\n    \"stroke\",\n    \"alpha\",\n    \"blue\",\n    \"brightness\",\n    \"color\",\n    \"green\",\n    \"hue\",\n    \"lerpColor\",\n    \"red\",\n    \"saturation\",\n    \"modelX\",\n    \"modelY\",\n    \"modelZ\",\n    \"screenX\",\n    \"screenY\",\n    \"screenZ\",\n    \"ambient\",\n    \"emissive\",\n    \"shininess\",\n    \"specular\",\n    \"add\",\n    \"createImage\",\n    \"beginCamera\",\n    \"camera\",\n    \"endCamera\",\n    \"frustum\",\n    \"ortho\",\n    \"perspective\",\n    \"printCamera\",\n    \"printProjection\",\n    \"cursor\",\n    \"frameRate\",\n    \"noCursor\",\n    \"exit\",\n    \"loop\",\n    \"noLoop\",\n    \"popStyle\",\n    \"pushStyle\",\n    \"redraw\",\n    \"binary\",\n    \"boolean\",\n    \"byte\",\n    \"char\",\n    \"float\",\n    \"hex\",\n    \"int\",\n    \"str\",\n    \"unbinary\",\n    \"unhex\",\n    \"join\",\n    \"match\",\n    \"matchAll\",\n    \"nf\",\n    \"nfc\",\n    \"nfp\",\n    \"nfs\",\n    \"split\",\n    \"splitTokens\",\n    \"trim\",\n    \"append\",\n    \"arrayCopy\",\n    \"concat\",\n    \"expand\",\n    \"reverse\",\n    \"shorten\",\n    \"sort\",\n    \"splice\",\n    \"subset\",\n    \"box\",\n    \"sphere\",\n    \"sphereDetail\",\n    \"createInput\",\n    \"createReader\",\n    \"loadBytes\",\n    \"loadJSONArray\",\n    \"loadJSONObject\",\n    \"loadStrings\",\n    \"loadTable\",\n    \"loadXML\",\n    \"open\",\n    \"parseXML\",\n    \"saveTable\",\n    \"selectFolder\",\n    \"selectInput\",\n    \"beginRaw\",\n    \"beginRecord\",\n    \"createOutput\",\n    \"createWriter\",\n    \"endRaw\",\n    \"endRecord\",\n    \"PrintWritersaveBytes\",\n    \"saveJSONArray\",\n    \"saveJSONObject\",\n    \"saveStream\",\n    \"saveStrings\",\n    \"saveXML\",\n    \"selectOutput\",\n    \"popMatrix\",\n    \"printMatrix\",\n    \"pushMatrix\",\n    \"resetMatrix\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"scale\",\n    \"shearX\",\n    \"shearY\",\n    \"translate\",\n    \"ambientLight\",\n    \"directionalLight\",\n    \"lightFalloff\",\n    \"lights\",\n    \"lightSpecular\",\n    \"noLights\",\n    \"normal\",\n    \"pointLight\",\n    \"spotLight\",\n    \"image\",\n    \"imageMode\",\n    \"loadImage\",\n    \"noTint\",\n    \"requestImage\",\n    \"tint\",\n    \"texture\",\n    \"textureMode\",\n    \"textureWrap\",\n    \"blend\",\n    \"copy\",\n    \"filter\",\n    \"get\",\n    \"loadPixels\",\n    \"set\",\n    \"updatePixels\",\n    \"blendMode\",\n    \"loadShader\",\n    \"PShaderresetShader\",\n    \"shader\",\n    \"createFont\",\n    \"loadFont\",\n    \"text\",\n    \"textFont\",\n    \"textAlign\",\n    \"textLeading\",\n    \"textMode\",\n    \"textSize\",\n    \"textWidth\",\n    \"textAscent\",\n    \"textDescent\",\n    \"abs\",\n    \"ceil\",\n    \"constrain\",\n    \"dist\",\n    \"exp\",\n    \"floor\",\n    \"lerp\",\n    \"log\",\n    \"mag\",\n    \"map\",\n    \"max\",\n    \"min\",\n    \"norm\",\n    \"pow\",\n    \"round\",\n    \"sq\",\n    \"sqrt\",\n    \"acos\",\n    \"asin\",\n    \"atan\",\n    \"atan2\",\n    \"cos\",\n    \"degrees\",\n    \"radians\",\n    \"sin\",\n    \"tan\",\n    \"noise\",\n    \"noiseDetail\",\n    \"noiseSeed\",\n    \"random\",\n    \"randomGaussian\",\n    \"randomSeed\"\n  ];\n  const IDENT = hljs.IDENT_RE;\n  const FUNC_NAME = {\n    variants: [\n      {\n        match: concat(either(...BUILT_INS), lookahead(/\\s*\\(/)),\n        className: \"built_in\"\n      },\n      {\n        relevance: 0,\n        match: concat(\n          /\\b(?!for|if|while)/,\n          IDENT, lookahead(/\\s*\\(/)),\n        className: \"title.function\"\n      }\n    ]\n  };\n  const NEW_CLASS = {\n    match: [\n      /new\\s+/,\n      IDENT\n    ],\n    className: {\n      1: \"keyword\",\n      2: \"class.title\"\n    }\n  };\n  const PROPERTY = {\n    relevance: 0,\n    match: [\n      /\\./,\n      IDENT\n    ],\n    className: {\n      2: \"property\"\n    }\n  };\n  const CLASS = {\n    variants: [\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT,\n          /\\s+/,\n          /extends/,\n          /\\s+/,\n          IDENT\n        ]\n      },\n      {\n        match: [\n          /class/,\n          /\\s+/,\n          IDENT\n        ]\n      }\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.class\",\n      5: \"keyword\",\n      7: \"title.class.inherited\"\n    }\n  };\n\n  const TYPES = [\n    \"boolean\",\n    \"byte\",\n    \"char\",\n    \"color\",\n    \"double\",\n    \"float\",\n    \"int\",\n    \"long\",\n    \"short\",\n  ];\n  const CLASSES = [\n    \"BufferedReader\",\n    \"PVector\",\n    \"PFont\",\n    \"PImage\",\n    \"PGraphics\",\n    \"HashMap\",\n    \"String\",\n    \"Array\",\n    \"FloatDict\",\n    \"ArrayList\",\n    \"FloatList\",\n    \"IntDict\",\n    \"IntList\",\n    \"JSONArray\",\n    \"JSONObject\",\n    \"Object\",\n    \"StringDict\",\n    \"StringList\",\n    \"Table\",\n    \"TableRow\",\n    \"XML\"\n  ];\n  const JAVA_KEYWORDS = [\n    \"abstract\",\n    \"assert\",\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"const\",\n    \"continue\",\n    \"default\",\n    \"else\",\n    \"enum\",\n    \"final\",\n    \"finally\",\n    \"for\",\n    \"if\",\n    \"import\",\n    \"instanceof\",\n    \"long\",\n    \"native\",\n    \"new\",\n    \"package\",\n    \"private\",\n    \"private\",\n    \"protected\",\n    \"protected\",\n    \"public\",\n    \"public\",\n    \"return\",\n    \"static\",\n    \"strictfp\",\n    \"switch\",\n    \"synchronized\",\n    \"throw\",\n    \"throws\",\n    \"transient\",\n    \"try\",\n    \"void\",\n    \"volatile\",\n    \"while\"\n  ];\n\n  return {\n    name: 'Processing',\n    aliases: [ 'pde' ],\n    keywords: {\n      keyword: [\n        ...JAVA_KEYWORDS\n      ],\n      literal: 'P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI null true false',\n      title: 'setup draw',\n      variable: \"super this\",\n      built_in: [\n        ...BUILT_INS,\n        ...CLASSES\n      ],\n      type: TYPES\n    },\n    contains: [\n      CLASS,\n      NEW_CLASS,\n      FUNC_NAME,\n      PROPERTY,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = processing;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","stripOptionsFromArgs","opts","length","constructor","Object","splice","either","capture","processing","hljs","BUILT_INS","IDENT","IDENT_RE","FUNC_NAME","variants","match","re","className","relevance","NEW_CLASS","PROPERTY","CLASS","name","aliases","keywords","keyword","literal","title","variable","built_in","type","TYPES","contains","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","APOS_STRING_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE"]
}
