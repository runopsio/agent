{"version":3,"sources":["webapp/templates/views/template_view.cljs"],"mappings":"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","names":["js/webapp","js/webapp.templates","js/webapp.templates.views","js/webapp.templates.views.template-view","js/webapp.templates.views.template-view.template-view","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__30220","cljs.core/MultiFn","cljs.core.symbol","webapp.templates.views.template-view/template-view","cljs.core/identity","_","p1__30225#","p2__30226#","template","re_frame.core.subscribe","connection-filters","cljs.core/deref","connection-filter->name","connections","p1__30222#","cljs.core.filter","cljs.core/some","cljs.core.into","connection-filter->type","p1__30223#","all-connections","reagent.core.atom","connections-combobox-status","set-connections","c","cljs.core/reset!","p1__30224#","cljs.core.map","set-connections-error","e","cljs.core.println","get-all-connections","webapp.http.runops-api/request","selected-connection","state","update-state","cljs.core.swap_BANG_","cljs.core/assoc","p1__30228#","webapp.components.headings/h4","re-frame.core/dispatch","webapp.tasks.views.task-details/main","webapp.components.headings/h3","js/decodeURIComponent","cljs.core.doall","iter__4652__auto__","s__30250","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__30252","cljs.core/chunk-buffer","i__30251","cljs.core/-nth","cljs.core/chunk-append","p1__30227#","cljs.core/chunk-cons","cljs.core/chunk","iter__30249","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","param","metadata","G__30254","fexpr__30253","G__30256","fexpr__30255","cljs.core.keyword","webapp.templates.views.template-dynamic-form/dynamic-form","webapp.components.divider/main","webapp.components.combobox/main","cljs.core._EQ_","webapp.components.button/primary","cljs.core/chunk-first"],"sourcesContent":["(ns webapp.templates.views.template-view\n  (:require\n   [re-frame.core :as rf]\n   [reagent.core :as r]\n   [webapp.http.runops-api :as runops-api]\n   [webapp.components.combobox :as combobox]\n   [webapp.components.divider :as divider]\n   [webapp.components.button :as button]\n   [webapp.components.headings :as h]\n   [webapp.tasks.views.task-details :as task-details]\n   [webapp.templates.events]\n   [webapp.templates.views.template-dynamic-form :as template]))\n\n(defmulti template-view identity)\n(defmethod template-view :ready [_]\n  (let [template (rf/subscribe [:templates->selected-template])\n        connection-filters (-> @template :template :metadata :runops_configs :filters :connections)\n        connection-filter->name (fn [connections]\n                                  (filter #(some #{(:name %)} (into #{} (:name connection-filters))) connections))\n        connection-filter->type (fn [connections]\n                                  (filter #(some #{(:type %)} #{(:type connection-filters)}) connections))\n        all-connections (r/atom nil)\n        connections-combobox-status (r/atom nil)\n        set-connections (fn [c]\n                          (let [connections (r/atom c)]\n                            (when (:name connection-filters)\n                              (reset! connections (connection-filter->name c)))\n                            (when (:type connection-filters)\n                              (reset! connections (connection-filter->type c)))\n\n                            (reset! all-connections\n                                    (map\n                                     #(into {}\n                                            {:value (:name %)\n                                             :text (str (:name %) \" (\" (:type %) \")\")})\n                                     @connections))\n                            (reset! connections-combobox-status nil)))\n        set-connections-error (fn [e]\n                                (println \"couldn't get all connections\" e)\n                                (reset! connections-combobox-status nil))\n        get-all-connections #(runops-api/request {:method \"GET\"\n                                                  :uri \"/v1/targets?limit=2000&status=active\"\n                                                  :on-success set-connections\n                                                  :on-failure set-connections-error})\n        selected-connection (r/atom \"\")\n        state (r/atom {})\n        update-state #(swap! state assoc %1 %2)]\n    (fn []\n      [:div\n       [:header.mb-regular\n        [h/h4 \"Finish the setup to run your template\" {}]]\n       [:section\n        [:form\n         {:on-submit (fn [e]\n                       (.preventDefault e)\n                       (rf/dispatch [:templates->run-template\n                                     {:name (-> @template :template :name)\n                                      :params @state\n                                      :target @selected-connection\n                                      :modal-body task-details/main}]))}\n         [:header.mb-regular\n          [h/h3 (js/decodeURIComponent (-> @template :template :name))\n           {:class \"text-blue-500\"}]\n          [:span.text-gray-500.text-xs\n           \"Fill the params below for this template\"]]\n         (doall (for [param (-> @template :template :params)\n                      :let [metadata ((keyword param) (-> @template :template :metadata))]]\n                  ^{:key param}\n                  [template/dynamic-form\n                   (:type metadata) {:label param\n                                     :placeholder (:placeholder metadata)\n                                     :value (get @state param)\n                                     :type (:type metadata)\n                                     :pattern (:pattern metadata)\n                                     :required (:required metadata)\n                                     :on-change #(update-state param (-> % .-target .-value))\n                                     :minLength (:minlength metadata)\n                                     :maxLength (:maxlength metadata)\n                                     :min (:min metadata)\n                                     :max (:max metadata)\n                                     :step (:step metadata)\n                                     :helper-text (:description metadata)\n                                     :options (:options metadata)}]))\n         [divider/main]\n         [:section {:class \"mb-regular\"}\n          [:header {:class \"mb-regular\"}\n           [h/h3 \"Connection name\" {}]\n           [:span.text-gray-500.text-xs\n            \"Type the name of the connection you want to run this template\"]]\n          [combobox/main {:options @all-connections\n                          :selected @selected-connection\n                          :label \"Connection\"\n                          :default-value \"Select a connection\"\n                          :loading? (= @connections-combobox-status :loading)\n                          :on-focus (fn []\n                                      (get-all-connections)\n                                      (reset! connections-combobox-status :loading))\n                          :placeholder \"Select a connection\"\n                          :list-classes \"min-w-64\"\n                          :on-change #(reset! selected-connection %)\n                          :name \"select-connection\"}]]\n         [divider/main]\n         [:footer.flex.gap-regular.justify-end\n          [button/primary {:text [:span {:class \"flex gap-small items-center\"}\n                                  [:span \"Run template\"]\n                                  (when (= (-> @template :form-status) :loading)\n                                    [:figure {:class \"w-4\"}\n                                     [:img {:class \"animate-spin\"\n                                            :src \"/icons/icon-loader-circle-white.svg\"}]])]\n                           :disabled (or (= (-> @template :status) :loading)\n                                         (= (-> @template :form-status) :loading))\n                           :type \"submit\"}]]]]])))\n\n(defmethod template-view :loading []\n  [:div {:class \"flex items-center justify-center h-full\"}\n   [:figure {:class \"w-8\"}\n    [:img {:class \"animate-spin\"\n           :src \"/icons/icon-loader-circle.svg\"}]]])\n\n(defmethod template-view :default []\n  [:div {:class \"flex items-center justify-center h-full\"}\n   [:span\n    {:class (str \"text-gray-400 text-xl\")}\n    \"No template selected\"]])\n"]}