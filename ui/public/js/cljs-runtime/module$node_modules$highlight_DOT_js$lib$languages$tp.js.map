{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$tp.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA2KlHD,MAAOC,CAAAA,OAAP,CApKAC,QAAW,CAACC,IAAD,CAAO,CAChB,MAAMC,KAAO,CACXC,UAAW,QADA,CAEXC,MAAO,aAFI,CAGXC,UAAW,CAHA,CAAb,CAKMC,QAAU,CACdH,UAAW,QADG,CAEdC,MAAO,UAFO,CA8GhB,OAAO,CACLG,KAAM,IADD,CAELC,SAAU,CACRC,QAtFaC,0XAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAqFL;AAERC,QAjBaC,4DAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAeL,CAFL,CAMLC,SAAU,CAhHGC,CACbX,UAAW,UADEW,CAEbV,MAAO,0HAFMU,CAIbC,IAAK,KAJQD,CAKbD,SAAU,CACR,MADQ,CAERX,IAFQ,CAGRI,OAHQ,CALGQ,CAgHH,CArGCE,CACXb,UAAW,UADAa,CAEXZ,MAAO,4CAFIY,CAGXD,IAAK,KAHMC,CAIXH,SAAU,CACR,MADQ,CAERX,IAFQ,CAGRD,IAAKgB,CAAAA,iBAHG,CAIRX,OAJQ,CAJCU,CAqGD,CAGR,CACEb,UAAW,SADb,CAEEC,MAAO,4BAFT,CAHQ,CAOR,CAEED,UAAW,SAFb,CAGEC,MAAO,+BAHT,CAPQ;AAYR,CAGED,UAAW,SAHb,CAIEC,MAAO,uDAJT,CAZQ,CAkBR,CAEED,UAAW,QAFb,CAGEC,MAAO,4DAHT,CAIEC,UAAW,CAJb,CAlBQ,CAwBRJ,IAAKiB,CAAAA,OAAL,CAAa,IAAb,CAAmB,MAAnB,CAxBQ,CAyBRjB,IAAKiB,CAAAA,OAAL,CAAa,GAAb,CAAkB,MAAlB,CAzBQ,CA0BRjB,IAAKiB,CAAAA,OAAL,CAAa,OAAb,CAAsB,GAAtB,CA1BQ,CA2BRjB,IAAKgB,CAAAA,iBA3BG,CA4BR,CACEd,UAAW,QADb,CAEEC,MAAO,GAFT,CAGEW,IAAK,GAHP,CA5BQ,CAiCRd,IAAKkB,CAAAA,aAjCG,CAkCR,CACEhB,UAAW,UADb,CAEEC,MAAO,kBAFT,CAlCQ,CANL,CApHS,CAPgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/tp.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$tp\"] = function(global,require,module,exports) {\n/*\nLanguage: TP\nAuthor: Jay Strybis <jay.strybis@gmail.com>\nDescription: FANUC TP programming language (TPP).\n*/\n\nfunction tp(hljs) {\n  const TPID = {\n    className: 'number',\n    begin: '[1-9][0-9]*', /* no leading zeros */\n    relevance: 0\n  };\n  const TPLABEL = {\n    className: 'symbol',\n    begin: ':[^\\\\]]+'\n  };\n  const TPDATA = {\n    className: 'built_in',\n    begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|' +\n    'TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\\\[',\n    end: '\\\\]',\n    contains: [\n      'self',\n      TPID,\n      TPLABEL\n    ]\n  };\n  const TPIO = {\n    className: 'built_in',\n    begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\\\[',\n    end: '\\\\]',\n    contains: [\n      'self',\n      TPID,\n      hljs.QUOTE_STRING_MODE, /* for pos section at bottom */\n      TPLABEL\n    ]\n  };\n\n  const KEYWORDS = [\n    \"ABORT\",\n    \"ACC\",\n    \"ADJUST\",\n    \"AND\",\n    \"AP_LD\",\n    \"BREAK\",\n    \"CALL\",\n    \"CNT\",\n    \"COL\",\n    \"CONDITION\",\n    \"CONFIG\",\n    \"DA\",\n    \"DB\",\n    \"DIV\",\n    \"DETECT\",\n    \"ELSE\",\n    \"END\",\n    \"ENDFOR\",\n    \"ERR_NUM\",\n    \"ERROR_PROG\",\n    \"FINE\",\n    \"FOR\",\n    \"GP\",\n    \"GUARD\",\n    \"INC\",\n    \"IF\",\n    \"JMP\",\n    \"LINEAR_MAX_SPEED\",\n    \"LOCK\",\n    \"MOD\",\n    \"MONITOR\",\n    \"OFFSET\",\n    \"Offset\",\n    \"OR\",\n    \"OVERRIDE\",\n    \"PAUSE\",\n    \"PREG\",\n    \"PTH\",\n    \"RT_LD\",\n    \"RUN\",\n    \"SELECT\",\n    \"SKIP\",\n    \"Skip\",\n    \"TA\",\n    \"TB\",\n    \"TO\",\n    \"TOOL_OFFSET\",\n    \"Tool_Offset\",\n    \"UF\",\n    \"UT\",\n    \"UFRAME_NUM\",\n    \"UTOOL_NUM\",\n    \"UNLOCK\",\n    \"WAIT\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"W\",\n    \"P\",\n    \"R\",\n    \"STRLEN\",\n    \"SUBSTR\",\n    \"FINDSTR\",\n    \"VOFFSET\",\n    \"PROG\",\n    \"ATTR\",\n    \"MN\",\n    \"POS\"\n  ];\n  const LITERALS = [\n    \"ON\",\n    \"OFF\",\n    \"max_speed\",\n    \"LPOS\",\n    \"JPOS\",\n    \"ENABLE\",\n    \"DISABLE\",\n    \"START\",\n    \"STOP\",\n    \"RESET\"\n  ];\n\n  return {\n    name: 'TP',\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERALS\n    },\n    contains: [\n      TPDATA,\n      TPIO,\n      {\n        className: 'keyword',\n        begin: '/(PROG|ATTR|MN|POS|END)\\\\b'\n      },\n      {\n        /* this is for cases like ,CALL */\n        className: 'keyword',\n        begin: '(CALL|RUN|POINT_LOGIC|LBL)\\\\b'\n      },\n      {\n        /* this is for cases like CNT100 where the default lexemes do not\n         * separate the keyword and the number */\n        className: 'keyword',\n        begin: '\\\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'\n      },\n      {\n        /* to catch numbers that do not have a word boundary on the left */\n        className: 'number',\n        begin: '\\\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\\\b',\n        relevance: 0\n      },\n      hljs.COMMENT('//', '[;$]'),\n      hljs.COMMENT('!', '[;$]'),\n      hljs.COMMENT('--eg:', '$'),\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'',\n        end: '\\''\n      },\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'variable',\n        begin: '\\\\$[A-Za-z0-9_]+'\n      }\n    ]\n  };\n}\n\nmodule.exports = tp;\n\n};"],
"names":["shadow$provide","global","require","module","exports","tp","hljs","TPID","className","begin","relevance","TPLABEL","name","keywords","keyword","KEYWORDS","literal","LITERALS","contains","TPDATA","end","TPIO","QUOTE_STRING_MODE","COMMENT","C_NUMBER_MODE"]
}
