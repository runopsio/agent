{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$integrations$node$mongo.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@sentry/tracing/dist/integrations/node/mongo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$integrations$node$mongo\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@sentry/utils\");\nvar OPERATIONS = [\n    'aggregate',\n    'bulkWrite',\n    'countDocuments',\n    'createIndex',\n    'createIndexes',\n    'deleteMany',\n    'deleteOne',\n    'distinct',\n    'drop',\n    'dropIndex',\n    'dropIndexes',\n    'estimatedDocumentCount',\n    'find',\n    'findOne',\n    'findOneAndDelete',\n    'findOneAndReplace',\n    'findOneAndUpdate',\n    'indexes',\n    'indexExists',\n    'indexInformation',\n    'initializeOrderedBulkOp',\n    'insertMany',\n    'insertOne',\n    'isCapped',\n    'mapReduce',\n    'options',\n    'parallelCollectionScan',\n    'rename',\n    'replaceOne',\n    'stats',\n    'updateMany',\n    'updateOne',\n];\n// All of the operations above take `options` and `callback` as their final parameters, but some of them\n// take additional parameters as well. For those operations, this is a map of\n// { <operation name>:  [<names of additional parameters>] }, as a way to know what to call the operation's\n// positional arguments when we add them to the span's `data` object later\nvar OPERATION_SIGNATURES = {\n    // aggregate intentionally not included because `pipeline` arguments are too complex to serialize well\n    // see https://github.com/getsentry/sentry-javascript/pull/3102\n    bulkWrite: ['operations'],\n    countDocuments: ['query'],\n    createIndex: ['fieldOrSpec'],\n    createIndexes: ['indexSpecs'],\n    deleteMany: ['filter'],\n    deleteOne: ['filter'],\n    distinct: ['key', 'query'],\n    dropIndex: ['indexName'],\n    find: ['query'],\n    findOne: ['query'],\n    findOneAndDelete: ['filter'],\n    findOneAndReplace: ['filter', 'replacement'],\n    findOneAndUpdate: ['filter', 'update'],\n    indexExists: ['indexes'],\n    insertMany: ['docs'],\n    insertOne: ['doc'],\n    mapReduce: ['map', 'reduce'],\n    rename: ['newName'],\n    replaceOne: ['filter', 'doc'],\n    updateMany: ['filter', 'update'],\n    updateOne: ['filter', 'update'],\n};\n/** Tracing integration for mongo package */\nvar Mongo = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Mongo(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = Mongo.id;\n        this._operations = Array.isArray(options.operations)\n            ? options.operations\n            : OPERATIONS;\n        this._describeOperations = 'describeOperations' in options ? options.describeOperations : true;\n        this._useMongoose = !!options.useMongoose;\n    }\n    /**\n     * @inheritDoc\n     */\n    Mongo.prototype.setupOnce = function (_, getCurrentHub) {\n        var moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n        var pkg = utils_1.loadModule(moduleName);\n        if (!pkg) {\n            utils_1.logger.error(\"Mongo Integration was unable to require `\" + moduleName + \"` package.\");\n            return;\n        }\n        this._instrumentOperations(pkg.Collection, this._operations, getCurrentHub);\n    };\n    /**\n     * Patches original collection methods\n     */\n    Mongo.prototype._instrumentOperations = function (collection, operations, getCurrentHub) {\n        var _this = this;\n        operations.forEach(function (operation) { return _this._patchOperation(collection, operation, getCurrentHub); });\n    };\n    /**\n     * Patches original collection to utilize our tracing functionality\n     */\n    Mongo.prototype._patchOperation = function (collection, operation, getCurrentHub) {\n        if (!(operation in collection.prototype))\n            return;\n        var getSpanContext = this._getSpanContextFromOperationArguments.bind(this);\n        utils_1.fill(collection.prototype, operation, function (orig) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var _a, _b, _c, _d;\n                var lastArg = args[args.length - 1];\n                var scope = getCurrentHub().getScope();\n                var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n                // Check if the operation was passed a callback. (mapReduce requires a different check, as\n                // its (non-callback) arguments can also be functions.)\n                if (typeof lastArg !== 'function' || (operation === 'mapReduce' && args.length === 2)) {\n                    var span_1 = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild(getSpanContext(this, operation, args));\n                    var maybePromise = orig.call.apply(orig, tslib_1.__spread([this], args));\n                    if (utils_1.isThenable(maybePromise)) {\n                        return maybePromise.then(function (res) {\n                            var _a;\n                            (_a = span_1) === null || _a === void 0 ? void 0 : _a.finish();\n                            return res;\n                        });\n                    }\n                    else {\n                        (_c = span_1) === null || _c === void 0 ? void 0 : _c.finish();\n                        return maybePromise;\n                    }\n                }\n                var span = (_d = parentSpan) === null || _d === void 0 ? void 0 : _d.startChild(getSpanContext(this, operation, args.slice(0, -1)));\n                return orig.call.apply(orig, tslib_1.__spread([this], args.slice(0, -1), [function (err, result) {\n                        var _a;\n                        (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n                        lastArg(err, result);\n                    }]));\n            };\n        });\n    };\n    /**\n     * Form a SpanContext based on the user input to a given operation.\n     */\n    Mongo.prototype._getSpanContextFromOperationArguments = function (collection, operation, args) {\n        var data = {\n            collectionName: collection.collectionName,\n            dbName: collection.dbName,\n            namespace: collection.namespace,\n        };\n        var spanContext = {\n            op: \"db\",\n            description: operation,\n            data: data,\n        };\n        // If the operation takes no arguments besides `options` and `callback`, or if argument\n        // collection is disabled for this operation, just return early.\n        var signature = OPERATION_SIGNATURES[operation];\n        var shouldDescribe = Array.isArray(this._describeOperations)\n            ? this._describeOperations.includes(operation)\n            : this._describeOperations;\n        if (!signature || !shouldDescribe) {\n            return spanContext;\n        }\n        try {\n            // Special case for `mapReduce`, as the only one accepting functions as arguments.\n            if (operation === 'mapReduce') {\n                var _a = tslib_1.__read(args, 2), map = _a[0], reduce = _a[1];\n                data[signature[0]] = typeof map === 'string' ? map : map.name || '<anonymous>';\n                data[signature[1]] = typeof reduce === 'string' ? reduce : reduce.name || '<anonymous>';\n            }\n            else {\n                for (var i = 0; i < signature.length; i++) {\n                    data[signature[i]] = JSON.stringify(args[i]);\n                }\n            }\n        }\n        catch (_oO) {\n            // no-empty\n        }\n        return spanContext;\n    };\n    /**\n     * @inheritDoc\n     */\n    Mongo.id = 'Mongo';\n    return Mongo;\n}());\nexports.Mongo = Mongo;\n//# sourceMappingURL=mongo.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","utils_1","OPERATIONS","OPERATION_SIGNATURES","bulkWrite","countDocuments","createIndex","createIndexes","deleteMany","deleteOne","distinct","dropIndex","find","findOne","findOneAndDelete","findOneAndReplace","findOneAndUpdate","indexExists","insertMany","insertOne","mapReduce","rename","replaceOne","updateMany","updateOne","Mongo","options","name","id","_operations","Array","isArray","operations","_describeOperations","describeOperations","_useMongoose","useMongoose","prototype","setupOnce","Mongo.prototype.setupOnce","_","getCurrentHub","moduleName","pkg","loadModule","_instrumentOperations","Collection","logger","error","Mongo.prototype._instrumentOperations","collection","_this","forEach","operation","_patchOperation","Mongo.prototype._patchOperation","getSpanContext","_getSpanContextFromOperationArguments","bind","fill","orig","args","_i","arguments","length","_a","lastArg","parentSpan","getScope","scope","getSpan","span_1","startChild","maybePromise","call","apply","__spread","isThenable","then","res","finish","span","slice","err","result","Mongo.prototype._getSpanContextFromOperationArguments","data","collectionName","dbName","namespace","spanContext","op","description","signature","shouldDescribe","includes","__read","map","reduce","i","JSON","stringify","_oO"]
}
