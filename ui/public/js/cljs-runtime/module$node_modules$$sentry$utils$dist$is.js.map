{
"version":3,
"file":"module$node_modules$$sentry$utils$dist$is.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@sentry/utils/dist/is.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$utils$dist$is\"] = function(global,require,module,exports) {\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return isInstanceOf(wat, Error);\n    }\n}\nexports.isError = isError;\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\nexports.isErrorEvent = isErrorEvent;\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\nexports.isDOMError = isDOMError;\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\nexports.isDOMException = isDOMException;\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\nexports.isString = isString;\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\nexports.isPrimitive = isPrimitive;\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n    return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\nexports.isEvent = isEvent;\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n    return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\nexports.isElement = isElement;\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\nexports.isThenable = isThenable;\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n    return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\nexports.isSyntheticEvent = isSyntheticEvent;\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n    try {\n        return wat instanceof base;\n    }\n    catch (_e) {\n        return false;\n    }\n}\nexports.isInstanceOf = isInstanceOf;\n//# sourceMappingURL=is.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","isPlainObject","wat","Object","prototype","toString","call","isInstanceOf","base","_e","defineProperty","value","isError","Error","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isEvent","Event","isElement","Element","isRegExp","isThenable","then","isSyntheticEvent"]
}
