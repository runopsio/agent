{"version":3,"sources":["webapp/tasks/views/review_detail.cljs"],"mappings":"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","names":["webapp.tasks.views.review-detail/open-logs","task-id","p1__30833#","re-frame.core/dispatch","js/window","js/webapp","js/webapp.tasks","js/webapp.tasks.views","js/webapp.tasks.views.review-detail","js/webapp.tasks.views.review-detail.logs-area","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__30834","cljs.core/MultiFn","cljs.core.symbol","webapp.tasks.views.review-detail/logs-area","cljs.core/identity","_","logs","webapp.tasks.views.review-detail/copy-clipboard","data-clipboard-target","webapp.tasks.views.review-detail/run-task","task-details","cljs.core._EQ_","webapp.components.button/green","cljs.core.not_EQ_","js/webapp.tasks.views.review-detail.item-view","fexpr__30862","webapp.tasks.views.review-detail/item-view","status","task","clipboard","js/module$node_modules$clipboard$dist$clipboard","webapp.components.headings/h2","webapp.formatters/time-ago","webapp.tasks.views.reviewers/reviewers","or__4253__auto__","webapp.tasks.views.review-detail/review-detail","cljs.core/deref","active-task-details","re_frame.core.subscribe"],"sourcesContent":["(ns webapp.tasks.views.review-detail\n  (:require\n   [re-frame.core :as rf]\n   [\"clipboard\" :as clipboardjs]\n   [webapp.subs :as subs]\n   [webapp.formatters :as formatters]\n   [webapp.tasks.views.reviewers :as reviewers]\n   [webapp.tasks.events :as events]\n   [webapp.components.button :as button]\n   [webapp.components.headings :as h]))\n\n(defn open-logs [task-id]\n  (rf/dispatch [::events/get-task-logs-url task-id #(.focus (.open js/window (:logs_url %) \"_blank\"))]))\n\n(defmulti logs-area identity)\n(defmethod logs-area :success [_ logs] logs)\n(defmethod logs-area :loading [_ _]\n  [:div.flex.gap-small\n   [:span \"loading\"]\n   [:figure.w-4\n    [:img.animate-spin {:src \"/icons/icon-loader-circle.svg\"}]]])\n(defmethod logs-area :failure [_ _] \"There was an error to get the logs for this task\")\n(defmethod logs-area :default [_ _] \"Your logs couldn't be shown\")\n\n(defn copy-clipboard [data-clipboard-target]\n  [:div.copy-to-clipboard.absolute.w-6.h-6.rounded-lg.p-x-small.top-2.right-2.bg-gray-200.cursor-pointer.shadow.box-border.opacity-0.group-hover:opacity-100.transition\n   {:data-clipboard-target data-clipboard-target}\n   [:figure\n    [:img {:src \"/icons/icon-copy.svg\"}]]]\n  )\n\n(defn run-task [task-details]\n  (when (or (= (:status (:task task-details)) \"approved\")\n            (= (:status (:task task-details)) \"pending-review\"))\n    [:section\n     [:div\n      (button/green\n       :small\n       {:text [:span.flex.items-center.justify-center [:span :Run] [:img {:src \"/icons/icon-play-white.svg\"}]]\n        :on-click #(rf/dispatch [:run-task (:id (:task task-details))])\n        :disabled (when (not= (:status (:task task-details)) \"approved\") true)})]]))\n\n(defmulti item-view identity)\n(defmethod item-view :opened [status task-details]\n  (let [task (:task task-details)\n        clipboard (new clipboardjs \".copy-to-clipboard\")]\n    (.on clipboard \"success\" #(rf/dispatch [:show-snackbar {:level :success :text \"Text copied to clipboard\"}]))\n    [:div\n     [:header.flex.mb-regular\n      [:div.flex-grow\n       [h/h2 (str \"Task \" (:id task)) {}]\n       [:span.text-xs.text-gray-400\n        (str (:created task)\n             \" - \"\n             (formatters/time-ago (:created task)) )]]]\n\n     [:section.grid.grid-cols-3\n      [:section.col-span-2\n       [:div\n        [:span.text-sm.text-gray-600.font-light \"Target: \"]\n        [:span.font-semibold.text-sm (:target task)]]\n       [:div\n        [:span.text-sm.text-gray-600.font-light \"Type: \"]\n        [:span.font-semibold.text-sm (:type task)]]\n       [:div\n        [:span.text-sm.text-gray-600.font-light \"User: \"]\n        [:span.font-semibold.text-sm (-> task :task_owner :email)]]]\n\n       (reviewers/reviewers status task :reviews)]\n     [:div.pt-regular\n      [:div.grid.grid-cols-2.pb-regular.gap-large\n       [:section\n        [:div\n         [:span.text-sm.text-gray-800 (or (:description task)\n                                          [:span.text-xs.text-gray-400.italic \"This task has no description\"])]]\n        ]\n       [:section.col-span-2\n        [:header.flex.mb-regular.col-span-2\n         [:span.flex-grow.font-bold  \"Script\" ]]\n        [:section.relative.rounded-lg.bg-gray-100.font-mono.p-regular.text-xs.overflow-auto.max-h-32.whitespace-pre.group\n         (copy-clipboard \"#task-script\")\n         [:span#task-script (:script task)]]]]]]))\n\n(defmethod item-view :default [_]\n  [:div.flex.justify-center.items-center.h-full\n   [:span.text-xl.text-gray-400 \"No task selected\"]])\n\n(defmethod item-view :loading [_ task-details]\n  (item-view :opened task-details))\n\n(defn review-detail []\n  (let [active-task-details @(rf/subscribe [::subs/active-task-to-review])]\n    (item-view\n     (:status active-task-details)\n     active-task-details)))\n\n"]}