{"version":3,"sources":["webapp/tasks/views/new_task/connection_information_tree.cljs"],"mappings":"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","names":["webapp.tasks.views.new-task.connection-information-tree/get-mysql-schema-query","webapp.tasks.views.new-task.connection-information-tree/get-postgres-schema-query","webapp.tasks.views.new-task.connection-information-tree/get-mysql-schema-with-index-query","webapp.tasks.views.new-task.connection-information-tree/get-postgres-schema-with-index-query","webapp.tasks.views.new-task.connection-information-tree/get-mongodb-schema-query","webapp.tasks.views.new-task.connection-information-tree/field-type-tree","type","webapp.tasks.views.new-task.connection-information-tree/indexes-columns-tree","columns","cljs.core.doall","iter__4652__auto__","s__31159","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__31161","cljs.core/chunk-buffer","i__31160","vec__31162","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__31158","cljs.core/chunk-rest","vec__31179","cljs.core/first","cljs.core/cons","cljs.core/rest","number","column","cljs.core.into","cljs.core/sorted-map","s__31170","b__31172","i__31171","vec__31173","iter__31169","vec__31176","s__31183","b__31185","i__31184","vec__31186","iter__31182","vec__31189","column-name","_","webapp.tasks.views.new-task.connection-information-tree/indexes-tree","dropdown-status","reagent.core.atom","indexes","cljs.core/reset!","cljs.core/deref","cljs.core._EQ_","cljs.core.not_EQ_","s__31193","b__31195","i__31194","vec__31196","iter__31192","vec__31199","index","columns-names","webapp.tasks.views.new-task.connection-information-tree/fields-tree","fields","dropdown-columns-status","s__31205","b__31207","i__31206","vec__31209","iter__31204","vec__31212","field","field-type","cljs.core.swap_BANG_","cljs.core/assoc-in","cljs.core.get","cljs.core.map","cljs.core/key","webapp.tasks.views.new-task.connection-information-tree/tables-tree","tables","s__31217","b__31219","i__31218","vec__31220","iter__31216","vec__31223","table","webapp.tasks.views.new-task.connection-information-tree/sql-databases-tree","schema","s__31227","b__31229","i__31228","vec__31230","iter__31226","vec__31233","db","js/webapp","js/webapp.tasks","js/webapp.tasks.views","js/webapp.tasks.views.new-task","js/webapp.tasks.views.new-task.connection-information-tree","js/webapp.tasks.views.new-task.connection-information-tree.db-view","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","fexpr__31238","cljs.core/MultiFn","cljs.core.symbol","webapp.tasks.views.new-task.connection-information-tree/db-view","cljs.core/identity","webapp.tasks.views.new-task.mongodb-schema/main","js/webapp.tasks.views.new-task.connection-information-tree.tree-view-status","fexpr__31240","webapp.tasks.views.new-task.connection-information-tree/tree-view-status","connection","js/webapp.tasks.views.new-task.connection-information-tree.get-database-schema","fexpr__31241","webapp.tasks.views.new-task.connection-information-tree/get-database-schema","re-frame.core/dispatch","webapp.tasks.views.new-task.connection-information-tree/main","database-schema","re_frame.core.subscribe","local-connection","cljs.core/chunk-first"],"sourcesContent":["(ns webapp.tasks.views.new-task.connection-information-tree\n  (:require\n   [reagent.core :as r]\n   [re-frame.core :as rf]\n   [webapp.subs :as subs]\n   [webapp.tasks.views.new-task.mongodb-schema :as mongodb-schema]))\n\n(def ^:private get-mysql-schema-query\n  \"-- Generated by Runops\nSELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, DATA_TYPE, IS_NULLABLE\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE TABLE_SCHEMA NOT IN ('information_schema', 'performance_schema', 'mysql', 'pg_catalog')\nORDER BY TABLE_SCHEMA, TABLE_NAME, ORDINAL_POSITION;\n\")\n\n(def ^:private get-postgres-schema-query\n  \"-- Generated by Runops\nSELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, DATA_TYPE, IS_NULLABLE\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE TABLE_SCHEMA NOT IN ('information_schema', 'performance_schema', 'mysql', 'pg_catalog')\nORDER BY TABLE_SCHEMA, TABLE_NAME, ORDINAL_POSITION;\n\")\n\n(def ^:private get-mysql-schema-with-index-query\n  \"-- Generated by Runops\nSELECT c.TABLE_SCHEMA, c.TABLE_NAME, s.index_name, s.seq_in_index, s.column_name\nFROM INFORMATION_SCHEMA.COLUMNS c\nINNER JOIN INFORMATION_SCHEMA.statistics s\nON c.table_name = s.table_name\nWHERE c.TABLE_SCHEMA NOT IN ('information_schema', 'performance_schema', 'mysql', 'pg_catalog')\nAND c.table_schema = s.table_schema\nORDER BY c.TABLE_SCHEMA, c.TABLE_NAME, c.ORDINAL_POSITION;\")\n\n(def ^:private get-postgres-schema-with-index-query\n  \"-- Generated by Runops\nselect schemaname, tablename, indexname, tablespace, indexdef\nfrom pg_indexes where schemaname = ('public') order by tablename\")\n\n(def ^:private get-mongodb-schema-query\n  \" // Generated by Runops\ndb.getMongo().getDBNames().reduce((acc, current) => {\n  const currentCollections = db.getSiblingDB(current).getCollectionNames();\n  const collectionsWithFields = currentCollections.reduce((accCollection, currCollection) => {\n    accCollection[currCollection] = {};\n    return accCollection;\n  }, {});\n  acc[current] = collectionsWithFields;\n  return acc;\n}, {});\")\n\n(defn- field-type-tree [type]\n  [:div {:class \"pl-regular italic text-gray-600\"}\n   (str \"(\" type \")\")])\n\n(defn- indexes-columns-tree []\n  (fn [columns]\n    [:div {:class \"pl-small\"}\n     (doall\n      (for [[number column] (into (sorted-map) columns)]\n        ^{:key (str number column)}\n        [:div {:class \"flex items-center\"}\n         [:figure {:class \"w-2 flex-shrink-0\"}\n          [:img {:src \"/icons/icon-triangle-right-arrow.svg\"}]]\n         [:span {:class \"text-gray-500 px-1\"}\n          (str number \" -\")]\n         (doall\n          (for [[column-name _] column]\n            ^{:key column-name}\n            [:span {:class \"text-gray-600\"}\n             column-name]))]))]))\n\n(defn- indexes-tree [_]\n  (let [dropdown-status (r/atom :closed)]\n    (fn [indexes]\n      [:div {:class \"pl-small\"}\n       [:div\n        [:div {:class \"flex items-center gap-small\"}\n         [:figure {:class \"w-3 flex-shrink-0\"}\n          [:img {:src \"/icons/icon-folder.svg\"}]]\n         [:span {:class (str \"text-gray-700 hover:underline cursor-pointer \"\n                             \"flex items-center\")\n                 :on-click #(reset! dropdown-status\n                                    (if (= @dropdown-status :open) :closed :open))}\n          \"Indexes\"\n          [:figure {:class \"w-4 flex-shrink-0 opacity-30\"}\n           [:img {:src (if (= @dropdown-status :open)\n                         \"/icons/icon-cheveron-up.svg\"\n                         \"/icons/icon-cheveron-down.svg\")}]]]]]\n       [:div {:class (when (not= @dropdown-status :open)\n                       \"h-0 overflow-hidden\")}\n        (doall\n         (for [[index columns-names] indexes]\n           ^{:key index}\n           [:div {:class \"pl-small\"}\n            [:div {:class \"flex items-center gap-small\"}\n             [:figure {:class \"w-3 flex-shrink-0\"}\n              [:img {:src \"/icons/icon-db-column-index.svg\"}]]\n             [:span {:class \"flex items-center\"}\n              index]]\n            [indexes-columns-tree columns-names]]))]])))\n\n(defn- fields-tree [fields]\n  (let [dropdown-status (r/atom {})\n        dropdown-columns-status (r/atom :closed)]\n    (fn []\n      [:div {:class \"pl-small\"}\n       [:div\n        [:div {:class \"flex items-center gap-small\"}\n         [:figure {:class \"w-3 flex-shrink-0\"}\n          [:img {:src \"/icons/icon-folder.svg\"}]]\n         [:span {:class (str \"text-gray-700 hover:underline cursor-pointer \"\n                             \"flex items-center\")\n                 :on-click #(reset! dropdown-columns-status\n                                    (if (= @dropdown-columns-status :open) :closed :open))}\n          \"Columns\"\n          [:figure {:class \"w-4 flex-shrink-0 opacity-30\"}\n           [:img {:src (if (= @dropdown-columns-status :open)\n                         \"/icons/icon-cheveron-up.svg\"\n                         \"/icons/icon-cheveron-down.svg\")}]]]]]\n       [:div {:class (str \"pl-small\" (when (not= @dropdown-columns-status :open)\n                                       \" h-0 overflow-hidden\"))}\n        (doall\n         (for [[field field-type] fields]\n           ^{:key field}\n           [:div\n            [:div {:class \"flex items-center gap-small\"}\n             [:figure {:class \"w-3 flex-shrink-0\"}\n              [:img {:src \"/icons/icon-field-dark-gray.svg\"}]]\n             [:span {:class (str \"hover:text-blue-500 hover:underline cursor-pointer \"\n                                 \"flex items-center\")\n                     :on-click #(swap! dropdown-status\n                                       assoc-in [field]\n                                       (if (= (get @dropdown-status field) :open) :closed :open))}\n              [:span field]\n              [:figure {:class \"w-4 flex-shrink-0 opacity-30\"}\n               [:img {:src (if (= (get @dropdown-status field) :open)\n                             \"/icons/icon-cheveron-up.svg\"\n                             \"/icons/icon-cheveron-down.svg\")}]]]]\n            [:div {:class (when (not= (get @dropdown-status field) :open)\n                            \"h-0 overflow-hidden\")}\n             [field-type-tree (first (map key field-type))]]]))]])))\n\n(defn- tables-tree []\n  (let [dropdown-status (r/atom {})]\n    (fn [tables indexes]\n      [:div {:class \"pl-small\"}\n       (doall\n        (for [[table fields] tables]\n          ^{:key table}\n          [:div\n           ;; TODO replace this icon with a table icon\n           [:div {:class \"flex items-center gap-small\"}\n            [:figure {:class \"w-3 flex-shrink-0\"}\n             [:img {:src \"/icons/icon-table.svg\"}]]\n            [:span {:class (str \"hover:text-blue-500 hover:underline cursor-pointer \"\n                                \"flex items-center\")\n                    :on-click #(swap! dropdown-status\n                                      assoc-in [table]\n                                      (if (= (get @dropdown-status table) :open) :closed :open))}\n             [:span table]\n             [:figure {:class \"w-4 flex-shrink-0 opacity-30\"}\n              [:img {:src (if (= (get @dropdown-status table) :open)\n                            \"/icons/icon-cheveron-up.svg\"\n                            \"/icons/icon-cheveron-down.svg\")}]]]]\n           [:div {:class (when (not= (get @dropdown-status table) :open)\n                           \"h-0 overflow-hidden\")}\n            [fields-tree (into (sorted-map) fields)]\n            [indexes-tree (into (sorted-map) (get indexes table))]]]))])))\n\n(defn- sql-databases-tree [_]\n  (let [dropdown-status (r/atom {})]\n    (fn [schema indexes]\n      [:div.text-xs\n       (doall\n        (for [[db tables] schema]\n          ^{:key db}\n          [:div\n           [:div {:class \"flex items-center gap-small\"}\n            [:figure {:class \"w-3 flex-shrink-0\"}\n             [:img {:src \"/icons/icon-layers-dark-gray.svg\"}]]\n            [:span {:class (str \"hover:text-blue-500 hover:underline cursor-pointer \"\n                                \"flex items-center\")\n                    :on-click #(swap! dropdown-status\n                                      assoc-in [db]\n                                      (if (= (get @dropdown-status db) :closed) :open :closed))}\n             [:span db]\n             [:figure {:class \"w-4 flex-shrink-0 opacity-30\"}\n              [:img {:src (if (not= (get @dropdown-status db) :closed)\n                            \"/icons/icon-cheveron-up.svg\"\n                            \"/icons/icon-cheveron-down.svg\")}]]]]\n           [:div {:class (when (= (get @dropdown-status db) :closed)\n                           \"h-0 overflow-hidden\")}\n            [tables-tree (into (sorted-map) tables) (into (sorted-map) (get indexes db))]]]))])))\n\n(defmulti ^:private db-view identity)\n(defmethod ^:private db-view :default []\n  [:div {:class \"text-xs text-gray-500\"}\n   \"Couldn't load the schema\"])\n(defmethod ^:private db-view \"postgres\" [_ schema indexes]\n  [sql-databases-tree (into (sorted-map) schema) (into (sorted-map) indexes)])\n(defmethod ^:private db-view \"mysql\" [_ schema indexes]\n  [sql-databases-tree (into (sorted-map) schema) (into (sorted-map) indexes)])\n(defmethod ^:private db-view \"mongodb\" [_ schema]\n  [mongodb-schema/main schema])\n\n(defmulti ^:private tree-view-status identity)\n(defmethod ^:private tree-view-status :loading [_]\n  [:div\n   {:class \"flex gap-small items-center py-regular text-xs text-gray-600\"}\n   [:span {:class \"italic\"}\n    \"Loading schema\"]\n   [:figure {:class \"w-3 flex-shrink-0 animate-spin opacity-60\"}\n    [:img {:src \"/icons/icon-loader-circle.svg\"}]]])\n(defmethod ^:private tree-view-status :default [_ schema indexes connection]\n  [db-view (:type connection) schema indexes])\n\n(defmulti get-database-schema identity)\n(defmethod get-database-schema \"postgres\" [_ connection]\n  (rf/dispatch [:new-task->get-database-schema\n                connection\n                get-postgres-schema-query\n                get-postgres-schema-with-index-query]))\n(defmethod get-database-schema \"mysql\" [_ connection]\n  (rf/dispatch [:new-task->get-database-schema\n                connection\n                get-mysql-schema-query\n                get-mysql-schema-with-index-query]))\n\n(defmethod get-database-schema \"mongodb\" [_ connection]\n  (rf/dispatch [:new-task->get-mongodb-schema\n                connection\n                get-mongodb-schema-query]))\n\n(defn main [connection]\n  (let [database-schema (rf/subscribe [::subs/database-schema])\n        local-connection (r/atom connection)\n        _ (get-database-schema (:type connection) connection)]\n    (fn [connection]\n      (when (not= @local-connection connection)\n        (let [_ (reset! local-connection connection)\n              _ (get-database-schema (:type connection) connection)]))\n      [:div {:class \"\"}\n       [:header {:class \"text-sm font-bold mb-small\"}\n        \"Tables\"]\n       [:div {:class \"overflow-x-auto\"}\n        [tree-view-status\n         (:status @database-schema)\n         (:schema-tree @database-schema)\n         (:indexes-tree @database-schema)\n         connection]]])))\n"]}