{"version":3,"sources":["webapp/connections/views/list_view.cljs"],"mappings":"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","names":["js/webapp","js/webapp.connections","js/webapp.connections.views","js/webapp.connections.views.list-view","js/webapp.connections.views.list-view.item-state","webapp.connections.views.list-view/item-state","reagent.core.atom","webapp.connections.views.list-view/toggle-dropdown-status","item","cljs.core.swap_BANG_","cljs.core/assoc-in","cljs.core/not","cljs.core/deref","cljs.core.get_in","webapp.connections.views.list-view/change-status","re-frame.core/dispatch","webapp.connections.views.connection-change-status/confirm-target-change-status","webapp.connections.views.list-view/item-dropdown","cljs.core._EQ_","webapp.connections.views.list-view/list-item","admin?","review-type","active?","webapp.components.table/row","webapp.components.typography/small","webapp.formatters/list-to-comma-string","webapp.components.popover/right","webapp.connections.views.list-view/main","targets","user","re_frame.core.subscribe","cljs.core/some","cljs.core.partial","cljs.core/=","webapp.components.table/header","webapp.components.table/rows","iter__4652__auto__","s__30915","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__30917","cljs.core/chunk-buffer","i__30916","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__30914","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","target","cljs.core/chunk-first"],"sourcesContent":["(ns webapp.connections.views.list-view\n  (:require\n   [re-frame.core :as rf]\n   [reagent.core :as r]\n   [webapp.formatters :as f]\n   [webapp.subs :as subs]\n   [webapp.components.table :as table]\n   [webapp.components.typography :as typo]\n   [webapp.components.popover :as popover]\n   [webapp.connections.views.connection-change-status :as change-status]))\n\n(defonce item-state (r/atom {}))\n\n;; TODO find a better place to this kind of logic to be placed\n(defn toggle-dropdown-status [item]\n  (swap! item-state assoc-in\n         [(:name item) :dropdown-status]\n         (not (get-in @item-state [(:name item) :dropdown-status]))))\n\n(defn change-status [item]\n  (toggle-dropdown-status item)\n  (rf/dispatch [:open-modal (change-status/confirm-target-change-status (:status item) item)]))\n\n(defn item-dropdown [item]\n  [:ul.text-right\n   [:li.border-b.py-small.px-regular\n    [:a.text-sm\n     {:href (str \"/connections/\" (:name item))\n      :on-click #(toggle-dropdown-status item)}\n     \"Edit\"]]\n   [:li.py-small.px-regular\n    (if  (= \"active\" (:status item))\n      [:a.text-red-600.text-sm\n       {:href \"#\"\n        :on-click #(change-status item)}\n       \"Deactivate\"]\n      [:a.text-green-600.text-sm\n       {:href \"#\"\n        :on-click #(change-status item)}\n       \"Activate\"])]])\n\n(defn list-item\n  [item admin?]\n  (let [review-type (if (= \"team\" (:review_type item)) \"groups\" (:review_type item))\n        active? (= (:status item) \"active\")]\n    (table/row\n     [:div.grid.grid-cols-12\n      [:div {:class (str \"grid grid-cols-11 col-span-11\" (when (not active?) \" opacity-50 italic\"))}\n       [:small {:class \"font-semibold text-gray-700 block col-span-3\"} (:name item) (when (not active?) \" (inactive)\")]\n       (typo/small (:type item) {:class \"text-gray-500 col-span-1\"})\n       (typo/small review-type {:class \"text-gray-500 col-span-1\"})\n       (typo/small (:reviewers item) {:class \"text-gray-500 col-span-2\"})\n       (typo/small\n        (f/list-to-comma-string\n         (:groups item))\n        {:class \"text-gray-500 col-span-1\"})\n       (typo/small (:runner_provider item) {:class \"text-gray-500 col-span-2\"})\n       (typo/small (:tags item) {:class \"text-gray-500 col-span-1\"})]\n      (when admin?\n        [:div.justify-self-end.relative\n         [:figure.w-5.cursor-pointer\n          {:on-click #(swap! item-state assoc-in\n                             [(:name item) :dropdown-status]\n                             (not (get-in @item-state [(:name item) :dropdown-status])))}\n          [:img {:src \"/icons/icon-dots-vertical.svg\"}]]\n         (popover/right {:open (get-in @item-state [(:name item) :dropdown-status])\n                         :component (item-dropdown item)\n                         :on-click-outside #(swap! item-state assoc-in\n                                                   [(:name item) :dropdown-status]\n                                                   false)})])]\n     {:key (:name item)})))\n\n(defn main\n  [targets]\n  (let [user (rf/subscribe [::subs/user])]\n    (fn [targets]\n      (let [admin? (some (partial = \"admin\") (:groups @user))]\n        [:div\n         (table/header\n          [:div.grid.grid-cols-12\n           [:small.col-span-3 \"Name\"]\n           [:small.col-span-1 \"Type\"]\n           [:small.col-span-1 \"Review\"]\n           [:small.col-span-2 \"Reviewers\"]\n           [:small.col-span-1 \"Groups\"]\n           [:small.col-span-2 \"Provider\"]\n           [:small.col-span-1 \"Tags\"]]\n          nil)\n         [table/rows\n          (for [target targets]\n            ^{:key (:name target)}\n            [list-item target admin?])]]))))\n"]}