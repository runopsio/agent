{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$errors.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAsB5GC,QAASA,cAAa,EAAG,CACrB,IAAIC,kBAAoBC,OAAQC,CAAAA,oBAAR,EACpBF,kBAAJ,GACIG,OAAQC,CAAAA,MAAOC,CAAAA,GAAf,CAAmB,yBAAnB,CAA+CC,YAAaC,CAAAA,UAAWC,CAAAA,aAAvE,CAAuF,6BAAvF,CACA,CAAAR,iBAAkBS,CAAAA,SAAlB,CAA4BH,YAAaC,CAAAA,UAAWC,CAAAA,aAApD,CAFJ,CAFqB,CArBzBE,MAAOC,CAAAA,cAAP,CAAsBb,OAAtB,CAA+B,YAA/B,CAA6C,CAAEc,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIT,QAAUP,OAAA,CAAQ,8CAAR,CAAd;AACIU,aAAeV,OAAA,CAAQ,qDAAR,CADnB,CAEIK,QAAUL,OAAA,CAAQ,gDAAR,CAcdE,QAAQe,CAAAA,4BAAR,CAVAA,QAAqC,EAAG,CACpCV,OAAQW,CAAAA,yBAAR,CAAkC,CAC9BC,SAAUhB,aADoB,CAE9BiB,KAAM,OAFwB,CAAlC,CAIAb,QAAQW,CAAAA,yBAAR,CAAkC,CAC9BC,SAAUhB,aADoB,CAE9BiB,KAAM,oBAFwB,CAAlC,CALoC,CARoE;",
"sources":["node_modules/@sentry/tracing/dist/errors.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$errors\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@sentry/utils\");\nvar spanstatus_1 = require(\"./spanstatus\");\nvar utils_2 = require(\"./utils\");\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n    utils_1.addInstrumentationHandler({\n        callback: errorCallback,\n        type: 'error',\n    });\n    utils_1.addInstrumentationHandler({\n        callback: errorCallback,\n        type: 'unhandledrejection',\n    });\n}\nexports.registerErrorInstrumentation = registerErrorInstrumentation;\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n    var activeTransaction = utils_2.getActiveTransaction();\n    if (activeTransaction) {\n        utils_1.logger.log(\"[Tracing] Transaction: \" + spanstatus_1.SpanStatus.InternalError + \" -> Global error occured\");\n        activeTransaction.setStatus(spanstatus_1.SpanStatus.InternalError);\n    }\n}\n//# sourceMappingURL=errors.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","errorCallback","activeTransaction","utils_2","getActiveTransaction","utils_1","logger","log","spanstatus_1","SpanStatus","InternalError","setStatus","Object","defineProperty","value","registerErrorInstrumentation","addInstrumentationHandler","callback","type"]
}
