{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$getVisibilityWatcher.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oFAAA,CAAyG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBjJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,QAAUN,OAAA,CAAQ,8CAAR,CAAd,CACIO,WAAaP,OAAA,CAAQ,0EAAR,CADjB,CAEIQ,gBAAkB,CAAC,CAFvB,CAMIC,aAAeA,QAAS,EAAG,CAE3BF,UAAWG,CAAAA,QAAX,CAAoB,QAAS,CAACC,EAAD,CAAK,CAE9BH,eAAA,CADgBG,EAAGC,CAAAA,SADW,CAAlC,CAGG,CAAA,CAHH,CAF2B,CAO/BV,QAAQW,CAAAA,oBAAR,CAA+BC,QAAS,EAAG,CACjB,CAAtB;AAAIN,eAAJ,GAKIA,eACA,CAhB0D,QAAvD,GAAAF,OAAQS,CAAAA,eAAR,EAA0BC,CAAAA,QAASC,CAAAA,eAAnC,CAAkE,CAAlE,CAAsEC,QAgBzE,CAAAT,YAAA,EANJ,CAQA,OAAO,CACCD,mBAAkB,EAAA,CAClB,MAAOA,gBADW,CADnB,CATgC,CA9BsG;",
"sources":["node_modules/@sentry/tracing/dist/browser/web-vitals/lib/getVisibilityWatcher.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$web_vitals$lib$getVisibilityWatcher\"] = function(global,require,module,exports) {\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@sentry/utils\");\nvar onHidden_1 = require(\"./onHidden\");\nvar firstHiddenTime = -1;\nvar initHiddenTime = function () {\n    return utils_1.getGlobalObject().document.visibilityState === 'hidden' ? 0 : Infinity;\n};\nvar trackChanges = function () {\n    // Update the time if/when the document becomes hidden.\n    onHidden_1.onHidden(function (_a) {\n        var timeStamp = _a.timeStamp;\n        firstHiddenTime = timeStamp;\n    }, true);\n};\nexports.getVisibilityWatcher = function () {\n    if (firstHiddenTime < 0) {\n        // If the document is hidden when this code runs, assume it was hidden\n        // since navigation start. This isn't a perfect heuristic, but it's the\n        // best we can do until an API is available to support querying past\n        // visibilityState.\n        firstHiddenTime = initHiddenTime();\n        trackChanges();\n    }\n    return {\n        get firstHiddenTime() {\n            return firstHiddenTime;\n        },\n    };\n};\n//# sourceMappingURL=getVisibilityWatcher.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils_1","onHidden_1","firstHiddenTime","trackChanges","onHidden","_a","timeStamp","getVisibilityWatcher","exports.getVisibilityWatcher","getGlobalObject","document","visibilityState","Infinity"]
}
