{
"version":3,
"file":"module$node_modules$$sentry$core$dist$request.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@sentry/core/dist/request.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$core$dist$request\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(api) {\n    if (!api.metadata || !api.metadata.sdk) {\n        return;\n    }\n    var _a = api.metadata.sdk, name = _a.name, version = _a.version;\n    return { name: name, version: version };\n}\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n    if (!sdkInfo) {\n        return event;\n    }\n    event.sdk = event.sdk || {};\n    event.sdk.name = event.sdk.name || sdkInfo.name;\n    event.sdk.version = event.sdk.version || sdkInfo.version;\n    event.sdk.integrations = tslib_1.__spread((event.sdk.integrations || []), (sdkInfo.integrations || []));\n    event.sdk.packages = tslib_1.__spread((event.sdk.packages || []), (sdkInfo.packages || []));\n    return event;\n}\n/** Creates a SentryRequest from a Session. */\nfunction sessionToSentryRequest(session, api) {\n    var sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n    var envelopeHeaders = JSON.stringify(tslib_1.__assign(tslib_1.__assign({ sent_at: new Date().toISOString() }, (sdkInfo && { sdk: sdkInfo })), (api.forceEnvelope() && { dsn: api.getDsn().toString() })));\n    // I know this is hacky but we don't want to add `session` to request type since it's never rate limited\n    var type = 'aggregates' in session ? 'sessions' : 'session';\n    var itemHeaders = JSON.stringify({\n        type: type,\n    });\n    return {\n        body: envelopeHeaders + \"\\n\" + itemHeaders + \"\\n\" + JSON.stringify(session),\n        type: type,\n        url: api.getEnvelopeEndpointWithUrlEncodedAuth(),\n    };\n}\nexports.sessionToSentryRequest = sessionToSentryRequest;\n/** Creates a SentryRequest from an event. */\nfunction eventToSentryRequest(event, api) {\n    var sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n    var eventType = event.type || 'event';\n    var useEnvelope = eventType === 'transaction' || api.forceEnvelope();\n    var _a = event.debug_meta || {}, transactionSampling = _a.transactionSampling, metadata = tslib_1.__rest(_a, [\"transactionSampling\"]);\n    var _b = transactionSampling || {}, samplingMethod = _b.method, sampleRate = _b.rate;\n    if (Object.keys(metadata).length === 0) {\n        delete event.debug_meta;\n    }\n    else {\n        event.debug_meta = metadata;\n    }\n    var req = {\n        body: JSON.stringify(sdkInfo ? enhanceEventWithSdkInfo(event, api.metadata.sdk) : event),\n        type: eventType,\n        url: useEnvelope ? api.getEnvelopeEndpointWithUrlEncodedAuth() : api.getStoreEndpointWithUrlEncodedAuth(),\n    };\n    // https://develop.sentry.dev/sdk/envelopes/\n    // Since we don't need to manipulate envelopes nor store them, there is no\n    // exported concept of an Envelope with operations including serialization and\n    // deserialization. Instead, we only implement a minimal subset of the spec to\n    // serialize events inline here.\n    if (useEnvelope) {\n        var envelopeHeaders = JSON.stringify(tslib_1.__assign(tslib_1.__assign({ event_id: event.event_id, sent_at: new Date().toISOString() }, (sdkInfo && { sdk: sdkInfo })), (api.forceEnvelope() && { dsn: api.getDsn().toString() })));\n        var itemHeaders = JSON.stringify({\n            type: eventType,\n            // TODO: Right now, sampleRate may or may not be defined (it won't be in the cases of inheritance and\n            // explicitly-set sampling decisions). Are we good with that?\n            sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n        });\n        // The trailing newline is optional. We intentionally don't send it to avoid\n        // sending unnecessary bytes.\n        //\n        // const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}\\n`;\n        var envelope = envelopeHeaders + \"\\n\" + itemHeaders + \"\\n\" + req.body;\n        req.body = envelope;\n    }\n    return req;\n}\nexports.eventToSentryRequest = eventToSentryRequest;\n//# sourceMappingURL=request.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getSdkMetadataForEnvelopeHeader","api","metadata","sdk","_a","name","version","Object","defineProperty","value","tslib_1","sessionToSentryRequest","session","sdkInfo","envelopeHeaders","JSON","stringify","__assign","sent_at","toISOString","Date","forceEnvelope","dsn","getDsn","toString","type","itemHeaders","body","url","getEnvelopeEndpointWithUrlEncodedAuth","eventToSentryRequest","event","eventType","useEnvelope","debug_meta","transactionSampling","__rest","_b","samplingMethod","method","sampleRate","rate","keys","length","integrations","__spread","packages","req","getStoreEndpointWithUrlEncodedAuth","event_id","sample_rates","id"]
}
