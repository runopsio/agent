{"version":3,"sources":["webapp/components/dialog.cljs"],"mappings":";AAMA,GAAA,QAAAA,mCAAAC,8CAAAC,qDAAAC;AAAA;AAAA,AAAA,kCAAA,iBAAAC,6BAAA,AAAAC,6CAAA,7HAAUS;IAAVR,6BAAA,AAAAD,6CAAA;IAAAE,6BAAA,AAAAF,6CAAA;IAAAG,iCAAA,AAAAH,6CAAA;IAAAI,0BAAA,AAAAC,4CAAA,mCAAA,gEAAA,iBAAAC,eAAA;AAAA,AAAA,QAAAA,6CAAAA,+CAAAA;;AAAA,AAAA,YAAAC,kBAAA,AAAAC,+CAAA,2BAAA,6BAAA,4DAAAJ,wBAAAL,2BAAAE,2BAAAC,2BAAAC,xLAAiBO;;;AACjB,AAAAD,4EAAA,sDAAA,WAAyBE,EAAEC;AAA3B,AAAA,0FAAA,yHAAA,2CAAA,aAAA,aAAA,mFAAA,oLAAA,2CAAA,cAAA,OAAA,6DAAA;AAAA,AAKgB,8BAAA,mFAAA,1GAACC;mBALjB,mFAAA,qGAAA,2CAAA,wDAAA,8EAAA,mFAAA,uQAAA,mFAAA,vNAUK,AAAA,oFAAOD,eACR,AAACE,wOAEA,mCAAA,2CAAA,sDAAA,SAAA,6DAAA,1MAACC;AAAD,AAC8B,8BAAA,mFAAA,1GAACF;YAC/B,iCAAA,2CAAA,sDAAA,UAAA,5IAACG,yMAC0B;AAAA,AACE,IAAAC,qBAAC,AAAA,+FAAaL;AAAd,AAAA,CAAAK,mDAAAA,qDAAAA;;AACA,8BAAA,mFAAA,1GAACJ;;;AAEnC,AAAAJ,4EAAA,4DAAA,WAA4BE;AAA5B,AAAA;;AAEA,kCAAA,lCAAMO;AAAN,AAEE,mBAAA,AAAAC,fAAMC,+BAAc,sDAAA,mFAAA,zIAACC;AAArB,AACE,OAACZ,8DAAO,AAAA,wFAASW,cAAcA","names":["js/webapp","js/webapp.components","js/webapp.components.dialog","js/webapp.components.dialog.markup","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__52202","cljs.core/MultiFn","cljs.core.symbol","webapp.components.dialog/markup","cljs.core/identity","_","state","re-frame.core/dispatch","webapp.components.divider/main","webapp.components.button/secondary","webapp.components.button/primary","fexpr__52203","webapp.components.dialog/dialog","cljs.core/deref","dialog-state","re_frame.core.subscribe"],"sourcesContent":["(ns webapp.components.dialog\n  (:require\n   [re-frame.core :as rf]\n   [webapp.components.button :as button]\n   [webapp.components.divider :as divider]))\n\n(defmulti markup identity)\n(defmethod markup :open [_ state]\n  [:div.fixed.z-30.inset-0.overflow-y-auto\n   {\"aria-modal\" true}\n   [:div.fixed.w-full.h-full.inset-0.bg-gray-100.bg-opacity-90.transition\n    {\"aria-hidden\" \"true\"\n     :on-click #(rf/dispatch [:close-dialog])}]\n   [:div.relative.max-w-lg.w-full\n    {:class \"bg-white border-2 rounded\n               mx-auto top-1/3 p-regular\"}\n    [:span.block.font-bold.mb-regular.text-center\n     (:text state)]\n    (divider/main)\n    [:footer.grid.grid-cols-2.gap-regular\n     (button/secondary {:text \"Cancel\"\n                        :on-click #(rf/dispatch [:close-dialog])})\n     (button/primary {:text \"Confirm\"\n                      :on-click (fn []\n                                  ((:on-success state))\n                                  (rf/dispatch [:close-dialog]))})\n     ]]])\n(defmethod markup :default [_] nil)\n\n(defn dialog\n  []\n  (let [dialog-state @(rf/subscribe [:dialog])]\n    (markup (:status dialog-state) dialog-state)))\n"]}