shadow$provide.module$node_modules$readable_stream$node_modules$safe_buffer$index=function(global,require,module,exports){function copyProps(src,dst){for(var key in src)dst[key]=src[key]}function SafeBuffer(arg,encodingOrOffset,length){return Buffer(arg,encodingOrOffset,length)}var buffer=require("module$node_modules$buffer$index"),Buffer=buffer.Buffer;Buffer.from&&Buffer.alloc&&Buffer.allocUnsafe&&Buffer.allocUnsafeSlow?module.exports=buffer:(copyProps(buffer,exports),exports.Buffer=SafeBuffer);
copyProps(Buffer,SafeBuffer);SafeBuffer.from=function(arg,encodingOrOffset,length){if("number"===typeof arg)throw new TypeError("Argument must not be a number");return Buffer(arg,encodingOrOffset,length)};SafeBuffer.alloc=function(size,fill,encoding){if("number"!==typeof size)throw new TypeError("Argument must be a number");size=Buffer(size);void 0!==fill?"string"===typeof encoding?size.fill(fill,encoding):size.fill(fill):size.fill(0);return size};SafeBuffer.allocUnsafe=function(size){if("number"!==
typeof size)throw new TypeError("Argument must be a number");return Buffer(size)};SafeBuffer.allocUnsafeSlow=function(size){if("number"!==typeof size)throw new TypeError("Argument must be a number");return buffer.SlowBuffer(size)}}
//# sourceMappingURL=module$node_modules$readable_stream$node_modules$safe_buffer$index.js.map
