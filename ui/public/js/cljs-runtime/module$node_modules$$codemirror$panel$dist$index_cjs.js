shadow$provide.module$node_modules$$codemirror$panel$dist$index_cjs=function(global,require,module,exports){function rm(node){let next=node.nextSibling;node.remove();return next}Object.defineProperty(exports,"__esModule",{value:!0});global=require("module$node_modules$$codemirror$view$dist$index_cjs");require=require("module$node_modules$$codemirror$state$dist$index_cjs");const panelConfig=require.Facet.define({combine(configs){let topContainer,bottomContainer;for(let c of configs)topContainer=topContainer||
c.topContainer,bottomContainer=bottomContainer||c.bottomContainer;return{topContainer,bottomContainer}}}),panelPlugin=global.ViewPlugin.fromClass(class{constructor(view){this.input=view.state.facet(showPanel);this.specs=this.input.filter(s=>s);this.panels=this.specs.map(spec=>spec(view));let conf=view.state.facet(panelConfig);this.top=new PanelGroup(view,!0,conf.topContainer);this.bottom=new PanelGroup(view,!1,conf.bottomContainer);this.top.sync(this.panels.filter(p=>p.top));this.bottom.sync(this.panels.filter(p=>
!p.top));for(let p of this.panels)p.dom.classList.add("cm-panel"),p.mount&&p.mount()}update(update){var conf=update.state.facet(panelConfig);this.top.container!=conf.topContainer&&(this.top.sync([]),this.top=new PanelGroup(update.view,!0,conf.topContainer));this.bottom.container!=conf.bottomContainer&&(this.bottom.sync([]),this.bottom=new PanelGroup(update.view,!1,conf.bottomContainer));this.top.syncClasses();this.bottom.syncClasses();conf=update.state.facet(showPanel);if(conf!=this.input){var specs=
conf.filter(x=>x);conf=[];let top=[],bottom=[],mount=[];for(let spec of specs){var known=this.specs.indexOf(spec);0>known?(known=spec(update.view),mount.push(known)):(known=this.panels[known],known.update&&known.update(update));conf.push(known);(known.top?top:bottom).push(known)}this.specs=specs;this.panels=conf;this.top.sync(top);this.bottom.sync(bottom);for(let p of mount)p.dom.classList.add("cm-panel"),p.mount&&p.mount()}else for(specs of this.panels)specs.update&&specs.update(update)}destroy(){this.top.sync([]);
this.bottom.sync([])}},{provide:global.PluginField.scrollMargins.from(value=>({top:value.top.scrollMargin(),bottom:value.bottom.scrollMargin()}))});class PanelGroup{constructor(view,top,container){this.view=view;this.top=top;this.container=container;this.dom=void 0;this.classes="";this.panels=[];this.syncClasses()}sync(panels){for(let p of this.panels)p.destroy&&0>panels.indexOf(p)&&p.destroy();this.panels=panels;this.syncDOM()}syncDOM(){if(0==this.panels.length)this.dom&&(this.dom.remove(),this.dom=
void 0);else{if(!this.dom){this.dom=document.createElement("div");this.dom.className=this.top?"cm-panels cm-panels-top":"cm-panels cm-panels-bottom";this.dom.style[this.top?"top":"bottom"]="0";var parent=this.container||this.view.dom;parent.insertBefore(this.dom,this.top?parent.firstChild:null)}parent=this.dom.firstChild;for(let panel of this.panels)if(panel.dom.parentNode==this.dom){for(;parent!=panel.dom;)parent=rm(parent);parent=parent.nextSibling}else this.dom.insertBefore(panel.dom,parent);for(;parent;)parent=
rm(parent)}}scrollMargin(){return!this.dom||this.container?0:Math.max(0,this.top?this.dom.getBoundingClientRect().bottom-Math.max(0,this.view.scrollDOM.getBoundingClientRect().top):Math.min(innerHeight,this.view.scrollDOM.getBoundingClientRect().bottom)-this.dom.getBoundingClientRect().top)}syncClasses(){if(this.container&&this.classes!=this.view.themeClasses){for(let cls of this.classes.split(" "))cls&&this.container.classList.remove(cls);for(let cls of(this.classes=this.view.themeClasses).split(" "))cls&&
this.container.classList.add(cls)}}}global=global.EditorView.baseTheme({".cm-panels":{boxSizing:"border-box",position:"sticky",left:0,right:0},"\x26light .cm-panels":{backgroundColor:"#f5f5f5",color:"black"},"\x26light .cm-panels-top":{borderBottom:"1px solid #ddd"},"\x26light .cm-panels-bottom":{borderTop:"1px solid #ddd"},"\x26dark .cm-panels":{backgroundColor:"#333338",color:"white"}});const showPanel=require.Facet.define({enables:[panelPlugin,global]});exports.getPanel=function(view,panel){panel=
(view=view.plugin(panelPlugin))?view.specs.indexOf(panel):-1;return-1<panel?view.panels[panel]:null};exports.panels=function(config){return config?[panelConfig.of(config)]:[]};exports.showPanel=showPanel}
//# sourceMappingURL=module$node_modules$$codemirror$panel$dist$index_cjs.js.map
