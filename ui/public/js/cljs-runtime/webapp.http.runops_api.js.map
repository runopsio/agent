{"version":3,"sources":["webapp/http/runops_api.cljs"],"mappings":";AAKA;;;;;;;;;;;;;iCAAA,yCAAAA,1EAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAA,AAAAE,4CAAAF,eAAA,pEAYWI;UAZX,AAAAF,4CAAAF,eAAA,jEAYkBK;mBAZlB,AAAAH,4CAAAF,eAAA,1EAYsBM;WAZtB,AAAAJ,4CAAAF,eAAA,lEAYmCO;iBAZnC,AAAAL,4CAAAF,eAAA,xEAYwCQ;iBAZxC,AAAAN,4CAAAF,eAAA,xEAYmDS;cAZnD,AAAAP,4CAAAF,eAAA,rEAY8DU;AAZ9D,AAaE,IAAMC,QAAM,qBAAA,rBAAUC;qBAAtB,2CAAA,2DAAA,2CAAA,yDAAA,mBAAA,eAAA,mBAAA,hRACMC,gSAE0C,CAAA,sDAAeF;IACzDD,cAAQ,AAACI,uGAAM,AAAA,yFAAUD,gBAAgBH;AAJ/C,AAKE,mCAAA,2CAAA,8DAAA,2DAAA,hMAACK,8HAAyBX,6DACFG,yEACQ,iBAAAS,mBAAIV;AAAJ,AAAA,oBAAAU;AAAAA;;AAAA;;KAFhC,4EAAA,2EAAA,gIAAA,yDAAA,2CAAA,1TAG8BR,2EACAC,6DACP,CAAKQ,8DAAWZ,8KACFK","names":["p__30608","map__30609","cljs.core/--destructure-map","cljs.core.get","webapp.http.runops-api/request","method","uri","query-params","body","on-success","on-failure","headers","token","js/localStorage","common-headers","cljs.core.merge","webapp.http.request/request","or__4253__auto__","webapp.config/api"],"sourcesContent":["(ns webapp.http.runops-api\n  (:require\n   [webapp.http.request :as request]\n   [webapp.config :as config]))\n\n(defn request\n  \"request abstraction for calling Runops API\n\n  This functions receives one argument with the following keys:\n  :method -> string of a http verb (GET, POST, PUT, DELETE, etc). If nil, defaults to GET\n  :uri -> URI to be called\n  :body -> a clojure map of the body structure\n  :on-sucess -> callback that receives as argument the response payload\n  :on-failure -> callback that has one argument that is the error message to treat 4xx and 5xx status codes. If not provided, a default callback will be called\n  :on-unauthenticated -> a function to be called when the auth fails\n\n  it returns a promise with the response in a clojure map and executes a on-sucess callback\"\n  [{:keys [method uri query-params body on-success on-failure headers]}]\n  (let [token (.getItem js/localStorage \"jwt-token\")\n        common-headers {:headers {:accept \"application/json\"\n                                  \"Content-Type\" \"application/json\"\n                                  \"Authorization\" (str \"Bearer \" token)}}\n        headers (merge (:headers common-headers) headers)]\n    (request/request {:method method\n                      :body body\n                      :query-params (or query-params {})\n                      :on-success on-success\n                      :on-failure on-failure\n                      :url (str config/api uri)\n                      :options {:headers headers}})))\n\n"]}