shadow$provide.module$node_modules$$codemirror$lint$dist$index_cjs=function(global,require,module,exports){function findDiagnostic(diagnostics,diagnostic=null,after=0){let found=null;diagnostics.between(after,1E9,(from,to,{spec})=>{if(!diagnostic||spec.diagnostic==diagnostic)return found=new SelectedDiagnostic(from,to,spec.diagnostic),!1});return found}function maybeEnableLint(state$1,effects){return state$1.field(lintState,!1)?effects:effects.concat(state$jscomp$0.StateEffect.appendConfig.of([lintState,
view$jscomp$0.EditorView.decorations.compute([lintState],state=>{let {selected,panel}=state.field(lintState);return selected&&panel&&selected.from!=selected.to?view$jscomp$0.Decoration.set([activeMark.range(selected.from,selected.to)]):view$jscomp$0.Decoration.none}),tooltip$jscomp$0.hoverTooltip(lintTooltip),baseTheme]))}function setDiagnostics(state,diagnostics){return{effects:maybeEnableLint(state,[setDiagnosticsEffect.of(diagnostics)])}}function lintTooltip(view,pos,side){let {diagnostics}=view.state.field(lintState),
found=[],stackStart=2E8,stackEnd=0;diagnostics.between(pos-(0>side?1:0),pos+(0<side?1:0),(from,to,{spec})=>{pos>=from&&pos<=to&&(from==to||(pos>from||0<side)&&(pos<to||0>side))&&(found.push(spec.diagnostic),stackStart=Math.min(from,stackStart),stackEnd=Math.max(to,stackEnd))});return found.length?{pos:stackStart,end:stackEnd,above:view.state.doc.lineAt(stackStart).to<stackEnd,create(){return{dom:diagnosticsTooltip(view,found)}}}:null}function diagnosticsTooltip(view,diagnostics){return elt__default["default"]("ul",
{class:"cm-tooltip-lint"},diagnostics.map(d=>renderDiagnostic(view,d,!1)))}function assignKeys(actions){let assigned=[];if(actions)a:for(let {name}of actions){for(actions=0;actions<name.length;actions++){let ch=name[actions];if(/[a-zA-Z]/.test(ch)&&!assigned.some(c=>c.toLowerCase()==ch.toLowerCase())){assigned.push(ch);continue a}}assigned.push("")}return assigned}function renderDiagnostic(view,diagnostic,inPanel){var _a;let keys=inPanel?assignKeys(diagnostic.actions):[];return elt__default["default"]("li",
{class:"cm-diagnostic cm-diagnostic-"+diagnostic.severity},elt__default["default"]("span",{class:"cm-diagnosticText"},diagnostic.message),null===(_a=diagnostic.actions)||void 0===_a?void 0:_a.map((action,i)=>{let click=e=>{e.preventDefault();(e=findDiagnostic(view.state.field(lintState).diagnostics,diagnostic))&&action.apply(view,e.from,e.to)},{name}=action,keyIndex=keys[i]?name.indexOf(keys[i]):-1,nameElt=0>keyIndex?name:[name.slice(0,keyIndex),elt__default["default"]("u",name.slice(keyIndex,keyIndex+
1)),name.slice(keyIndex+1)];return elt__default["default"]("button",{type:"button",class:"cm-diagnosticAction",onclick:click,onmousedown:click,"aria-label":` Action: ${name}${0>keyIndex?"":` (access key "${keys[i]})"`}.`},nameElt)}),diagnostic.source&&elt__default["default"]("div",{class:"cm-diagnosticSource"},diagnostic.source))}function svg(content,attrs='viewBox\x3d"0 0 40 40"'){return`url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${attrs}>${encodeURIComponent(content)}</svg>')`}
function underline(color){return svg(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${color}" fill="none" stroke-width=".7"/>`,'width\x3d"6" height\x3d"3"')}function trackHoverOn(view,marker){let mousemove=event=>{let rect=marker.getBoundingClientRect();if(!(event.clientX>rect.left-10&&event.clientX<rect.right+10&&event.clientY>rect.top-10&&event.clientY<rect.bottom+10)){for(event=event.target;event;event=event.parentNode)if(1==event.nodeType&&event.classList.contains("cm-tooltip-lint"))return;
window.removeEventListener("mousemove",mousemove);view.state.field(lintGutterTooltip)&&view.dispatch({effects:setLintGutterTooltip.of(null)})}};window.addEventListener("mousemove",mousemove)}function gutterMarkerMouseOver(view,marker,diagnostics){function hovered(){let line=view.visualLineAtHeight(marker.getBoundingClientRect().top+5);const linePos=view.coordsAtPos(line.from),markerRect=marker.getBoundingClientRect();linePos&&view.dispatch({effects:setLintGutterTooltip.of({pos:line.from,above:!1,
create(){return{dom:diagnosticsTooltip(view,diagnostics),offset:{x:markerRect.left-linePos.left,y:0}}}})});marker.onmouseout=marker.onmousemove=null;trackHoverOn(view,marker)}let hoverTimeout=setTimeout(hovered,600);marker.onmouseout=()=>{clearTimeout(hoverTimeout);marker.onmouseout=marker.onmousemove=null};marker.onmousemove=()=>{clearTimeout(hoverTimeout);hoverTimeout=setTimeout(hovered,600)}}Object.defineProperty(exports,"__esModule",{value:!0});var view$jscomp$0=require("module$node_modules$$codemirror$view$dist$index_cjs"),
state$jscomp$0=require("module$node_modules$$codemirror$state$dist$index_cjs"),tooltip$jscomp$0=require("module$node_modules$$codemirror$tooltip$dist$index_cjs"),panel$jscomp$0=require("module$node_modules$$codemirror$panel$dist$index_cjs");global=require("module$node_modules$$codemirror$gutter$dist$index_cjs");var rangeset=require("module$node_modules$$codemirror$rangeset$dist$index_cjs"),elt__default=(require=require("module$node_modules$crelt$dist$index_cjs"))&&"object"===typeof require&&"default"in
require?require:{"default":require};class SelectedDiagnostic{constructor(from,to,diagnostic){this.from=from;this.to=to;this.diagnostic=diagnostic}}class LintState{constructor(diagnostics,panel,selected){this.diagnostics=diagnostics;this.panel=panel;this.selected=selected}static init(diagnostics,panel,state){diagnostics=view$jscomp$0.Decoration.set(diagnostics.map(d=>d.from==d.to||d.from==d.to-1&&state.doc.lineAt(d.from).to==d.from?view$jscomp$0.Decoration.widget({widget:new DiagnosticWidget(d),diagnostic:d}).range(d.from):
view$jscomp$0.Decoration.mark({attributes:{class:"cm-lintRange cm-lintRange-"+d.severity},diagnostic:d}).range(d.from,d.to)),!0);return new LintState(diagnostics,panel,findDiagnostic(diagnostics))}}const setDiagnosticsEffect=state$jscomp$0.StateEffect.define(),togglePanel=state$jscomp$0.StateEffect.define(),movePanelSelection=state$jscomp$0.StateEffect.define(),lintState=state$jscomp$0.StateField.define({create(){return new LintState(view$jscomp$0.Decoration.none,null,null)},update(value,tr){if(tr.docChanged){let mapped=
value.diagnostics.map(tr.changes);var selected=null;value.selected&&(selected=tr.changes.mapPos(value.selected.from,1),selected=findDiagnostic(mapped,value.selected.diagnostic,selected)||findDiagnostic(mapped,null,selected));value=new LintState(mapped,value.panel,selected)}for(let effect of tr.effects)effect.is(setDiagnosticsEffect)?value=LintState.init(effect.value,value.panel,tr.state):effect.is(togglePanel)?value=new LintState(value.diagnostics,effect.value?LintPanel.open:null,value.selected):
effect.is(movePanelSelection)&&(value=new LintState(value.diagnostics,value.panel,effect.value));return value},provide:f=>[panel$jscomp$0.showPanel.from(f,val=>val.panel),view$jscomp$0.EditorView.decorations.from(f,s=>s.diagnostics)]}),activeMark=view$jscomp$0.Decoration.mark({class:"cm-lintRange cm-lintRange-active"});require=view=>{let field=view.state.field(lintState,!1);field&&field.panel||view.dispatch({effects:maybeEnableLint(view.state,[togglePanel.of(!0)])});(view=panel$jscomp$0.getPanel(view,
LintPanel.open))&&view.dom.querySelector(".cm-panel-lint ul").focus();return!0};const closeLintPanel=view=>{let field=view.state.field(lintState,!1);if(!field||!field.panel)return!1;view.dispatch({effects:togglePanel.of(!1)});return!0};module=view=>{let field=view.state.field(lintState,!1);if(!field)return!1;let sel=view.state.selection.main,next=field.diagnostics.iter(sel.to+1);if(!next.value&&(next=field.diagnostics.iter(0),!next.value||next.from==sel.from&&next.to==sel.to))return!1;view.dispatch({selection:{anchor:next.from,
head:next.to},scrollIntoView:!0});return!0};const lintKeymap=[{key:"Mod-Shift-m",run:require},{key:"F8",run:module}],lintPlugin=view$jscomp$0.ViewPlugin.fromClass(class{constructor(view){this.view=view;this.timeout=-1;this.set=!0;({delay:view}=view.state.facet(lintSource));this.lintTime=Date.now()+view;this.run=this.run.bind(this);this.timeout=setTimeout(this.run,view)}run(){var now=Date.now();if(now<this.lintTime-10)setTimeout(this.run,this.lintTime-now);else{this.set=!1;let {state}=this.view;({sources:now}=
state.facet(lintSource));Promise.all(now.map(source=>Promise.resolve(source(this.view)))).then(annotations=>{var _a,_b;annotations=annotations.reduce((a,b)=>a.concat(b));this.view.state.doc==state.doc&&(annotations.length||(null===(_b=null===(_a=this.view.state.field(lintState,!1))||void 0===_a?void 0:_a.diagnostics)||void 0===_b?0:_b.size))&&this.view.dispatch(setDiagnostics(this.view.state,annotations))},error=>{view$jscomp$0.logException(this.view.state,error)})}}update(update){let source=update.state.facet(lintSource);
if(update.docChanged||source!=update.startState.facet(lintSource))this.lintTime=Date.now()+source.delay,this.set||(this.set=!0,this.timeout=setTimeout(this.run,source.delay))}force(){this.set&&(this.lintTime=Date.now(),this.run())}destroy(){clearTimeout(this.timeout)}}),lintSource=state$jscomp$0.Facet.define({combine(input){return{sources:input.map(i=>i.source),delay:input.length?Math.max(...input.map(i=>i.delay)):750}},enables:lintPlugin});class DiagnosticWidget extends view$jscomp$0.WidgetType{constructor(diagnostic){super();
this.diagnostic=diagnostic}eq(other){return other.diagnostic==this.diagnostic}toDOM(){return elt__default["default"]("span",{class:"cm-lintPoint cm-lintPoint-"+this.diagnostic.severity})}}class PanelItem{constructor(view,diagnostic){this.diagnostic=diagnostic;this.id="item_"+Math.floor(4294967295*Math.random()).toString(16);this.dom=renderDiagnostic(view,diagnostic,!0);this.dom.id=this.id;this.dom.setAttribute("role","option")}}class LintPanel{constructor(view){this.view=view;this.items=[];this.list=
elt__default["default"]("ul",{tabIndex:0,role:"listbox","aria-label":this.view.state.phrase("Diagnostics"),onkeydown:event=>{if(27==event.keyCode)closeLintPanel(this.view),this.view.focus();else if(38==event.keyCode||33==event.keyCode)this.moveSelection((this.selectedIndex-1+this.items.length)%this.items.length);else if(40==event.keyCode||34==event.keyCode)this.moveSelection((this.selectedIndex+1)%this.items.length);else if(36==event.keyCode)this.moveSelection(0);else if(35==event.keyCode)this.moveSelection(this.items.length-
1);else if(13==event.keyCode)this.view.focus();else if(65<=event.keyCode&&90>=event.keyCode&&0<=this.selectedIndex){let {diagnostic}=this.items[this.selectedIndex],keys=assignKeys(diagnostic.actions);for(let i=0;i<keys.length;i++)if(keys[i].toUpperCase().charCodeAt(0)==event.keyCode){let found=findDiagnostic(this.view.state.field(lintState).diagnostics,diagnostic);found&&diagnostic.actions[i].apply(view,found.from,found.to)}}else return;event.preventDefault()},onclick:event=>{for(let i=0;i<this.items.length;i++)this.items[i].dom.contains(event.target)&&
this.moveSelection(i)}});this.dom=elt__default["default"]("div",{class:"cm-panel-lint"},this.list,elt__default["default"]("button",{type:"button",name:"close","aria-label":this.view.state.phrase("close"),onclick:()=>closeLintPanel(this.view)},"×"));this.update()}get selectedIndex(){let selected=this.view.state.field(lintState).selected;if(!selected)return-1;for(let i=0;i<this.items.length;i++)if(this.items[i].diagnostic==selected.diagnostic)return i;return-1}update(){let {diagnostics,selected}=this.view.state.field(lintState),
i=0,needsSync=!1,newSelectedItem=null;for(diagnostics.between(0,this.view.state.doc.length,(_start,_end,{spec})=>{_start=-1;for(_end=i;_end<this.items.length;_end++)if(this.items[_end].diagnostic==spec.diagnostic){_start=_end;break}0>_start?(spec=new PanelItem(this.view,spec.diagnostic),this.items.splice(i,0,spec),needsSync=!0):(spec=this.items[_start],_start>i&&(this.items.splice(i,_start-i),needsSync=!0));selected&&spec.diagnostic==selected.diagnostic?spec.dom.hasAttribute("aria-selected")||(spec.dom.setAttribute("aria-selected",
"true"),newSelectedItem=spec):spec.dom.hasAttribute("aria-selected")&&spec.dom.removeAttribute("aria-selected");i++});i<this.items.length&&!(1==this.items.length&&0>this.items[0].diagnostic.from);)needsSync=!0,this.items.pop();0==this.items.length&&(this.items.push(new PanelItem(this.view,{from:-1,to:-1,severity:"info",message:this.view.state.phrase("No diagnostics")})),needsSync=!0);newSelectedItem?(this.list.setAttribute("aria-activedescendant",newSelectedItem.id),this.view.requestMeasure({key:this,
read:()=>({sel:newSelectedItem.dom.getBoundingClientRect(),panel:this.list.getBoundingClientRect()}),write:({sel,panel})=>{sel.top<panel.top?this.list.scrollTop-=panel.top-sel.top:sel.bottom>panel.bottom&&(this.list.scrollTop+=sel.bottom-panel.bottom)}})):0>this.selectedIndex&&this.list.removeAttribute("aria-activedescendant");needsSync&&this.sync()}sync(){function rm(){let prev=domPos;domPos=prev.nextSibling;prev.remove()}let domPos=this.list.firstChild;for(let item of this.items)if(item.dom.parentNode==
this.list){for(;domPos!=item.dom;)rm();domPos=item.dom.nextSibling}else this.list.insertBefore(item.dom,domPos);for(;domPos;)rm()}moveSelection(selectedIndex){if(!(0>this.selectedIndex)){var field=this.view.state.field(lintState);(selectedIndex=findDiagnostic(field.diagnostics,this.items[selectedIndex].diagnostic))&&this.view.dispatch({selection:{anchor:selectedIndex.from,head:selectedIndex.to},scrollIntoView:!0,effects:movePanelSelection.of(selectedIndex)})}}static open(view){return new LintPanel(view)}}
const baseTheme=view$jscomp$0.EditorView.baseTheme({".cm-diagnostic":{padding:"3px 6px 3px 8px",marginLeft:"-1px",display:"block",whiteSpace:"pre-wrap"},".cm-diagnostic-error":{borderLeft:"5px solid #d11"},".cm-diagnostic-warning":{borderLeft:"5px solid orange"},".cm-diagnostic-info":{borderLeft:"5px solid #999"},".cm-diagnosticAction":{font:"inherit",border:"none",padding:"2px 4px",backgroundColor:"#444",color:"white",borderRadius:"3px",marginLeft:"8px"},".cm-diagnosticSource":{fontSize:"70%",opacity:.7},
".cm-lintRange":{backgroundPosition:"left bottom",backgroundRepeat:"repeat-x",paddingBottom:"0.7px"},".cm-lintRange-error":{backgroundImage:underline("#d11")},".cm-lintRange-warning":{backgroundImage:underline("orange")},".cm-lintRange-info":{backgroundImage:underline("#999")},".cm-lintRange-active":{backgroundColor:"#ffdd9980"},".cm-tooltip-lint":{padding:0,margin:0},".cm-lintPoint":{position:"relative","\x26:after":{content:'""',position:"absolute",bottom:0,left:"-2px",borderLeft:"3px solid transparent",
borderRight:"3px solid transparent",borderBottom:"4px solid #d11"}},".cm-lintPoint-warning":{"\x26:after":{borderBottomColor:"orange"}},".cm-lintPoint-info":{"\x26:after":{borderBottomColor:"#999"}},".cm-panel.cm-panel-lint":{position:"relative","\x26 ul":{maxHeight:"100px",overflowY:"auto","\x26 [aria-selected]":{backgroundColor:"#ddd","\x26 u":{textDecoration:"underline"}},"\x26:focus [aria-selected]":{background_fallback:"#bdf",backgroundColor:"Highlight",color_fallback:"white",color:"HighlightText"},
"\x26 u":{textDecoration:"none"},padding:0,margin:0},"\x26 [name\x3dclose]":{position:"absolute",top:"0",right:"2px",background:"inherit",border:"none",font:"inherit",padding:0,margin:0}}});class LintGutterMarker extends global.GutterMarker{constructor(diagnostics){super();this.diagnostics=diagnostics;this.severity=diagnostics.reduce((max,d)=>{d=d.severity;return"error"==d||"warning"==d&&"info"==max?d:max},"info")}toDOM(view){let elt=document.createElement("div");elt.className="cm-lint-marker cm-lint-marker-"+
this.severity;elt.onmouseover=()=>gutterMarkerMouseOver(view,elt,this.diagnostics);return elt}}const lintGutterExtension=global.gutter({class:"cm-gutter-lint",markers:view=>view.state.field(lintGutterMarkers)}),lintGutterMarkers=state$jscomp$0.StateField.define({create(){return rangeset.RangeSet.empty},update(markers,tr){markers=markers.map(tr.changes);for(let effect of tr.effects)if(effect.is(setDiagnosticsEffect)){var doc=tr.state.doc,diagnostics=effect.value;markers=Object.create(null);for(let diagnostic of diagnostics)diagnostics=
doc.lineAt(diagnostic.from),(markers[diagnostics.from]||(markers[diagnostics.from]=[])).push(diagnostic);doc=[];for(let line in markers)doc.push((new LintGutterMarker(markers[line])).range(+line));markers=rangeset.RangeSet.of(doc,!0)}return markers}}),setLintGutterTooltip=state$jscomp$0.StateEffect.define(),lintGutterTooltip=state$jscomp$0.StateField.define({create(){return null},update(tooltip,tr){tooltip&&tr.docChanged&&(tooltip=Object.assign(Object.assign({},tooltip),{pos:tr.changes.mapPos(tooltip.pos)}));
return tr.effects.reduce((t,e)=>e.is(setLintGutterTooltip)?e.value:t,tooltip)},provide:field=>tooltip$jscomp$0.showTooltip.from(field)}),lintGutterTheme=view$jscomp$0.EditorView.baseTheme({".cm-gutter-lint":{width:"1.4em","\x26 .cm-gutterElement":{padding:"0 .2em",display:"flex",flexDirection:"column",justifyContent:"center"}},".cm-lint-marker":{width:"1em",height:"1em"},".cm-lint-marker-info":{content:svg('\x3cpath fill\x3d"#aaf" stroke\x3d"#77e" stroke-width\x3d"6" stroke-linejoin\x3d"round" d\x3d"M5 5L35 5L35 35L5 35Z"/\x3e')},
".cm-lint-marker-warning":{content:svg('\x3cpath fill\x3d"#fe8" stroke\x3d"#fd7" stroke-width\x3d"6" stroke-linejoin\x3d"round" d\x3d"M20 6L37 35L3 35Z"/\x3e')},".cm-lint-marker-error:before":{content:svg('\x3ccircle cx\x3d"20" cy\x3d"20" r\x3d"15" fill\x3d"#f87" stroke\x3d"#f43" stroke-width\x3d"6"/\x3e')}});exports.closeLintPanel=closeLintPanel;exports.diagnosticCount=function(state){return(state=state.field(lintState,!1))?state.diagnostics.size:0};exports.forceLinting=function(view){(view=view.plugin(lintPlugin))&&
view.force()};exports.lintGutter=function(){return[lintGutterMarkers,lintGutterExtension,lintGutterTheme,lintGutterTooltip]};exports.lintKeymap=lintKeymap;exports.linter=function(source,config={}){var _a;return lintSource.of({source,delay:null!==(_a=config.delay)&&void 0!==_a?_a:750})};exports.nextDiagnostic=module;exports.openLintPanel=require;exports.setDiagnostics=setDiagnostics;exports.setDiagnosticsEffect=setDiagnosticsEffect}
//# sourceMappingURL=module$node_modules$$codemirror$lint$dist$index_cjs.js.map
