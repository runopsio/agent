{"version":3,"sources":["day8/re_frame_10x/fx/debounce.cljs"],"mappings":";AAIA,oCAAA,pCAAMA;AAAN,AAAa,OAAU,KAAAC;;AAEvB,AAAKC,gDAAgB,6CAAA,7CAACC;AAEtB,2DAAA,mEAAAC,9HAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;UAAA,AAAAE,4CAAAF,eAAA,jEAA0CI;YAA1C,AAAAF,4CAAAF,eAAA,nEAA8CK;YAA9C,AAAAH,4CAAAF,eAAA,nEAAoDM;oBAApD,AAAAJ,4CAAAF,eAAA,3EAA0DO;AAA1D,AACE,GAAM,AAACC,6CAAED,cAAc,4CAAA,AAAAE,5CAACP,4DAAKL,+CAAgBO;AAA7C,AAEE,OAACM,sEAAYJ;;AAFf;;;AAIF,+CAAA,uDAAAK,tGAAME;AAAN,AAAA,IAAAD,aAAAD;IAAAC,iBAAA,AAAAX,4BAAAW;eAAAA,XAAyCE;YAAzC,AAAAZ,4CAAAU,eAAA,nEAA8BP;AAA9B,AACE,OAACU,WACC;AAAA,AAAO,OAACZ,yDAA2BW;GACnCT;;AAEJ,oEAAA,pEAACW,0LAEC,0DAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAAjB,4BAAAiB;eAAAA,XAAoDJ;UAApD,AAAAZ,4CAAAgB,eAAA,jEAA+Bd;YAA/B,AAAAF,4CAAAgB,eAAA,nEAAmCZ;YAAnC,AAAAJ,4CAAAgB,eAAA,nEAAyCb;AAAzC,AACE,GAAM,GAAK,0CAAA,xCAAK,gBAAAc,fAAUf,yCAAK,AAACgB,wBAAQd,YAAO,AAACe,yBAAShB;AAAzD,AACE,0GAAA,yGAAA,nNAACiB;;AADH;;AAEA,IAAMC,KAAG,AAAC5B;AAAV,AACE,AAAC6B,mDAAM3B,8CAAgB4B,gBAAM,AAAA,kFAAMX,UAAUS;;AAC7C,OAACV,6CAAe,uDAAA,vDAACa,8CAAMZ,gFAAwBS","names":["day8.re-frame-10x.fx.debounce/now","js/Date","day8.re-frame-10x.fx.debounce/registered-keys","cljs.core.atom","p__37824","map__37825","cljs.core/--destructure-map","cljs.core.get","day8.re-frame-10x.fx.debounce/dispatch-if-not-superceded","key","delay","event","time-received","cljs.core._EQ_","cljs.core/deref","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core/dispatch","p__37828","map__37829","day8.re-frame-10x.fx.debounce/dispatch-later","debounce","js/setTimeout","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core/reg-fx","p__37830","map__37831","cljs.core/Keyword","cljs.core/vector?","cljs.core/integer?","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.core.console","ts","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core.assoc"],"sourcesContent":["(ns day8.re-frame-10x.fx.debounce\n  (:require\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core :as rf]))\n\n(defn now [] (.getTime (js/Date.)))\n\n(def registered-keys (atom nil))\n\n(defn dispatch-if-not-superceded [{:keys [key delay event time-received]}]\n  (when (= time-received (get @registered-keys key))\n    ;; no new events on this key!\n    (rf/dispatch event)))\n\n(defn dispatch-later [{:keys [delay] :as debounce}]\n  (js/setTimeout\n    (fn [] (dispatch-if-not-superceded debounce))\n    delay))\n\n(rf/reg-fx\n  ::dispatch\n  (fn dispatch-debounce [{:keys [key event delay] :as debounce}]\n    (when (not (and (keyword? key) (vector? event) (integer? delay)))\n      (rf/console :error \"re-frame-10x ::debounce/dispatch invalid argument\"))\n    (let [ts (now)]\n      (swap! registered-keys assoc (:key debounce) ts)\n      (dispatch-later (assoc debounce :time-received ts)))))"]}