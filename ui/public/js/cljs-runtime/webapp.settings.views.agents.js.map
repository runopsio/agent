{"version":3,"sources":["webapp/settings/views/agents.cljs"],"mappings":";AAKA,yCAAA,zCAAMA,0FACHC;AADH,AAEE,mCAAA,mFAAA,oFAAA,mFAAA,sPAAA,mFAAA,gMAAA,mFAAA,6MAAA,mFAAA,6MAAA,2CAAA,14CAACC,gZAE2C,AAAA,8GAAoBD,gMAClC,AAAA,mFAAOA,gMACP,AAAA,gGAAcA,gMACd,AAAA,wFAASA,qHAChC,AAAA,8GAAoBA;;AAE7B,2CAAA,3CAAME,8FACHC;AADH,AAAA,0FAAA,g3BAAA,7zBAGG,+BAAA,mFAAA,oFAAA,mFAAA,uDAAA,eAAA,mFAAA,uDAAA,eAAA,mFAAA,uDAAA,kBAAA,mFAAA,uDAAA,yBAAA,vzBAACC,g5BAQAC,6BAAW,AAACC,4CAAIP,uCAAUI;;AAE9B,8CAAA,9CAAMI,oGACHJ;AADH,AAAA,0FAAA,iIAAA,mFAGIK,8BAAY,sEAAA,zBAAK,AAACC,gBAAMN,kBAAiB,mCAAA,GAAA,pCAAI,2BAAA,1BAAG,AAACM,gBAAMN;;AAE3D,oCAAA,pCAAMO;AAAN,AACE,IAAMP,SAAO,sDAAA,mFAAA,zIAACQ;IACRC,gBAAc,sDAAA,mFAAA,zIAACD;AADrB,AAEE;AAAA,AACE,oBAAA,AAAAE,gBAAOD;AAAP,AAAqB,uBAAA,mFAAA,1GAACE,+LAAmC,wJAAA,oDAAA,1LAAI,AAAA,qGAAA,AAAAD,gBAAiBD;;AAA9E;;AADF,0FAAA,mDAAA,+HAAA,AAAAC,gCAAA,4HAAA,AAAAA,xMAGIN,4DAAgBJ,mGAChBD,yDAAaC","names":["webapp.settings.views.agents/list-item","item","webapp.components.table/row","webapp.settings.views.agents/agents-list","agents","webapp.components.table/header","webapp.components.table/rows","cljs.core.map","webapp.settings.views.agents/section-header","webapp.components.headings/h2","cljs.core/count","webapp.settings.views.agents/main","re_frame.core.subscribe","feature-flags","cljs.core/deref","re-frame.core/dispatch"],"sourcesContent":["(ns webapp.settings.views.agents\n  (:require [re-frame.core :as rf]\n            [webapp.components.headings :as headings]\n            [webapp.components.table :as table]))\n\n(defn list-item\n  [item]\n  (table/row\n   [:div.grid.grid-cols-4\n    [:small.font-semibold.text-gray-700.block (:subscription_name item)]\n    [:small.block.text-gray-500 (:tags item)]\n    [:small.block.text-gray-500 (:app_version item)]\n    [:small.block.text-gray-500 (:status item)]]\n   {:key (:subscription_name item)}))\n\n(defn agents-list\n  [agents]\n  [:div\n   (table/header\n    [:div.grid.grid-cols-4\n     [:small \"Name\"]\n     [:small \"Tags\"]\n     [:small \"Version\"]\n     [:small \"Status\"]]\n    nil)\n\n   [table/rows (map list-item agents)]])\n\n(defn section-header\n  [agents]\n  [:div.grid.grid-cols-4.items-center.mb-large\n   [headings/h2 (str (count agents) \" Agent\" (if (< (count agents) 2) \"\" \"s\"))]])\n\n(defn main []\n  (let [agents (rf/subscribe [:agents])\n        feature-flags (rf/subscribe [:feature-flags])]\n    (fn []\n      (when @feature-flags (rf/dispatch [:settings->get-agents (if (:agents-events @feature-flags) :new :vintage)]) )\n      [:div\n       [section-header @agents]\n       [agents-list @agents]])))\n\n"]}