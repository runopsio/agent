{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$wren.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/wren.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$wren\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: Wren\nDescription: Think Smalltalk in a Lua-sized package with a dash of Erlang and wrapped up in a familiar, modern syntax.\nCategory: scripting\nAuthor: @joshgoebel\nMaintainer: @joshgoebel\nWebsite: https://wren.io/\n*/\n\n/** @type LanguageFn */\nfunction wren(hljs) {\n  const IDENT_RE = /[a-zA-Z]\\w*/;\n  const KEYWORDS = [\n    \"as\",\n    \"break\",\n    \"class\",\n    \"construct\",\n    \"continue\",\n    \"else\",\n    \"for\",\n    \"foreign\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"is\",\n    \"return\",\n    \"static\",\n    \"var\",\n    \"while\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"null\"\n  ];\n  const LANGUAGE_VARS = [\n    \"this\",\n    \"super\"\n  ];\n  const CORE_CLASSES = [\n    \"Bool\",\n    \"Class\",\n    \"Fiber\",\n    \"Fn\",\n    \"List\",\n    \"Map\",\n    \"Null\",\n    \"Num\",\n    \"Object\",\n    \"Range\",\n    \"Sequence\",\n    \"String\",\n    \"System\"\n  ];\n  const OPERATORS = [\n    \"-\",\n    \"~\",\n    /\\*/,\n    \"%\",\n    /\\.\\.\\./,\n    /\\.\\./,\n    /\\+/,\n    \"<<\", \">>\",\n    \">=\", \"<=\",\n    \"<\", \">\",\n    /\\^/,\n    /!=/,\n    /!/,\n    /\\bis\\b/,\n    \"==\",\n    \"&&\",\n    \"&\",\n    /\\|\\|/,\n    /\\|/,\n    /\\?:/,\n    \"=\"\n  ];\n  const FUNCTION = {\n    relevance: 0,\n    match: concat(/\\b(?!(if|while|for|else|super)\\b)/, IDENT_RE, /(?=\\s*[({])/),\n    className: \"title.function\"\n  };\n  const FUNCTION_DEFINITION = {\n    match: concat(\n      either(\n        concat(/\\b(?!(if|while|for|else|super)\\b)/, IDENT_RE),\n        either(...OPERATORS)\n      ),\n      /(?=\\s*\\([^)]+\\)\\s*\\{)/),\n    className: \"title.function\",\n    starts: {\n      contains: [\n        {\n          begin: /\\(/,\n          end: /\\)/,\n          contains: [\n            {\n              relevance: 0,\n              scope: \"params\",\n              match: IDENT_RE\n            }\n          ]\n        }\n      ]\n    }\n  };\n  const CLASS_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /class\\s+/,\n          IDENT_RE,\n          /\\s+is\\s+/,\n          IDENT_RE\n        ]\n      },\n      {\n        match: [\n          /class\\s+/,\n          IDENT_RE\n        ]\n      }\n    ],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: KEYWORDS\n  };\n\n  const OPERATOR = {\n    relevance: 0,\n    match: either(...OPERATORS),\n    className: \"operator\"\n  };\n\n  const TRIPLE_STRING = {\n    className: \"string\",\n    begin: /\"\"\"/,\n    end: /\"\"\"/\n  };\n\n  const PROPERTY = {\n    className: \"property\",\n    begin: concat(/\\./, lookahead(IDENT_RE)),\n    end: IDENT_RE,\n    excludeBegin: true,\n    relevance: 0\n  };\n\n  const FIELD = {\n    relevance: 0,\n    match: concat(/\\b_/, IDENT_RE),\n    scope: \"variable\"\n  };\n\n  // CamelCase\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: /\\b[A-Z]+[a-z]+([A-Z]+[a-z]+)*/,\n    scope: \"title.class\",\n    keywords: {\n      _: CORE_CLASSES\n    }\n  };\n\n  // TODO: add custom number modes\n  const NUMBER = hljs.C_NUMBER_MODE;\n\n  const SETTER = {\n    match: [\n      IDENT_RE, /\\s*/,\n      /=/, /\\s*/,\n      /\\(/, IDENT_RE, /\\)\\s*\\{/\n    ],\n    scope: {\n      1: \"title.function\",\n      3: \"operator\",\n      6: \"params\"\n    }\n  };\n\n  const COMMENT_DOCS = hljs.COMMENT(\n    /\\/\\*\\*/,\n    /\\*\\//,\n    {\n      contains: [\n        {\n          match: /@[a-z]+/,\n          scope: \"doctag\"\n        },\n        \"self\"\n      ]\n    }\n  );\n  const SUBST = {\n    scope: \"subst\",\n    begin: /%\\(/,\n    end: /\\)/,\n    contains: [\n      NUMBER,\n      CLASS_REFERENCE,\n      FUNCTION,\n      FIELD,\n      OPERATOR\n    ]\n  };\n  const STRING = {\n    scope: \"string\",\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      SUBST,\n      {\n        scope: \"char.escape\",\n        variants: [\n          { match: /\\\\\\\\|\\\\[\"0%abefnrtv]/ },\n          { match: /\\\\x[0-9A-F]{2}/ },\n          { match: /\\\\u[0-9A-F]{4}/ },\n          { match: /\\\\U[0-9A-F]{8}/ }\n        ]\n      }\n    ]\n  };\n  SUBST.contains.push(STRING);\n\n  const ALL_KWS = [...KEYWORDS, ...LANGUAGE_VARS, ...LITERALS];\n  const VARIABLE = {\n    relevance: 0,\n    match: concat(\n      \"\\\\b(?!\",\n      ALL_KWS.join(\"|\"),\n      \"\\\\b)\",\n      /[a-zA-Z_]\\w*(?:[?!]|\\b)/\n    ),\n    className: \"variable\"\n  };\n\n  // TODO: reconsider this in the future\n  const ATTRIBUTE = {\n    // scope: \"meta\",\n    scope: \"comment\",\n    variants: [\n      {\n        begin: [/#!?/, /[A-Za-z_]+(?=\\()/],\n        beginScope: {\n          // 2: \"attr\"\n        },\n        keywords: {\n          literal: LITERALS\n        },\n        contains: [\n          // NUMBER,\n          // VARIABLE\n        ],\n        end: /\\)/\n      },\n      {\n        begin: [/#!?/, /[A-Za-z_]+/],\n        beginScope: {\n          // 2: \"attr\"\n        },\n        end: /$/\n      }\n    ]\n  };\n\n  return {\n    name: \"Wren\",\n    keywords: {\n      keyword: KEYWORDS,\n      \"variable.language\": LANGUAGE_VARS,\n      literal: LITERALS\n    },\n    contains: [\n      ATTRIBUTE,\n      NUMBER,\n      STRING,\n      TRIPLE_STRING,\n      COMMENT_DOCS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      CLASS_REFERENCE,\n      CLASS_DEFINITION,\n      SETTER,\n      FUNCTION_DEFINITION,\n      FUNCTION,\n      OPERATOR,\n      FIELD,\n      PROPERTY,\n      VARIABLE\n    ]\n  };\n}\n\nmodule.exports = wren;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","stripOptionsFromArgs","opts","length","constructor","Object","splice","either","capture","wren","hljs","IDENT_RE","KEYWORDS","LITERALS","LANGUAGE_VARS","OPERATORS","FUNCTION","relevance","match","className","FUNCTION_DEFINITION","starts","contains","begin","end","scope","CLASS_DEFINITION","variants","keywords","OPERATOR","PROPERTY","excludeBegin","FIELD","CLASS_REFERENCE","_","CORE_CLASSES","NUMBER","C_NUMBER_MODE","SETTER","COMMENT_DOCS","COMMENT","SUBST","STRING","push","ALL_KWS","VARIABLE","name","keyword","literal","ATTRIBUTE","beginScope","TRIPLE_STRING","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE"]
}
