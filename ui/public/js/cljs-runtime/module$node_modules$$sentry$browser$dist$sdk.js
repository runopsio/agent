shadow$provide.module$node_modules$$sentry$browser$dist$sdk=function(global,require,module,exports){function startSessionTracking(){if("undefined"===typeof utils_1.getGlobalObject().document)utils_1.logger.warn("Session tracking in non-browser environment with @sentry/browser is not supported.");else{var hub=core_1.getCurrentHub();"function"===typeof hub.startSession&&"function"===typeof hub.captureSession&&(hub.startSession({ignoreDuration:!0}),hub.captureSession(),utils_1.addInstrumentationHandler({callback:function(_a){var from=
_a.from;_a=_a.to;void 0!==from&&from!==_a&&(hub.startSession({ignoreDuration:!0}),hub.captureSession())},type:"history"}))}}Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),core_1=require("module$node_modules$$sentry$core$dist$index"),utils_1=require("module$node_modules$$sentry$utils$dist$index"),client_1=require("module$node_modules$$sentry$browser$dist$client"),helpers_1=require("module$node_modules$$sentry$browser$dist$helpers");global=
require("module$node_modules$$sentry$browser$dist$integrations$index");exports.defaultIntegrations=[new core_1.Integrations.InboundFilters,new core_1.Integrations.FunctionToString,new global.TryCatch,new global.Breadcrumbs,new global.GlobalHandlers,new global.LinkedErrors,new global.Dedupe,new global.UserAgent];exports.init=function(options){void 0===options&&(options={});void 0===options.defaultIntegrations&&(options.defaultIntegrations=exports.defaultIntegrations);if(void 0===options.release){var window_1=
utils_1.getGlobalObject();window_1.SENTRY_RELEASE&&window_1.SENTRY_RELEASE.id&&(options.release=window_1.SENTRY_RELEASE.id)}void 0===options.autoSessionTracking&&(options.autoSessionTracking=!0);void 0===options.sendClientReports&&(options.sendClientReports=!0);core_1.initAndBind(client_1.BrowserClient,options);options.autoSessionTracking&&startSessionTracking()};exports.showReportDialog=function(options){void 0===options&&(options={});var hub=core_1.getCurrentHub(),scope=hub.getScope();scope&&(options.user=
tslib_1.__assign(tslib_1.__assign({},scope.getUser()),options.user));options.eventId||(options.eventId=hub.lastEventId());(hub=hub.getClient())&&hub.showReportDialog(options)};exports.lastEventId=function(){return core_1.getCurrentHub().lastEventId()};exports.forceLoad=function(){};exports.onLoad=function(callback){callback()};exports.flush=function(timeout){var client=core_1.getCurrentHub().getClient();if(client)return client.flush(timeout);utils_1.logger.warn("Cannot flush events. No client defined.");
return utils_1.SyncPromise.resolve(!1)};exports.close=function(timeout){var client=core_1.getCurrentHub().getClient();if(client)return client.close(timeout);utils_1.logger.warn("Cannot flush events and disable SDK. No client defined.");return utils_1.SyncPromise.resolve(!1)};exports.wrap=function(fn){return helpers_1.wrap(fn)()}}
//# sourceMappingURL=module$node_modules$$sentry$browser$dist$sdk.js.map
