shadow$provide.module$node_modules$$sentry$browser$dist$integrations$trycatch=function(global$jscomp$0,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),utils_1=require("module$node_modules$$sentry$utils$dist$index"),helpers_1=require("module$node_modules$$sentry$browser$dist$helpers"),DEFAULT_EVENT_TARGET="EventTarget Window Node ApplicationCache AudioTrackList ChannelMergerNode CryptoOperation EventSource FileReader HTMLUnknownElement IDBDatabase IDBRequest IDBTransaction KeyOperation MediaController MessagePort ModalWindow Notification SVGElementInstance Screen TextTrack TextTrackCue TextTrackList WebSocket WebSocketWorker Worker XMLHttpRequest XMLHttpRequestEventTarget XMLHttpRequestUpload".split(" ");
global$jscomp$0=function(){function TryCatch(options){this.name=TryCatch.id;this._options=tslib_1.__assign({XMLHttpRequest:!0,eventTarget:!0,requestAnimationFrame:!0,setInterval:!0,setTimeout:!0},options)}TryCatch.prototype.setupOnce=function(){var global=utils_1.getGlobalObject();this._options.setTimeout&&utils_1.fill(global,"setTimeout",this._wrapTimeFunction.bind(this));this._options.setInterval&&utils_1.fill(global,"setInterval",this._wrapTimeFunction.bind(this));this._options.requestAnimationFrame&&
utils_1.fill(global,"requestAnimationFrame",this._wrapRAF.bind(this));this._options.XMLHttpRequest&&"XMLHttpRequest"in global&&utils_1.fill(XMLHttpRequest.prototype,"send",this._wrapXHR.bind(this));this._options.eventTarget&&(Array.isArray(this._options.eventTarget)?this._options.eventTarget:DEFAULT_EVENT_TARGET).forEach(this._wrapEventTarget.bind(this))};TryCatch.prototype._wrapTimeFunction=function(original){return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];
args[0]=helpers_1.wrap(args[0],{mechanism:{data:{function:utils_1.getFunctionName(original)},handled:!0,type:"instrument"}});return original.apply(this,args)}};TryCatch.prototype._wrapRAF=function(original){return function(callback){return original.call(this,helpers_1.wrap(callback,{mechanism:{data:{function:"requestAnimationFrame",handler:utils_1.getFunctionName(original)},handled:!0,type:"instrument"}}))}};TryCatch.prototype._wrapEventTarget=function(target){var global=utils_1.getGlobalObject();
(global=global[target]&&global[target].prototype)&&global.hasOwnProperty&&global.hasOwnProperty("addEventListener")&&(utils_1.fill(global,"addEventListener",function(original){return function(eventName,fn,options){try{"function"===typeof fn.handleEvent&&(fn.handleEvent=helpers_1.wrap(fn.handleEvent.bind(fn),{mechanism:{data:{function:"handleEvent",handler:utils_1.getFunctionName(fn),target},handled:!0,type:"instrument"}}))}catch(err){}return original.call(this,eventName,helpers_1.wrap(fn,{mechanism:{data:{function:"addEventListener",
handler:utils_1.getFunctionName(fn),target},handled:!0,type:"instrument"}}),options)}}),utils_1.fill(global,"removeEventListener",function(originalRemoveEventListener){return function(eventName,fn,options){try{var originalEventHandler=null===fn||void 0===fn?void 0:fn.__sentry_wrapped__;originalEventHandler&&originalRemoveEventListener.call(this,eventName,originalEventHandler,options)}catch(e){}return originalRemoveEventListener.call(this,eventName,fn,options)}}))};TryCatch.prototype._wrapXHR=function(originalSend){return function(){for(var args=
[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var xhr=this;["onload","onerror","onprogress","onreadystatechange"].forEach(function(prop){prop in xhr&&"function"===typeof xhr[prop]&&utils_1.fill(xhr,prop,function(original){var wrapOptions={mechanism:{data:{function:prop,handler:utils_1.getFunctionName(original)},handled:!0,type:"instrument"}};original.__sentry_original__&&(wrapOptions.mechanism.data.handler=utils_1.getFunctionName(original.__sentry_original__));return helpers_1.wrap(original,
wrapOptions)})});return originalSend.apply(this,args)}};TryCatch.id="TryCatch";return TryCatch}();exports.TryCatch=global$jscomp$0}
//# sourceMappingURL=module$node_modules$$sentry$browser$dist$integrations$trycatch.js.map
