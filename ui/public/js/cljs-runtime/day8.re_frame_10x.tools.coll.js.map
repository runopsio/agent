{"version":3,"sources":["day8/re_frame_10x/tools/coll.cljs"],"mappings":";AAEA;;;2CAAA,3CAAMA,8FAEHC;AAFH,AAGE,IAAMC,MAAI,AAACC,gBAAMF;AAAjB,AACE,GAAI,SAAA,RAAOC;AAAX;;AAEE,OAACE,4CAAIH,EAAE,OAAA,NAAKC;;;AAElB;;;uDAAA,vDAAMG,sHAEHC,KAAKL;AAFR,AAGE,4DAAA,WAAAM,iBAAAC,jFAACC;AAAD,AAAe,oBAAM,yEAAAD,mCAAAA,3GAACF,qCAAAA,uDAAAA;AAAP,AAAAC;;AAAA;;GAAoBN;;AAErC;;;iDAAA,jDAAMS,0GAEHJ,KAAKL;AAFR,AAGE,OAACU,gBAAM,AAACN,qDAAwBC,KAAKL;;AAEvC;;;6CAAA,7CAAMW,kGAEHC,UAAUC;AAFb,AAGE,sDAAA,WAAAC,1DAACC;AAAD,AAAS,SAAA,sHAAA,rHAAIH,aAAU,AAAA,gFAAAE,yBAAA,AAAA,gFAAAA,qBAAQD;;;AAEjC;;;;;yCAAA,mDAAAG,5FAAMM,0FAIHC;AAJH,AAAA,IAAAN,aAAAD;IAAAE,aAAA,AAAAC,cAAAF;IAAAG,eAAA,AAAAV,gBAAAQ;IAAAA,iBAAA,AAAAG,eAAAH;QAAAE,JAIMI;SAJNN,LAIUO;WAJVR,PAIiBS;AAJjB,AAKE,GAAID;AACF,IAAAE,qBAAiB,AAACE,4CAAiBN,EAAEC;AAArC,AAAA,oBAAAG;AAAA,cAAAA,VAASC;AAAT,AACE,IAAME,SAAO,CAACR,uEAAAA,mFAAAA,dAAUM,+DAAAA,vDAAQH,+DAAAA;AAAhC,AACE,GAAI,AAACN,cAAIW;AACP,OAACC,8CAAMR,EAAEC,EAAEM;;AACX,OAACE,+CAAOT,EAAEC;;;AACdD;;;AACF,OAACS,+CAAOT,EAAEC;;;AAEd;;;iDAAA,jDAAMS,0GAEHV,EAAEE;AAFL,AAGE,OAACS,+CACC,WAAKC,IAAIX;AAAT,AACE,GAAI,AAACY,sBAAMD;AACT,OAAChC,4CAAIgC,IAAIX;;AACT,OAACK,4CAAIM,IAAIX;;GACbD,EACAE","names":["day8.re-frame-10x.tools.coll/last-in-vec","v","num","cljs.core/count","cljs.core.nth","day8.re-frame-10x.tools.coll/find-all-indexes-in-vec","pred","p1__37856#","p2__37855#","cljs.core.keep_indexed","day8.re-frame-10x.tools.coll/find-index-in-vec","cljs.core/first","day8.re-frame-10x.tools.coll/id-between-xf","beginning","ending","p1__37859#","cljs.core.filter","p__37870","vec__37871","seq__37872","cljs.core/seq","first__37873","cljs.core/next","day8.re-frame-10x.tools.coll/dissoc-in","m","k","ks","keys","temp__5751__auto__","nextmap","cljs.core.get","newmap","cljs.core.assoc","cljs.core.dissoc","day8.re-frame-10x.tools.coll/get-in-with-lists","cljs.core.reduce","ret","cljs.core/list?"],"sourcesContent":["(ns day8.re-frame-10x.tools.coll)\n\n(defn last-in-vec\n  \"Get the last element in the vector. Returns nil if v is empty\"\n  [v]\n  (let [num (count v)]\n    (if (zero? num)\n      nil\n      (nth v (dec num)))))\n\n(defn find-all-indexes-in-vec\n  \"Gets the index of all items in vec that match the predicate\"\n  [pred v]\n  (keep-indexed #(when (pred %2) %1) v))\n\n(defn find-index-in-vec\n  \"Gets the index of the first item in vec that matches the predicate\"\n  [pred v]\n  (first (find-all-indexes-in-vec pred v)))\n\n(defn id-between-xf\n  \"Returns a transducer that filters for :id between beginning and ending.\"\n  [beginning ending]\n  (filter #(<= beginning (:id %) ending)))\n\n(defn dissoc-in\n  \"Dissociates an entry from a nested associative structure returning a new\n  nested structure. keys is a sequence of keys. Any empty maps that result\n  will not be present in the new structure.\"\n  [m [k & ks :as keys]]\n  (if ks\n    (if-let [nextmap (clojure.core/get m k)]\n      (let [newmap (dissoc-in nextmap ks)]\n        (if (seq newmap)\n          (assoc m k newmap)\n          (dissoc m k)))\n      m)\n    (dissoc m k)))\n\n(defn get-in-with-lists\n  \"cljs.core/get-in with support for index access of lists.\"\n  [m ks]\n  (reduce\n    (fn [ret k]\n      (if (list? ret)\n        (nth ret k)\n        (get ret k)))\n    m\n    ks))"]}