shadow$provide.module$node_modules$$sentry$utils$dist$supports=function(global$jscomp$0,require,module,exports){function supportsFetch(){if(!("fetch"in global_1.getGlobalObject()))return!1;try{return new Headers,new Request(""),new Response,!0}catch(e){return!1}}function isNativeFetch(func){return func&&/^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(func.toString())}Object.defineProperty(exports,"__esModule",{value:!0});var global_1=require("module$node_modules$$sentry$utils$dist$global"),
logger_1=require("module$node_modules$$sentry$utils$dist$logger");exports.supportsErrorEvent=function(){try{return new ErrorEvent(""),!0}catch(e){return!1}};exports.supportsDOMError=function(){try{return new DOMError(""),!0}catch(e){return!1}};exports.supportsDOMException=function(){try{return new DOMException(""),!0}catch(e){return!1}};exports.supportsFetch=supportsFetch;exports.isNativeFetch=isNativeFetch;exports.supportsNativeFetch=function(){if(!supportsFetch())return!1;var global=global_1.getGlobalObject();
if(isNativeFetch(global.fetch))return!0;var result=!1;if((global=global.document)&&"function"===typeof global.createElement)try{var sandbox=global.createElement("iframe");sandbox.hidden=!0;global.head.appendChild(sandbox);sandbox.contentWindow&&sandbox.contentWindow.fetch&&(result=isNativeFetch(sandbox.contentWindow.fetch));global.head.removeChild(sandbox)}catch(err){logger_1.logger.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ",err)}return result};exports.supportsReportingObserver=
function(){return"ReportingObserver"in global_1.getGlobalObject()};exports.supportsReferrerPolicy=function(){if(!supportsFetch())return!1;try{return new Request("_",{referrerPolicy:"origin"}),!0}catch(e){return!1}};exports.supportsHistory=function(){var global=global_1.getGlobalObject(),chrome=global.chrome;global="history"in global&&!!global.history.pushState&&!!global.history.replaceState;return!(chrome&&chrome.app&&chrome.app.runtime)&&global}}
//# sourceMappingURL=module$node_modules$$sentry$utils$dist$supports.js.map
