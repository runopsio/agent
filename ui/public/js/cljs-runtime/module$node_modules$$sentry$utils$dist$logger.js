shadow$provide.module$node_modules$$sentry$utils$dist$logger=function(global$jscomp$0,require,module,exports){function consoleSandbox(callback){var global=global_1.getGlobalObject();if(!("console"in global))return callback();var originalConsole=global.console,wrappedLevels={};"debug info warn error log assert".split(" ").forEach(function(level){level in global.console&&originalConsole[level].__sentry_original__&&(wrappedLevels[level]=originalConsole[level],originalConsole[level]=originalConsole[level].__sentry_original__)});
callback=callback();Object.keys(wrappedLevels).forEach(function(level){originalConsole[level]=wrappedLevels[level]});return callback}Object.defineProperty(exports,"__esModule",{value:!0});var global_1=require("module$node_modules$$sentry$utils$dist$global");global$jscomp$0=global_1.getGlobalObject();exports.consoleSandbox=consoleSandbox;require=function(){function Logger(){this._enabled=!1}Logger.prototype.disable=function(){this._enabled=!1};Logger.prototype.enable=function(){this._enabled=!0};Logger.prototype.log=
function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];this._enabled&&consoleSandbox(function(){global$jscomp$0.console.log("Sentry Logger [Log]: "+args.join(" "))})};Logger.prototype.warn=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];this._enabled&&consoleSandbox(function(){global$jscomp$0.console.warn("Sentry Logger [Warn]: "+args.join(" "))})};Logger.prototype.error=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];
this._enabled&&consoleSandbox(function(){global$jscomp$0.console.error("Sentry Logger [Error]: "+args.join(" "))})};return Logger}();global$jscomp$0.__SENTRY__=global$jscomp$0.__SENTRY__||{};require=global$jscomp$0.__SENTRY__.logger||(global$jscomp$0.__SENTRY__.logger=new require);exports.logger=require}
//# sourceMappingURL=module$node_modules$$sentry$utils$dist$logger.js.map
