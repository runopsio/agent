{"version":3,"sources":["webapp/targets/views/list_view.cljs"],"mappings":"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","names":["js/webapp","js/webapp.targets","js/webapp.targets.views","js/webapp.targets.views.list-view","js/webapp.targets.views.list-view.item-state","webapp.targets.views.list-view/item-state","reagent.core.atom","webapp.targets.views.list-view/toggle-dropdown-status","item","cljs.core.swap_BANG_","cljs.core/assoc-in","cljs.core/not","cljs.core/deref","cljs.core.get_in","webapp.targets.views.list-view/confirm-target-deactivation","target","webapp.components.headings/h2","webapp.components.divider/main","webapp.components.button/secondary","re-frame.core/dispatch","webapp.components.button/primary","webapp.targets.views.list-view/deactivate","webapp.targets.views.list-view/item-dropdown","webapp.targets.views.list-view/list-item","admin?","review-type","cljs.core._EQ_","cljs.core.println","webapp.components.table/row","webapp.components.typography/small","webapp.formatters/list-to-comma-string","webapp.components.popover/right","webapp.targets.views.list-view/main","targets","user","re_frame.core.subscribe","cljs.core/some","cljs.core.partial","cljs.core/=","webapp.components.table/header","webapp.components.table/rows","iter__4652__auto__","s__30769","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__30771","cljs.core/chunk-buffer","i__30770","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__30768","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core/chunk-first"],"sourcesContent":["(ns webapp.targets.views.list-view\n  (:require\n   [re-frame.core :as rf]\n   [reagent.core :as r]\n   [webapp.formatters :as f]\n   [webapp.subs :as subs]\n   [webapp.components.table :as table]\n   [webapp.components.typography :as typo]\n   [webapp.components.badge :as badge]\n   [webapp.components.popover :as popover]\n   [webapp.components.headings :as headings]\n   [webapp.components.divider :as divider]\n   [webapp.components.button :as button]))\n\n(defonce item-state (r/atom {}))\n\n;; TODO find a better place to this kind of logic to be placed\n(defn toggle-dropdown-status [item]\n  (swap! item-state assoc-in\n         [(:name item) :dropdown-status]\n         (not (get-in @item-state [(:name item) :dropdown-status]))))\n\n\n(defn confirm-target-deactivation\n  [target]\n  [:div\n   [headings/h2 \"Target deactivation\" {:class \"mb-regular\"}]\n   (divider/main)\n   [:p.mb-regular\n    \"Do you really want to deactivate \"\n    [:b (:name target)]\n    \" target?\"]\n   (divider/main)\n   [:div.grid.grid-cols-2.gap-regular\n    (button/secondary {:text \"Cancel\"\n                       :on-click #(rf/dispatch [:close-modal])})\n    (button/primary {:text \"Confirm deactivation\"\n                     :on-click #(rf/dispatch\n                                 [:deactivate-target (:name target)])})]])\n\n(defn deactivate [item]\n  (toggle-dropdown-status item)\n  (rf/dispatch [:open-modal (confirm-target-deactivation item)]))\n\n(defn item-dropdown [item]\n  [:ul.text-right\n   [:li.border-b.py-small.px-regular\n    [:a.text-sm\n     {:href (str \"/targets/\" (:name item))\n      :on-click #(toggle-dropdown-status item)}\n     \"Edit\"]]\n   [:li.py-small.px-regular\n    [:a.text-red-600.text-sm\n     {:href \"#\"\n      :on-click #(deactivate item)}\n     \"Deactivate\"]]])\n\n(defn list-item\n  [item admin?]\n  (let [review-type (if (= \"team\" (:review_type item)) \"groups\" (:review_type item))]\n    (println :admin admin?)\n    (table/row\n     [:div.grid.grid-cols-12\n      [:div.col-span-3\n       [:small.font-semibold.text-gray-700.block (:name item)]\n       [:small.block.text-gray-500 (:email item)]]\n      (typo/small (:type item) {:class \"text-gray-500 col-span-1\"})\n      (typo/small review-type {:class \"text-gray-500 col-span-1\"})\n      (typo/small (:reviewers item) {:class \"text-gray-500 col-span-2\"})\n      (typo/small\n       (f/list-to-comma-string\n          (:groups item))\n       {:class \"text-gray-500 col-span-1\"})\n      (typo/small (:runner_provider item) {:class \"text-gray-500 col-span-2\"})\n      (typo/small (:tags item) {:class \"text-gray-500 col-span-1\"})\n      (when admin?\n        [:div.justify-self-end.relative\n         [:figure.w-5.cursor-pointer\n          {:on-click #(swap! item-state assoc-in\n                             [(:name item) :dropdown-status]\n                             (not (get-in @item-state [(:name item) :dropdown-status])))}\n          [:img {:src \"/icons/icon-dots-vertical.svg\"}]]\n         (popover/right {:open (get-in @item-state [(:name item) :dropdown-status])\n                         :component (item-dropdown item)\n                         :on-click-outside #(swap! item-state assoc-in\n                                                   [(:name item) :dropdown-status]\n                                                   false)})] )]\n     {:key (:name item)})))\n\n(defn main\n  [targets]\n  (let [user (rf/subscribe [::subs/user])]\n    (fn [targets]\n      (let [admin? (some (partial = \"admin\") (:groups @user))]\n        [:div\n         (table/header\n          [:div.grid.grid-cols-12\n           [:small.col-span-3 \"Name\"]\n           [:small.col-span-1 \"Type\"]\n           [:small.col-span-1 \"Review\"]\n           [:small.col-span-2 \"Reviewers\"]\n           [:small.col-span-1 \"Groups\"]\n           [:small.col-span-2 \"Provider\"]\n           [:small.col-span-1 \"Tags\"]]\n          nil)\n         [table/rows\n          (for [target targets]\n            ^{:key (:name target)}\n            [list-item target admin?])]]))))\n"]}