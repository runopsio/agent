{
"version":3,
"file":"module$node_modules$$sentry$utils$dist$path.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@sentry/utils/dist/path.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$utils$dist$path\"] = function(global,require,module,exports) {\n// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://raw.githubusercontent.com/calvinmetcalf/rollup-plugin-node-builtins/master/src/es6/path.js\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** JSDoc */\nfunction normalizeArray(parts, allowAboveRoot) {\n    // if the path tries to go above the root, `up` ends up > 0\n    var up = 0;\n    for (var i = parts.length - 1; i >= 0; i--) {\n        var last = parts[i];\n        if (last === '.') {\n            parts.splice(i, 1);\n        }\n        else if (last === '..') {\n            parts.splice(i, 1);\n            // eslint-disable-next-line no-plusplus\n            up++;\n        }\n        else if (up) {\n            parts.splice(i, 1);\n            // eslint-disable-next-line no-plusplus\n            up--;\n        }\n    }\n    // if the path is allowed to go above the root, restore leading ..s\n    if (allowAboveRoot) {\n        // eslint-disable-next-line no-plusplus\n        for (; up--; up) {\n            parts.unshift('..');\n        }\n    }\n    return parts;\n}\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^/]+?|)(\\.[^./]*|))(?:[/]*)$/;\n/** JSDoc */\nfunction splitPath(filename) {\n    var parts = splitPathRe.exec(filename);\n    return parts ? parts.slice(1) : [];\n}\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nfunction resolve() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n        var path = i >= 0 ? args[i] : '/';\n        // Skip empty entries\n        if (!path) {\n            continue;\n        }\n        resolvedPath = path + \"/\" + resolvedPath;\n        resolvedAbsolute = path.charAt(0) === '/';\n    }\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n    // Normalize the path\n    resolvedPath = normalizeArray(resolvedPath.split('/').filter(function (p) { return !!p; }), !resolvedAbsolute).join('/');\n    return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\nexports.resolve = resolve;\n/** JSDoc */\nfunction trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n        if (arr[start] !== '') {\n            break;\n        }\n    }\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n        if (arr[end] !== '') {\n            break;\n        }\n    }\n    if (start > end) {\n        return [];\n    }\n    return arr.slice(start, end - start + 1);\n}\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nfunction relative(from, to) {\n    /* eslint-disable no-param-reassign */\n    from = resolve(from).substr(1);\n    to = resolve(to).substr(1);\n    /* eslint-enable no-param-reassign */\n    var fromParts = trim(from.split('/'));\n    var toParts = trim(to.split('/'));\n    var length = Math.min(fromParts.length, toParts.length);\n    var samePartsLength = length;\n    for (var i = 0; i < length; i++) {\n        if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n        }\n    }\n    var outputParts = [];\n    for (var i = samePartsLength; i < fromParts.length; i++) {\n        outputParts.push('..');\n    }\n    outputParts = outputParts.concat(toParts.slice(samePartsLength));\n    return outputParts.join('/');\n}\nexports.relative = relative;\n// path.normalize(path)\n// posix version\n/** JSDoc */\nfunction normalizePath(path) {\n    var isPathAbsolute = isAbsolute(path);\n    var trailingSlash = path.substr(-1) === '/';\n    // Normalize the path\n    var normalizedPath = normalizeArray(path.split('/').filter(function (p) { return !!p; }), !isPathAbsolute).join('/');\n    if (!normalizedPath && !isPathAbsolute) {\n        normalizedPath = '.';\n    }\n    if (normalizedPath && trailingSlash) {\n        normalizedPath += '/';\n    }\n    return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\nexports.normalizePath = normalizePath;\n// posix version\n/** JSDoc */\nfunction isAbsolute(path) {\n    return path.charAt(0) === '/';\n}\nexports.isAbsolute = isAbsolute;\n// posix version\n/** JSDoc */\nfunction join() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return normalizePath(args.join('/'));\n}\nexports.join = join;\n/** JSDoc */\nfunction dirname(path) {\n    var result = splitPath(path);\n    var root = result[0];\n    var dir = result[1];\n    if (!root && !dir) {\n        // No dirname whatsoever\n        return '.';\n    }\n    if (dir) {\n        // It has a dirname, strip trailing slash\n        dir = dir.substr(0, dir.length - 1);\n    }\n    return root + dir;\n}\nexports.dirname = dirname;\n/** JSDoc */\nfunction basename(path, ext) {\n    var f = splitPath(path)[2];\n    if (ext && f.substr(ext.length * -1) === ext) {\n        f = f.substr(0, f.length - ext.length);\n    }\n    return f;\n}\nexports.basename = basename;\n//# sourceMappingURL=path.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","splitPath","filename","splitPathRe","exec","slice","resolve","args","_i","arguments","resolvedPath","resolvedAbsolute","path","charAt","split","filter","p","join","trim","arr","start","end","normalizePath","isPathAbsolute","isAbsolute","trailingSlash","substr","normalizedPath","Object","defineProperty","value","relative","from","to","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","dirname","result","root","dir","basename","ext","f"]
}
