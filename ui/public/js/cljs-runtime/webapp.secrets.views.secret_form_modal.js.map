{"version":3,"sources":["webapp/secrets/views/secret_form_modal.cljs"],"mappings":";AAUA,yDAAA,zDAAMA,0HACHC,WAAWC,WAAWC;AADzB,AAGE,GAAA,GAAQ,EAAI,AAACC,uBAAOF,iBAAY,AAACE,uBAAOD;AACtC,oFAAA,2CAAA,+DAAA,vLAACE,mDAAMJ,WAAWK,8GAAWJ,iEAAkBC;;AADjD;;;AAIF,2DAAA,mEAAAI,9HAAMI,uIACiBG,MAAMC;AAD7B,AAAA,IAAAP,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;UAAA,AAAAE,4CAAAF,eAAA,jEACWI;YADX,AAAAF,4CAAAF,eAAA,nEACeK;AADf,AAEE,IAAMG,UAAQ,AAACC,gDAAOL;IAChBM,YAAU,AAACD,gDAAOJ;IAClBM,OAAK,WAAKC,EAAEC;AAAP,AAAU,oFAAA,7EAAChB,mDAAMU,OAAOO,sGAAUR,MAAMM,UAAGC;;AAFtD,AAGE;AAAA,AAAA,0FAAA,iDAAA,iHAAA,2CAAA,2DAAA,4BAAA,+DAAA,WAAAE,1OAEIG;AAFJ,AAG6B,OAACC,sBAAOX,QAAQ,AAAA,AAAAO;GAH7C,0DAAA;AAAA,AAI2B,YAAA,oDAAA,AAAAC,zDAACL,yEAAWH;GAJvC,sDAAA,AAAAQ,yCAAA,iHAAA,2CAAA,2DAAA,4BAAA,+DAAA,WAAAC,tVAKyBT,4GACrBU;AANJ,AAO6B,OAACC,sBAAOT,UAAU,AAAA,AAAAO;GAP/C,0DAAA;AAAA,AAQ2B,YAAA,sDAAA,AAAAD,3DAACL,2EAAaD;GARzC,qDAAA,WAAA,sDAAA,AAAAM,gBAUyBN;;;AAE7B,2DAAA,3DAAMU,8HACHb;AADH,AAEE,OAACc,8CACA,iBAAAC,qBAAA,iFAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBAy5EgD,AAAA0C,sBAAA/C;IAz5EhDM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,YAAA,AAAAK,eAAAN,gBAAAK,vCAAM3B;AAAN,AAAA,AAAA,AAAA6B,uBAAAJ,SAAA,oBAAA,4OAAA,2CAAA,oDACS,4CAAA,AAAAf,5CAACd,4DAAKK,QAAOD,5TAASH,yDAAe,4CAAA,AAAAa,5CAACd,4DAAKK,QAAOD,OAAOA,MAAMC;;AADxE,eAAA,CAAA0B,WAAA;;;;AAAA;;;;;AAAA,OAAAG,qBAAA,AAAAC,gBAAAN,UAAA,AAAAO,uEAAA,AAAAC,qBAAAhB;;AAAA,OAAAa,qBAAA,AAAAC,gBAAAN,UAAA;;;AAAA,YAAA,AAAAS,gBAAAjB,xBAAMjB;AAAN,AAAA,OAAAmC,eAAA,oBAAA,4OAAA,2CAAA,wIAAA,AAAAH,uEAAA,AAAAI,eAAAnB,1KACS,4CAAA,AAAAP,5CAACd,4DAAKK,QAAOD,5TAASH,yDAAe,4CAAA,AAAAa,5CAACd,4DAAKK,QAAOD,OAAOA,MAAMC;;;AADxE;;;;GAAA,KAAA;;AAAA,AAAA,OAAAe,mBAAY,AAACqB,8CAAM,gBAAA,AAAA3B,hBAACc,gCAAOvB;;;AAG9B,2DAAA,3DAAMqC,8HACHC;AADH,wGAKO,AAACK,4CAAI,WAAAC,/JACL,qEAAA,9DAACG,+CAAOC;AADH,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAnD,4BAAAmD;UAAA,AAAAlD,4CAAAkD,eAAA,jEAAahD;YAAb,AAAAF,4CAAAkD,eAAA,nEAAiB/C;AAAjB,AAAA,uDAA2B,AAACgD,gDAAQjD,KAAKC;GAF9C,AAACyC,+CAAO,WAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAA/C,4BAAA+C;UAAA,AAAA9C,4CAAA8C,eAAA,jEAAa5C;YAAb,AAAAF,4CAAA8C,eAAA,nEAAiB3C;AAAjB,AACE,UAAK,EAAI,AAAC4C,4BAAU7C,UAAK,AAAC6C,4BAAU5C;GAF9CwC;;AAMP,8CAAA,9CAAMW;AAAN,AACE,IAAMC,mBAAiB,gDAAA,hDAAChD;IAClBiD,eAAa,gDAAA,hDAACjD;IACdkD,aAAW,gDAAA,hDAAClD;IACZoC,UAAQ,gDAAA,hDAACpC;AAHf,AAIE;AAAA,AAAA,0FAAA,mDAAA,mFAAA,mDAAA,2CAAA,wDAAA,+BAAA,iHAAA,sBAAA,2CAAA,wDAAA,0CAAA,mFAAA,2EAAA,2CAAA,1YAGKsD,ycAEW,WAAKC;AAAL,AACE,AAAiBA;;AACjB,uBAAA,mFAAA,2FAAA,rMAACC,qPACc,gDAAA,AAAAjD,hDAACqC,gEAASI,mBAAkB,AAACb,yDACA,6CAAA,AAAA5B,yBAAA,2CAAA,oDAAA,AAAAA,4BAAA,sDAAA,AAAAA,vPAACkD,6DAAMrB,wHAAec,kFACED;;AACpE,8BAAA,mFAAA,1GAACO;WAXnB,mFAAA,kFAAA,mFAAA,mDAAA,2CAAA,wDAAA,yCAAA,iHAAA,2CAAA,uDAAA,uCAAA,mEAAA,gBAAA,+DAAA,WAAAL,1sBAaK,AAACO,sYAECjD;AAfP,AAiBgC,OAACC,sBAAOsC,iBAAiB,AAAA,AAAAG;GAjBzD,6DAAA,KAAA,sDAAA,AAAA5C,0DAAA,mFAAA,8GAAA,mFAAA,uDAAA,2CAAA,wDAAA,kDAAA,cAAA,mFAAA,uDAAA,2CAAA,wDAAA,kDAAA,kFAAA,iHAAA,2CAAA,+DAAA,WAAA6C,/mCAmB4BJ,u0BAKtB,AAACrC,yDAAkByB,4FAElB3B;AA1BP,AA0BgC,OAACC,sBAAOwC,WAAW,AAAA,AAAAE;GA1BnD,2DAAA,4BAAA,mEAAA,iBAAA,sDAAA,AAAA7C,4CAAA,iHAAA,2CAAA,+DAAA,WAAA8C,lQA6B4BH,+GACrBzC;AA9BP,AA8BgC,OAACC,sBAAOuC,aAAa,AAAA,AAAAI;GA9BrD,2DAAA,4BAAA,mEAAA,mBAAA,qDAAA,WAAA,sDAAA,AAAA9C,sDAAA,mFAAA,zHAkC4B0C,6PAGtB,mCAAA,2CAAA,sDAAA,aAAA,6DAAA,9MAACU;AAAD,AAC8B,AACE,+DAAA,AAAApD,4BAAA,AAAAA,3FAACxB,uDAAgBqD,wBAASc,4BAAYD;;AACtC,mCAAA,nCAACvC,sBAAOuC;;AACR,wCAAA,jCAACvC,sBAAOwC;uKAzC9C,mFAAA,vPAqCM,2DAAA,wEAOD,AAACQ,kOAEA,mCAAA,2CAAA,sDAAA,SAAA,4DAAA,KAAA,6DAAA,3QAACC;AAAD,AAE8B,8BAAA,mFAAA,1GAACH;YAC/B,iCAAA,2CAAA,sDAAA,SAAA,qDAAA,hMAACI","names":["webapp.secrets.views.secret-form-modal/add-new-configs","config-map","config-key","config-value","cljs.core/empty?","cljs.core.swap_BANG_","cljs.core/conj","p__31029","map__31030","cljs.core/--destructure-map","cljs.core.get","webapp.secrets.views.secret-form-modal/config->inputs","key","value","index","config","key-val","reagent.core.atom","value-val","save","k","v","cljs.core/assoc-in","p1__31027#","cljs.core/deref","p1__31028#","webapp.components.forms/input","cljs.core/reset!","webapp.secrets.views.secret-form-modal/config-inputs-for","cljs.core.doall","iter__4652__auto__","s__31032","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__31034","cljs.core/chunk-buffer","i__31033","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__31031","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core.range","webapp.secrets.views.secret-form-modal/remove-empty-keys","configs","cljs.core.filter","p__31043","map__31044","clojure.string/blank?","cljs.core.map","p__31039","map__31040","cljs.core.keyword","cljs.core.reduce","cljs.core/into","webapp.secrets.views.secret-form-modal/form","secret-path-name","secret-value","secret-key","p1__31047#","p1__31048#","p1__31050#","webapp.components.headings/h2","e","re-frame.core/dispatch","cljs.core.conj","webapp.components.divider/main","webapp.components.button/secondary","webapp.components.button/primary","cljs.core/chunk-first"],"sourcesContent":["(ns webapp.secrets.views.secret-form-modal\n  (:require [clojure.string :as cs]\n            [re-frame.core :as rf]\n            [reagent.core :as r]\n            [webapp.events.secrets]\n            [webapp.components.button :as button]\n            [webapp.components.divider :as divider]\n            [webapp.components.forms :as forms]\n            [webapp.components.headings :as h]))\n\n(defn add-new-configs\n  [config-map config-key config-value]\n\n  (if-not (or (empty? config-key) (empty? config-value))\n    (swap! config-map conj {:key config-key :value config-value})\n    nil))\n\n(defn config->inputs\n  [{:keys [key value]} index config]\n  (let [key-val (r/atom key)\n        value-val (r/atom value)\n        save (fn [k v] (swap! config assoc-in [index k] v))]\n    (fn []\n      [:<>\n       [forms/input {:classes \"whitespace-pre overflow-x\"\n                     :on-change #(reset! key-val (-> % .-target .-value))\n                     :on-blur #(save :key @key-val)\n                     :value @key-val}]\n       [forms/input {:classes \"whitespace-pre overflow-x\"\n                     :on-change #(reset! value-val (-> % .-target .-value))\n                     :on-blur #(save :value @value-val)\n                     :type \"password\"\n                     :value @value-val}]])))\n\n(defn config-inputs-for\n  [config]\n  (doall\n   (for [index (range (count @config))]\n     ^{:key (get @config index)} [config->inputs (get @config index) index config])))\n\n(defn remove-empty-keys\n  [configs]\n  (->> configs\n       (filter (fn [{:keys [key value]}]\n                 (not (or (cs/blank? key) (cs/blank? value)))))\n       (map (fn [{:keys [key value]}] {(keyword key) value}))\n       (reduce into {})))\n\n(defn form []\n  (let [secret-path-name (r/atom \"\")\n        secret-value (r/atom \"\")\n        secret-key (r/atom \"\")\n        configs (r/atom [])]\n    (fn []\n      [:div\n       [:div {:class \"flex justify-between\"}\n        [h/h2 \"Create a new secret\" {:class \"mb-4 col-span-2\"}]]\n       [:form.mb-regular\n        {:on-submit (fn [e]\n                      (.preventDefault e)\n                      (rf/dispatch [:secrets->update-secrets\n                                    {(keyword @secret-path-name) (remove-empty-keys\n                                                                  (conj @configs {:key @secret-key\n                                                                                  :value @secret-value}))}])\n                      (rf/dispatch [:close-modal]))}\n        [:<>\n         (divider/main)\n         [:div {:class \"grid grid-cols-2 gap-x-regular\"}\n          [forms/input {:label \"Give a nickname for this secret path\"\n                        :placeholder \"my-mysql-test\"\n                        :on-change #(reset! secret-path-name (-> % .-target .-value))\n                        :required true\n                        :value @secret-path-name}]]\n         [:div.grid.grid-cols-2.gap-regular\n          [:label {:class \"block text-sm font-medium text-gray-700\"} \"Key\"]\n          [:label {:class \"block text-sm font-medium text-gray-700\"} \"Value\"]\n\n          (config-inputs-for configs)\n\n          [forms/input {:on-change #(reset! secret-key (-> % .-target .-value))\n                        :classes \"whitespace-pre overflow-x\"\n                        :placeholder \"Insert key env\"\n                        :value @secret-key}]\n          [forms/input {:on-change #(reset! secret-value (-> % .-target .-value))\n                        :classes \"whitespace-pre overflow-x\"\n                        :placeholder \"Insert value env\"\n                        :type \"password\"\n                        :value @secret-value}]]\n\n         [:div.grid.grid-cols-1.justify-items-end.mb-4\n          (button/secondary {:text \"+ add more\"\n                             :on-click #(do\n                                          (add-new-configs configs @secret-key @secret-value)\n                                          (reset! secret-value \"\")\n                                          (reset! secret-key \"\"))\n                             :variant :small})]\n\n         (divider/main)\n         [:div.grid.grid-cols-2.gap-regular\n          (button/secondary {:text \"Cancel\"\n                             :outlined true\n                             :on-click #(rf/dispatch [:close-modal])})\n          (button/primary {:text \"Create\"\n                           :type \"submit\"})]]]])))\n"]}