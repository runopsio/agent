{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$wasm.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0IpHD,MAAOC,CAAAA,OAAP,CAhIAC,QAAa,CAACC,IAAD,CAAO,CAClB,MAAMC,cAAgBD,IAAKE,CAAAA,OAAL,CAAa,KAAb,CAAoB,KAApB,CACtBD,cAAcE,CAAAA,QAASC,CAAAA,IAAvB,CAA4B,MAA5B,CAyGA,OAAO,CACLC,KAAM,aADD,CAELC,SAAU,CACRC,SAAU,QADF,CAERC,QA1GQC,8UAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAwGA,CAFL;AAMLN,SAAU,CA9GSH,IAAKE,CAAAA,OAALQ,CAAa,IAAbA,CAAmB,GAAnBA,CA8GT,CAERT,aAFQ,CAlBSU,CACnBC,MAAO,CACL,kBADK,CAEL,KAFK,CAGL,GAHK,CADYD,CAMnBE,UAAW,CACT,EAAG,SADM,CAET,EAAG,UAFM,CANQF,CAkBT,CAhDKG,CACfD,UAAW,UADIC,CAEfC,MAAO,UAFQD,CAgDL,CA3CGE,CACbJ,MAAO,eADMI,CAEbH,UAAW,aAFEG,CAGbC,UAAW,CAHED,CA2CH,CA5DeE,CACzBH,MAAO,CACL,6BADK,CAEL,KAFK,CAGL,WAHK,CADkBG,CAMzBL,UAAW,CACT,EAAG,SADM,CAET,EAAG,gBAFM,CANcK,CA4Df,CAORlB,IAAKmB,CAAAA,iBAPG,CA9BCC,CAEXR,MAAO,yBAFIQ,CAGXP,UAAW,MAHAO,CA8BD,CAxBYC,CACtBR,UAAW,SADWQ,CAGtBT,MAAO,mZAHeS,CAwBZ;AArCGC,CACbT,UAAW,QADES,CAEbL,UAAW,CAFEK,CAIbV,MAAO,iNAJMU,CAqCH,CANL,CA3GW,CAVgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/wasm.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$wasm\"] = function(global,require,module,exports) {\n/*\nLanguage: WebAssembly\nWebsite: https://webassembly.org\nDescription:  Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.\nCategory: web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction wasm(hljs) {\n  const BLOCK_COMMENT = hljs.COMMENT(/\\(;/, /;\\)/);\n  BLOCK_COMMENT.contains.push(\"self\");\n  const LINE_COMMENT = hljs.COMMENT(/;;/, /$/);\n\n  const KWS = [\n    \"anyfunc\",\n    \"block\",\n    \"br\",\n    \"br_if\",\n    \"br_table\",\n    \"call\",\n    \"call_indirect\",\n    \"data\",\n    \"drop\",\n    \"elem\",\n    \"else\",\n    \"end\",\n    \"export\",\n    \"func\",\n    \"global.get\",\n    \"global.set\",\n    \"local.get\",\n    \"local.set\",\n    \"local.tee\",\n    \"get_global\",\n    \"get_local\",\n    \"global\",\n    \"if\",\n    \"import\",\n    \"local\",\n    \"loop\",\n    \"memory\",\n    \"memory.grow\",\n    \"memory.size\",\n    \"module\",\n    \"mut\",\n    \"nop\",\n    \"offset\",\n    \"param\",\n    \"result\",\n    \"return\",\n    \"select\",\n    \"set_global\",\n    \"set_local\",\n    \"start\",\n    \"table\",\n    \"tee_local\",\n    \"then\",\n    \"type\",\n    \"unreachable\"\n  ];\n\n  const FUNCTION_REFERENCE = {\n    begin: [\n      /(?:func|call|call_indirect)/,\n      /\\s+/,\n      /\\$[^\\s)]+/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"title.function\"\n    }\n  };\n\n  const ARGUMENT = {\n    className: \"variable\",\n    begin: /\\$[\\w_]+/\n  };\n\n  const PARENS = {\n    match: /(\\((?!;)|\\))+/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n\n  const NUMBER = {\n    className: \"number\",\n    relevance: 0,\n    // borrowed from Prism, TODO: split out into variants\n    match: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/\n  };\n\n  const TYPE = {\n    // look-ahead prevents us from gobbling up opcodes\n    match: /(i32|i64|f32|f64)(?!\\.)/,\n    className: \"type\"\n  };\n\n  const MATH_OPERATIONS = {\n    className: \"keyword\",\n    // borrowed from Prism, TODO: split out into variants\n    match: /\\b(f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))\\b/\n  };\n\n  const OFFSET_ALIGN = {\n    match: [\n      /(?:offset|align)/,\n      /\\s*/,\n      /=/\n    ],\n    className: {\n      1: \"keyword\",\n      3: \"operator\"\n    }\n  };\n\n  return {\n    name: 'WebAssembly',\n    keywords: {\n      $pattern: /[\\w.]+/,\n      keyword: KWS\n    },\n    contains: [\n      LINE_COMMENT,\n      BLOCK_COMMENT,\n      OFFSET_ALIGN,\n      ARGUMENT,\n      PARENS,\n      FUNCTION_REFERENCE,\n      hljs.QUOTE_STRING_MODE,\n      TYPE,\n      MATH_OPERATIONS,\n      NUMBER\n    ]\n  };\n}\n\nmodule.exports = wasm;\n\n};"],
"names":["shadow$provide","global","require","module","exports","wasm","hljs","BLOCK_COMMENT","COMMENT","contains","push","name","keywords","$pattern","keyword","KWS","LINE_COMMENT","OFFSET_ALIGN","match","className","ARGUMENT","begin","PARENS","relevance","FUNCTION_REFERENCE","QUOTE_STRING_MODE","TYPE","MATH_OPERATIONS","NUMBER"]
}
