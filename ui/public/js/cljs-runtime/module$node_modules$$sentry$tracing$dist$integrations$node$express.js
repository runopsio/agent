shadow$provide.module$node_modules$$sentry$tracing$dist$integrations$node$express=function(global,require,module,exports){function wrap(fn,method){var arity=fn.length;switch(arity){case 2:return function(req,res){var transaction=res.__sentry_transaction;if(transaction){var span_1=transaction.startChild({description:fn.name,op:"express.middleware."+method});res.once("finish",function(){span_1.finish()})}return fn.call(this,req,res)};case 3:return function(req,res,next){var _a,span=null===(_a=res.__sentry_transaction)||
void 0===_a?void 0:_a.startChild({description:fn.name,op:"express.middleware."+method});fn.call(this,req,res,function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];null===span||void 0===span?void 0:span.finish();next.call.apply(next,tslib_1.__spread([this],args))})};case 4:return function(err,req,res,next){var _a,span=null===(_a=res.__sentry_transaction)||void 0===_a?void 0:_a.startChild({description:fn.name,op:"express.middleware."+method});fn.call(this,err,req,res,function(){for(var args=
[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];null===span||void 0===span?void 0:span.finish();next.call.apply(next,tslib_1.__spread([this],args))})};default:throw Error("Express middleware takes 2-4 arguments. Got: "+arity);}}function wrapMiddlewareArgs(args,method){return args.map(function(arg){return"function"===typeof arg?wrap(arg,method):Array.isArray(arg)?arg.map(function(a){return"function"===typeof a?wrap(a,method):a}):arg})}function patchMiddleware(router,method){var originalCallback=
router[method];router[method]=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return originalCallback.call.apply(originalCallback,tslib_1.__spread([this],wrapMiddlewareArgs(args,method)))};return router}function instrumentMiddlewares(router,methods){void 0===methods&&(methods=[]);methods.forEach(function(method){return patchMiddleware(router,method)})}Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("module$node_modules$tslib$tslib"),utils_1=
require("module$node_modules$$sentry$utils$dist$index");global=function(){function Express(options){void 0===options&&(options={});this.name=Express.id;this._router=options.router||options.app;this._methods=(Array.isArray(options.methods)?options.methods:[]).concat("use")}Express.prototype.setupOnce=function(){this._router?instrumentMiddlewares(this._router,this._methods):utils_1.logger.error("ExpressIntegration is missing an Express instance")};Express.id="Express";return Express}();exports.Express=
global}
//# sourceMappingURL=module$node_modules$$sentry$tracing$dist$integrations$node$express.js.map
