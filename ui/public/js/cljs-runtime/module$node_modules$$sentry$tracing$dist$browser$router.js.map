{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$router.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACpHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,QAAUN,OAAA,CAAQ,8CAAR,CACVD,OAAJ,CAAaO,OAAQC,CAAAA,eAAR,EA+CbL,QAAQM,CAAAA,6BAAR,CA3CAA,QAAsC,CAACC,sBAAD,CAAyBC,0BAAzB,CAAqDC,gCAArD,CAAuF,CACtF,IAAK,EAAxC,GAAID,0BAAJ,GAA6CA,0BAA7C,CAA0E,CAAA,CAA1E,CACyC,KAAK,EAA9C,GAAIC,gCAAJ;CAAmDA,gCAAnD,CAAsF,CAAA,CAAtF,CACA,IAAKZ,MAAL,EAAgBA,MAAOa,CAAAA,QAAvB,CAAA,CAIA,IAAIC,YAAcd,MAAOa,CAAAA,QAASE,CAAAA,IAAlC,CACIC,iBACAL,2BAAJ,GACIK,iBADJ,CACwBN,sBAAA,CAAuB,CAAEO,KAAMjB,MAAOa,CAAAA,QAASK,CAAAA,QAAxB,CAAkCC,GAAI,UAAtC,CAAvB,CADxB,CAGIP,iCAAJ,EACIL,OAAQa,CAAAA,yBAAR,CAAkC,CAC9BC,SAAUA,QAAS,CAACC,EAAD,CAAK,CAAA,IAChBC,GAAKD,EAAGC,CAAAA,EAAIC,GAAAA,CAAOF,EAAGE,CAAAA,IAUbC,KAAAA,EAAb,GAAID,EAAJ,EAA0BV,WAA1B,EAAqE,CAAC,CAAtE,GAAyCA,WAAYY,CAAAA,OAAZ,CAAoBH,EAApB,CAAzC,CACIT,WADJ,CACkBW,IAAAA,EADlB,CAIID,EAJJ,GAIaD,EAJb,GAKIT,WAMA,CANcW,IAAAA,EAMd,CALIT,iBAKJ,GAJIT,OAAQoB,CAAAA,MAAOC,CAAAA,GAAf,CAAmB,mDAAnB;AAAyEZ,iBAAkBG,CAAAA,EAA3F,CAEA,CAAAH,iBAAkBa,CAAAA,MAAlB,EAEJ,EAAAb,iBAAA,CAAoBN,sBAAA,CAAuB,CAAEO,KAAMjB,MAAOa,CAAAA,QAASK,CAAAA,QAAxB,CAAkCC,GAAI,YAAtC,CAAvB,CAXxB,CAXoB,CADM,CA0B9BW,KAAM,SA1BwB,CAAlC,CAVJ,CAAA,IACIvB,QAAQoB,CAAAA,MAAOI,CAAAA,IAAf,CAAoB,sEAApB,CAJqH,CAPT;",
"sources":["node_modules/@sentry/tracing/dist/browser/router.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$router\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@sentry/utils\");\nvar global = utils_1.getGlobalObject();\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(customStartTransaction, startTransactionOnPageLoad, startTransactionOnLocationChange) {\n    if (startTransactionOnPageLoad === void 0) { startTransactionOnPageLoad = true; }\n    if (startTransactionOnLocationChange === void 0) { startTransactionOnLocationChange = true; }\n    if (!global || !global.location) {\n        utils_1.logger.warn('Could not initialize routing instrumentation due to invalid location');\n        return;\n    }\n    var startingUrl = global.location.href;\n    var activeTransaction;\n    if (startTransactionOnPageLoad) {\n        activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'pageload' });\n    }\n    if (startTransactionOnLocationChange) {\n        utils_1.addInstrumentationHandler({\n            callback: function (_a) {\n                var to = _a.to, from = _a.from;\n                /**\n                 * This early return is there to account for some cases where a navigation transaction starts right after\n                 * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n                 * create an uneccessary navigation transaction.\n                 *\n                 * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n                 * only be caused in certain development environments where the usage of a hot module reloader is causing\n                 * errors.\n                 */\n                if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n                    startingUrl = undefined;\n                    return;\n                }\n                if (from !== to) {\n                    startingUrl = undefined;\n                    if (activeTransaction) {\n                        utils_1.logger.log(\"[Tracing] Finishing current transaction with op: \" + activeTransaction.op);\n                        // If there's an open transaction on the scope, we need to finish it before creating an new one.\n                        activeTransaction.finish();\n                    }\n                    activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'navigation' });\n                }\n            },\n            type: 'history',\n        });\n    }\n}\nexports.instrumentRoutingWithDefaults = instrumentRoutingWithDefaults;\n//# sourceMappingURL=router.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils_1","getGlobalObject","instrumentRoutingWithDefaults","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","location","startingUrl","href","activeTransaction","name","pathname","op","addInstrumentationHandler","callback","_a","to","from","undefined","indexOf","logger","log","finish","type","warn"]
}
