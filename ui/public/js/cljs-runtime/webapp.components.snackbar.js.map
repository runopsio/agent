{"version":3,"sources":["webapp/components/snackbar.cljs"],"mappings":";AAKA,GAAA,QAAAA,mCAAAC,8CAAAC,uDAAAC;AAAA;AAAA,AAAA,wCAAA,iBAAAC,6BAAA,AAAAC,6CAAA,nIAAUS;IAAVR,6BAAA,AAAAD,6CAAA;IAAAE,6BAAA,AAAAF,6CAAA;IAAAG,iCAAA,AAAAH,6CAAA;IAAAI,0BAAA,AAAAC,4CAAA,mCAAA,gEAAA,iBAAAC,eAAA;AAAA,AAAA,QAAAA,6CAAAA,+CAAAA;;AAAA,AAAA,YAAAC,kBAAA,AAAAC,+CAAA,6BAAA,iCAAA,4DAAAJ,wBAAAL,2BAAAE,2BAAAC,2BAAAC,xLAAqBO;;;AACrB,AAAAD,kFAAA,uDAAA,WAA8BE;AAA9B,AAAA;;AACA,AAAAF,kFAAA,2DAAA,WAAgCE;AAAhC,AAAA;;AACA,AAAAF,kFAAA,qDAAA,WAA6BE;AAA7B,AAAA;;AACA,AAAAF,kFAAA,4DAAA,WAAgCE;AAAhC,AAAA;;AAEA,GAAA,QAAAhB,mCAAAC,8CAAAC,uDAAAe;AAAA;AAAA,AAAA,oCAAA,iBAAAb,6BAAA,AAAAC,6CAAA,/HAAUc;IAAVb,6BAAA,AAAAD,6CAAA;IAAAE,6BAAA,AAAAF,6CAAA;IAAAG,iCAAA,AAAAH,6CAAA;IAAAI,0BAAA,AAAAC,4CAAA,mCAAA,gEAAA,iBAAAQ,eAAA;AAAA,AAAA,QAAAA,6CAAAA,+CAAAA;;AAAA,AAAA,YAAAN,kBAAA,AAAAC,+CAAA,6BAAA,6BAAA,4DAAAJ,wBAAAL,2BAAAE,2BAAAC,2BAAAC,xLAAiBO;;;AACjB,AAAAI,8EAAA,wDAAA,WAA0BH,EAAEI;AAA5B,AACE,WAAA,XAACC;AAAD,AAAgB,8BAAA,mFAAA,1GAACC;GAAjB;;AADF,0FAAA,kWAAA,mFAAA,mHAAA,mFAAA,mDAAA,2CAAA,6OAAA,mFAAA,4EAAA,mFAAA,kKAAA,mFAAA,iJAAA,2CAAA,6DAAA,z5BAIgB,AAACR,oEAAW,AAAA,qFAAQM,yUACP,AAAA,oFAAOA;AALpC,AAOgB,8BAAA,mFAAA,1GAACE;WAPjB,mFAAA,mDAAA,2CAAA,oDAAA;;AAUA,AAAAH,8EAAA,4DAAA,WAA4BH;AAA5B,AAAA;;AAEA,sCAAA,tCAAMO;AAAN,AACE,YAAA,AAAAC,RAAMJ,wBAAO,sDAAA,mFAAA,zIAACK;AAAd,AACE,OAACN,gEAAO,AAAA,wFAASC,OAAOA","names":["js/webapp","js/webapp.components","js/webapp.components.snackbar","js/webapp.components.snackbar.level-icon","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__52204","cljs.core/MultiFn","cljs.core.symbol","webapp.components.snackbar/level-icon","cljs.core/identity","_","js/webapp.components.snackbar.markup","fexpr__52205","webapp.components.snackbar/markup","state","js/setTimeout","re-frame.core/dispatch","webapp.components.snackbar/snackbar","cljs.core/deref","re_frame.core.subscribe"],"sourcesContent":["(ns webapp.components.snackbar\n  (:require\n   [reagent.core :as r]\n   [re-frame.core :as rf]))\n\n(defmulti level-icon identity)\n(defmethod level-icon :error [_] \"/icons/icon-important-red.svg\")\n(defmethod level-icon :success [_] \"/icons/icon-check-green.svg\")\n(defmethod level-icon :info [_] \"/icons/icon-information-white.svg\")\n(defmethod level-icon :default [_] \"/icons/icon-information-white.svg\")\n\n(defmulti markup identity)\n(defmethod markup :shown [_ state]\n  (js/setTimeout #(rf/dispatch [:hide-snackbar]) 10000)\n  [:div.flex.align-center.z-20.fixed.max-w-xs.top-8.right-8.p-regular.bg-gray-800.font-light.text-gray-100.leading-5.rounded-lg.shadow-lg.animate-appear-right\n   [:figure.flex-shrink-0.w-6.mr-regular\n    [:img {:src (level-icon (:level state))}]]\n   [:div.flex-shrink [:small (:text state)]]\n   [:figure.flex-shrink-0.w-6.ml-regular.cursor-pointer\n    {:on-click #(rf/dispatch [:hide-snackbar])}\n    [:img {:src \"/icons/icon-close-white.svg\"}]]])\n\n(defmethod markup :default [_] nil)\n\n(defn snackbar []\n  (let [state @(rf/subscribe [:snackbar])]\n    (markup (:status state) state)))\n"]}