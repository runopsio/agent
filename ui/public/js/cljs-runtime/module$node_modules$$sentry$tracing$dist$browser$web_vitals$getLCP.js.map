{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$web_vitals$getLCP.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,kEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgB/HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,KAAIC,eAAiBN,OAAA,CAAQ,8EAAR,CAArB,CACIO,uBAAyBP,OAAA,CAAQ,sFAAR,CAD7B,CAEIQ,aAAeR,OAAA,CAAQ,4EAAR,CAFnB;AAGIS,UAAYT,OAAA,CAAQ,yEAAR,CAHhB,CAIIU,WAAaV,OAAA,CAAQ,0EAAR,CAJjB,CAKIW,kBAAoB,EACxBT,QAAQU,CAAAA,MAAR,CAAiBC,QAAS,CAACC,QAAD,CAAWC,gBAAX,CAA6B,CACnD,IAAIC,kBAAoBT,sBAAuBU,CAAAA,oBAAvB,EAAxB,CACIC,OAASV,YAAaW,CAAAA,UAAb,CAAwB,KAAxB,CADb,CAGIC,aAAeA,QAAS,CAACC,KAAD,CAAQ,CAGhC,IAAIhB,MAAQgB,KAAMC,CAAAA,SAGdjB,MAAJ,CAAYW,iBAAkBO,CAAAA,eAA9B,GACIL,MAAOb,CAAAA,KACP,CADeA,KACf,CAAAa,MAAOM,CAAAA,OAAQC,CAAAA,IAAf,CAAoBJ,KAApB,CAFJ,CAIIK;MAAJ,EACIA,MAAA,EAX4B,CAHpC,CAiBIC,GAAKlB,SAAUmB,CAAAA,OAAV,CAAkB,0BAAlB,CAA8CR,YAA9C,CACT,IAAIO,EAAJ,CAAQ,CACJ,IAAAD,OAASpB,cAAeuB,CAAAA,YAAf,CAA4Bf,QAA5B,CAAsCI,MAAtC,CAA8CH,gBAA9C,CACT,KAAIe,gBAAkBA,QAAS,EAAG,CACzBnB,iBAAA,CAAkBO,MAAOa,CAAAA,EAAzB,CAAL,GACIJ,EAAGK,CAAAA,WAAH,EAAiBC,CAAAA,GAAjB,CAAqBb,YAArB,CAGA,CAFAO,EAAGO,CAAAA,UAAH,EAEA,CADAvB,iBAAA,CAAkBO,MAAOa,CAAAA,EAAzB,CACA,CAD+B,CAAA,CAC/B,CAAAL,MAAA,CAAO,CAAA,CAAP,CAJJ,CAD8B,CAWlC,EAAC,SAAD,CAAY,OAAZ,CAAqBS,CAAAA,OAArB,CAA6B,QAAS,CAACC,IAAD,CAAO,CACzCC,gBAAA,CAAiBD,IAAjB,CAAuBN,eAAvB,CAAwC,CAAEQ,KAAM,CAAA,CAAR,CAAcC,QAAS,CAAA,CAAvB,CAAxC,CADyC,CAA7C,CAGA7B,WAAW8B,CAAAA,QAAX,CAAoBV,eAApB,CAAqC,CAAA,CAArC,CAhBI,CAnB2C,CAvBwE;",
"sources":["node_modules/@sentry/tracing/dist/browser/web-vitals/getLCP.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$web_vitals$getLCP\"] = function(global,require,module,exports) {\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bindReporter_1 = require(\"./lib/bindReporter\");\nvar getVisibilityWatcher_1 = require(\"./lib/getVisibilityWatcher\");\nvar initMetric_1 = require(\"./lib/initMetric\");\nvar observe_1 = require(\"./lib/observe\");\nvar onHidden_1 = require(\"./lib/onHidden\");\nvar reportedMetricIDs = {};\nexports.getLCP = function (onReport, reportAllChanges) {\n    var visibilityWatcher = getVisibilityWatcher_1.getVisibilityWatcher();\n    var metric = initMetric_1.initMetric('LCP');\n    var report;\n    var entryHandler = function (entry) {\n        // The startTime attribute returns the value of the renderTime if it is not 0,\n        // and the value of the loadTime otherwise.\n        var value = entry.startTime;\n        // If the page was hidden prior to paint time of the entry,\n        // ignore it and mark the metric as final, otherwise add the entry.\n        if (value < visibilityWatcher.firstHiddenTime) {\n            metric.value = value;\n            metric.entries.push(entry);\n        }\n        if (report) {\n            report();\n        }\n    };\n    var po = observe_1.observe('largest-contentful-paint', entryHandler);\n    if (po) {\n        report = bindReporter_1.bindReporter(onReport, metric, reportAllChanges);\n        var stopListening_1 = function () {\n            if (!reportedMetricIDs[metric.id]) {\n                po.takeRecords().map(entryHandler);\n                po.disconnect();\n                reportedMetricIDs[metric.id] = true;\n                report(true);\n            }\n        };\n        // Stop listening after input. Note: while scrolling is an input that\n        // stop LCP observation, it's unreliable since it can be programmatically\n        // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n        ['keydown', 'click'].forEach(function (type) {\n            addEventListener(type, stopListening_1, { once: true, capture: true });\n        });\n        onHidden_1.onHidden(stopListening_1, true);\n    }\n};\n//# sourceMappingURL=getLCP.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","bindReporter_1","getVisibilityWatcher_1","initMetric_1","observe_1","onHidden_1","reportedMetricIDs","getLCP","exports.getLCP","onReport","reportAllChanges","visibilityWatcher","getVisibilityWatcher","metric","initMetric","entryHandler","entry","startTime","firstHiddenTime","entries","push","report","po","observe","bindReporter","stopListening_1","id","takeRecords","map","disconnect","forEach","type","addEventListener","once","capture","onHidden"]
}
