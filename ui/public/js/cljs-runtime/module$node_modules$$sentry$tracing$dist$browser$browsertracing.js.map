{
"version":3,
"file":"module$node_modules$$sentry$tracing$dist$browser$browsertracing.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/@sentry/tracing/dist/browser/browsertracing.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$tracing$dist$browser$browsertracing\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@sentry/utils\");\nvar hubextensions_1 = require(\"../hubextensions\");\nvar idletransaction_1 = require(\"../idletransaction\");\nvar spanstatus_1 = require(\"../spanstatus\");\nvar utils_2 = require(\"../utils\");\nvar backgroundtab_1 = require(\"./backgroundtab\");\nvar metrics_1 = require(\"./metrics\");\nvar request_1 = require(\"./request\");\nvar router_1 = require(\"./router\");\nexports.DEFAULT_MAX_TRANSACTION_DURATION_SECONDS = 600;\nvar DEFAULT_BROWSER_TRACING_OPTIONS = tslib_1.__assign({ idleTimeout: idletransaction_1.DEFAULT_IDLE_TIMEOUT, markBackgroundTransactions: true, maxTransactionDuration: exports.DEFAULT_MAX_TRANSACTION_DURATION_SECONDS, routingInstrumentation: router_1.instrumentRoutingWithDefaults, startTransactionOnLocationChange: true, startTransactionOnPageLoad: true }, request_1.defaultRequestInstrumentationOptions);\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nvar BrowserTracing = /** @class */ (function () {\n    function BrowserTracing(_options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = BrowserTracing.id;\n        this._emitOptionsWarning = false;\n        /** Store configured idle timeout so that it can be added as a tag to transactions */\n        this._configuredIdleTimeout = undefined;\n        var tracingOrigins = request_1.defaultRequestInstrumentationOptions.tracingOrigins;\n        // NOTE: Logger doesn't work in constructors, as it's initialized after integrations instances\n        if (_options) {\n            this._configuredIdleTimeout = _options.idleTimeout;\n            if (_options.tracingOrigins && Array.isArray(_options.tracingOrigins) && _options.tracingOrigins.length !== 0) {\n                tracingOrigins = _options.tracingOrigins;\n            }\n            else {\n                this._emitOptionsWarning = true;\n            }\n        }\n        this.options = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, DEFAULT_BROWSER_TRACING_OPTIONS), _options), { tracingOrigins: tracingOrigins });\n        var _metricOptions = this.options._metricOptions;\n        this._metrics = new metrics_1.MetricsInstrumentation(_metricOptions && _metricOptions._reportAllChanges);\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserTracing.prototype.setupOnce = function (_, getCurrentHub) {\n        var _this = this;\n        this._getCurrentHub = getCurrentHub;\n        if (this._emitOptionsWarning) {\n            utils_1.logger.warn('[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.');\n            utils_1.logger.warn(\"[Tracing] We added a reasonable default for you: \" + request_1.defaultRequestInstrumentationOptions.tracingOrigins);\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.options, instrumentRouting = _a.routingInstrumentation, startTransactionOnLocationChange = _a.startTransactionOnLocationChange, startTransactionOnPageLoad = _a.startTransactionOnPageLoad, markBackgroundTransactions = _a.markBackgroundTransactions, traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;\n        instrumentRouting(function (context) { return _this._createRouteTransaction(context); }, startTransactionOnPageLoad, startTransactionOnLocationChange);\n        if (markBackgroundTransactions) {\n            backgroundtab_1.registerBackgroundTabDetection();\n        }\n        request_1.instrumentOutgoingRequests({ traceFetch: traceFetch, traceXHR: traceXHR, tracingOrigins: tracingOrigins, shouldCreateSpanForRequest: shouldCreateSpanForRequest });\n    };\n    /** Create routing idle transaction. */\n    BrowserTracing.prototype._createRouteTransaction = function (context) {\n        var _this = this;\n        if (!this._getCurrentHub) {\n            utils_1.logger.warn(\"[Tracing] Did not create \" + context.op + \" transaction because _getCurrentHub is invalid.\");\n            return undefined;\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.options, beforeNavigate = _a.beforeNavigate, idleTimeout = _a.idleTimeout, maxTransactionDuration = _a.maxTransactionDuration;\n        var parentContextFromHeader = context.op === 'pageload' ? getHeaderContext() : undefined;\n        var expandedContext = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, context), parentContextFromHeader), { trimEnd: true });\n        var modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n        // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n        // from being sent to Sentry).\n        var finalContext = modifiedContext === undefined ? tslib_1.__assign(tslib_1.__assign({}, expandedContext), { sampled: false }) : modifiedContext;\n        if (finalContext.sampled === false) {\n            utils_1.logger.log(\"[Tracing] Will not send \" + finalContext.op + \" transaction because of beforeNavigate.\");\n        }\n        utils_1.logger.log(\"[Tracing] Starting \" + finalContext.op + \" transaction on scope\");\n        var hub = this._getCurrentHub();\n        var location = utils_1.getGlobalObject().location;\n        var idleTransaction = hubextensions_1.startIdleTransaction(hub, finalContext, idleTimeout, true, { location: location });\n        idleTransaction.registerBeforeFinishCallback(function (transaction, endTimestamp) {\n            _this._metrics.addPerformanceEntries(transaction);\n            adjustTransactionDuration(utils_2.secToMs(maxTransactionDuration), transaction, endTimestamp);\n        });\n        idleTransaction.setTag('idleTimeout', this._configuredIdleTimeout);\n        return idleTransaction;\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserTracing.id = 'BrowserTracing';\n    return BrowserTracing;\n}());\nexports.BrowserTracing = BrowserTracing;\n/**\n * Gets transaction context from a sentry-trace meta.\n *\n * @returns Transaction context data from the header or undefined if there's no header or the header is malformed\n */\nfunction getHeaderContext() {\n    var header = getMetaContent('sentry-trace');\n    if (header) {\n        return utils_2.extractTraceparentData(header);\n    }\n    return undefined;\n}\nexports.getHeaderContext = getHeaderContext;\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n    var el = utils_1.getGlobalObject().document.querySelector(\"meta[name=\" + metaName + \"]\");\n    return el ? el.getAttribute('content') : null;\n}\nexports.getMetaContent = getMetaContent;\n/** Adjusts transaction value based on max transaction duration */\nfunction adjustTransactionDuration(maxDuration, transaction, endTimestamp) {\n    var diff = endTimestamp - transaction.startTimestamp;\n    var isOutdatedTransaction = endTimestamp && (diff > maxDuration || diff < 0);\n    if (isOutdatedTransaction) {\n        transaction.setStatus(spanstatus_1.SpanStatus.DeadlineExceeded);\n        transaction.setTag('maxTransactionDurationExceeded', 'true');\n    }\n}\n//# sourceMappingURL=browsertracing.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getHeaderContext","header","getMetaContent","utils_2","extractTraceparentData","metaName","el","utils_1","getGlobalObject","document","querySelector","getAttribute","Object","defineProperty","value","tslib_1","hubextensions_1","idletransaction_1","spanstatus_1","backgroundtab_1","metrics_1","request_1","router_1","DEFAULT_MAX_TRANSACTION_DURATION_SECONDS","DEFAULT_BROWSER_TRACING_OPTIONS","__assign","idleTimeout","DEFAULT_IDLE_TIMEOUT","markBackgroundTransactions","maxTransactionDuration","routingInstrumentation","instrumentRoutingWithDefaults","startTransactionOnLocationChange","startTransactionOnPageLoad","defaultRequestInstrumentationOptions","BrowserTracing","_options","name","id","_emitOptionsWarning","_configuredIdleTimeout","undefined","tracingOrigins","Array","isArray","length","options","_metricOptions","_metrics","MetricsInstrumentation","_reportAllChanges","prototype","setupOnce","BrowserTracing.prototype.setupOnce","_","getCurrentHub","_this","_getCurrentHub","logger","warn","_a","instrumentRouting","traceFetch","traceXHR","shouldCreateSpanForRequest","context","_createRouteTransaction","registerBackgroundTabDetection","instrumentOutgoingRequests","BrowserTracing.prototype._createRouteTransaction","beforeNavigate","parentContextFromHeader","op","expandedContext","trimEnd","modifiedContext","finalContext","sampled","log","hub","location","idleTransaction","startIdleTransaction","registerBeforeFinishCallback","transaction","endTimestamp","addPerformanceEntries","secToMs","diff","startTimestamp","maxDuration","setStatus","SpanStatus","DeadlineExceeded","setTag"]
}
