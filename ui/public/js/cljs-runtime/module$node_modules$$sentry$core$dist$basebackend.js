shadow$provide.module$node_modules$$sentry$core$dist$basebackend=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var utils_1=require("module$node_modules$$sentry$utils$dist$index"),noop_1=require("module$node_modules$$sentry$core$dist$transports$noop");global=function(){function BaseBackend(options){this._options=options;this._options.dsn||utils_1.logger.warn("No DSN provided, backend will not do anything.");this._transport=this._setupTransport()}BaseBackend.prototype.eventFromException=
function(_exception,_hint){throw new utils_1.SentryError("Backend has to implement `eventFromException` method");};BaseBackend.prototype.eventFromMessage=function(_message,_level,_hint){throw new utils_1.SentryError("Backend has to implement `eventFromMessage` method");};BaseBackend.prototype.sendEvent=function(event){void this._transport.sendEvent(event).then(null,function(reason){utils_1.logger.error("Error while sending event: "+reason)})};BaseBackend.prototype.sendSession=function(session){this._transport.sendSession?
void this._transport.sendSession(session).then(null,function(reason){utils_1.logger.error("Error while sending session: "+reason)}):utils_1.logger.warn("Dropping session because custom transport doesn't implement sendSession")};BaseBackend.prototype.getTransport=function(){return this._transport};BaseBackend.prototype._setupTransport=function(){return new noop_1.NoopTransport};return BaseBackend}();exports.BaseBackend=global}
//# sourceMappingURL=module$node_modules$$sentry$core$dist$basebackend.js.map
