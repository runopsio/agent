{"version":3,"sources":["webapp/core.cljs"],"mappings":";AASA,wBAAA,xBAAMA;AAAN,AACE,GAAMC;AAAN,AACE,gHAAA,zGAACC;;AADH;;;AAGF,yBAAA,zBAAuBC;AAAvB,AACE,AAACC;;AACD,IAAMC,UAAQ,wBAAA,xBAAiBC;AAA/B,AACE,AAACC,sCAA+BF;;AAChC,wDAAA,jDAACG,oIAAaC,8BAAkBJ;;AAEpC,mBAAA,nBAAMK;AAAN,AACE,AAACC;;AACD,4BAAA,mFAAA,/GAACC;;AACD,AAACZ;;AACD,OAACG","names":["webapp.core/dev-setup","webapp.config/debug?","cljs.core.println","webapp.core/mount-root","re-frame.core/clear-subscription-cache!","root-el","js/document","reagent.dom/unmount-component-at-node","reagent.dom.render","webapp.app/main-panel","webapp.core/init","webapp.routes/start!","re-frame.core/dispatch-sync"],"sourcesContent":["(ns webapp.core\n  (:require\n   [reagent.dom :as rdom]\n   [re-frame.core :as re-frame]\n   [webapp.events :as events]\n   [webapp.routes :as routes]\n   [webapp.app :as views]\n   [webapp.config :as config]))\n\n(defn dev-setup []\n  (when config/debug?\n    (println \"dev mode\")))\n\n(defn ^:dev/after-load mount-root []\n  (re-frame/clear-subscription-cache!)\n  (let [root-el (.getElementById js/document \"app\")]\n    (rdom/unmount-component-at-node root-el)\n    (rdom/render [views/main-panel] root-el)))\n\n(defn init []\n  (routes/start!)\n  (re-frame/dispatch-sync [::events/initialize-db])\n  (dev-setup)\n  (mount-root))\n"]}