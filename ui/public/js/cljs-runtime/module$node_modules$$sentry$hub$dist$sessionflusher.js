shadow$provide.module$node_modules$$sentry$hub$dist$sessionflusher=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var types_1=require("module$node_modules$$sentry$types$dist$index"),utils_1=require("module$node_modules$$sentry$utils$dist$index"),hub_1=require("module$node_modules$$sentry$hub$dist$hub");global=function(){function SessionFlusher(transport,attrs){var _this=this;this.flushTimeout=60;this._pendingAggregates={};this._isEnabled=!0;this._transport=
transport;this._intervalId=setInterval(function(){return _this.flush()},1E3*this.flushTimeout);this._sessionAttrs=attrs}SessionFlusher.prototype.sendSessionAggregates=function(sessionAggregates){this._transport.sendSession?void this._transport.sendSession(sessionAggregates).then(null,function(reason){utils_1.logger.error("Error while sending session: "+reason)}):utils_1.logger.warn("Dropping session because custom transport doesn't implement sendSession")};SessionFlusher.prototype.flush=function(){var sessionAggregates=
this.getSessionAggregates();0!==sessionAggregates.aggregates.length&&(this._pendingAggregates={},this.sendSessionAggregates(sessionAggregates))};SessionFlusher.prototype.getSessionAggregates=function(){var _this=this,aggregates=Object.keys(this._pendingAggregates).map(function(key){return _this._pendingAggregates[parseInt(key)]});return utils_1.dropUndefinedKeys({attrs:this._sessionAttrs,aggregates})};SessionFlusher.prototype.close=function(){clearInterval(this._intervalId);this._isEnabled=!1;this.flush()};
SessionFlusher.prototype.incrementSessionStatusCount=function(){if(this._isEnabled){var scope=hub_1.getCurrentHub().getScope(),requestSession=null===scope||void 0===scope?void 0:scope.getRequestSession();requestSession&&requestSession.status&&(this._incrementSessionStatusCount(requestSession.status,new Date),null===scope||void 0===scope?void 0:scope.setRequestSession(void 0))}};SessionFlusher.prototype._incrementSessionStatusCount=function(status,date){date=(new Date(date)).setSeconds(0,0);this._pendingAggregates[date]=
this._pendingAggregates[date]||{};var aggregationCounts=this._pendingAggregates[date];aggregationCounts.started||(aggregationCounts.started=(new Date(date)).toISOString());switch(status){case types_1.RequestSessionStatus.Errored:return aggregationCounts.errored=(aggregationCounts.errored||0)+1,aggregationCounts.errored;case types_1.RequestSessionStatus.Ok:return aggregationCounts.exited=(aggregationCounts.exited||0)+1,aggregationCounts.exited;case types_1.RequestSessionStatus.Crashed:return aggregationCounts.crashed=
(aggregationCounts.crashed||0)+1,aggregationCounts.crashed}};return SessionFlusher}();exports.SessionFlusher=global}
//# sourceMappingURL=module$node_modules$$sentry$hub$dist$sessionflusher.js.map
