{"version":3,"sources":["webapp/quickstarts/utilities.cljs"],"mappings":";AAIA,+CAAA,/CAAMA,sGACHC;AADH,AAEE,OAACC,4CAAIC,yDAAsCF;;AAE7C,yDAAA,zDAAMG,0HACHC;AADH,4IAKO,AAACO,4CAAI,WAAAC,xJACL,8DAAA,9DAACE,+CAAOC,pEACR,AAACC,tBACD,OAAYC;AAHP,AAAA,IAAAJ,aAAAD;IAAAC,iBAAA,AAAAL,4BAAAK;UAAA,AAAAZ,4CAAAY,eAAA,jEAAab;YAAb,AAAAC,4CAAAY,eAAA,nEAAiBJ;AAAjB,AAAA,uDAA2BT,IAAIS;GAFpC,AAACJ,+CAAO,WAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;UAAA,AAAAN,4CAAAM,eAAA,jEAAaP;YAAb,AAAAC,4CAAAM,eAAA,nEAAiBE;AAAjB,AACE,UAAK,EAAI,AAACC,4BAASV,UAAK,AAACU,4BAASD;GAF5CL","names":["webapp.quickstarts.utilities/get-config-keys","key","cljs.core.get","webapp.connections.constants/connection-configs-required","webapp.quickstarts.utilities/config->json-stringify","configs","cljs.core.filter","p__35380","map__35381","cljs.core/--destructure-map","value","clojure.string/blank?","cljs.core.map","p__35374","map__35379","cljs.core.reduce","cljs.core/into","cljs.core/clj->js","js/JSON"],"sourcesContent":["(ns webapp.quickstarts.utilities\n  (:require [clojure.string :as s]\n            [webapp.connections.constants :as constants]))\n\n(defn get-config-keys\n  [key]\n  (get constants/connection-configs-required key))\n\n(defn config->json-stringify\n  [configs]\n  (->> configs\n       (filter (fn [{:keys [key value]}]\n                 (not (or (s/blank? key) (s/blank? value)))))\n       (map (fn [{:keys [key value]}] {key value}))\n       (reduce into {})\n       (clj->js)\n       (.stringify js/JSON)))\n"]}