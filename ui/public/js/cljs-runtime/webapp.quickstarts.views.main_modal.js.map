{"version":3,"sources":["webapp/quickstarts/views/main_modal.cljs"],"mappings":"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","names":["p__30352","map__30353","cljs.core/--destructure-map","cljs.core.get","cljs.core/deref","webapp.quickstarts.views.main-modal/checkbox","name","description","checked","text","js/localStorage","cljs.core/not","cljs.core/reset!","webapp.quickstarts.views.main-modal/checkbox-disabled-quickstart","reagent.core.atom","p__30365","map__30366","webapp.quickstarts.views.main-modal/manage->main-area","current-step","config-atom","fx-change-step","connection-name-atom","connection-type-atom","fx-create-connection-request","fx-get-current-step-infos","G__30368","cljs.core/Keyword","js/Error","webapp.quickstarts.views.environment-step-modal/main","webapp.quickstarts.views.configration-inputs/main","webapp.quickstarts.views.task-step-modal/main","webapp.quickstarts.views.main-modal/container","steppers","connection-type","connection-name","connection-img","configs","webapp.quickstarts.utilities/get-config-keys","cljs.core.keyword","get-current-step-infos","G__30374","fexpr__30373","get-index","clojure.string.index_of","cljs.core/keys","get-step","direction","cljs.core.nth","G__30376","go-next-step","go-back-step","change-step","step","new-status","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/assoc","create-connection-request","webapp.http.runops-api/request","cljs.core.merge","webapp.quickstarts.utilities/config->json-stringify","_","webapp.quickstarts.views.snackbar/main","webapp.components.headings/h2","clojure.string/blank?","p1__30369#","cljs.core.map","webapp.quickstarts.views.connection-card/main","webapp.connections.constants/connections-types-list","webapp.components.stepper/main","webapp.components.divider/main","webapp.components.button/secondary","and__4251__auto__","cljs.core._EQ_","webapp.components.button/primary","cljs.core.not_EQ_","webapp.quickstarts.views.main-modal/close-modal-dialog","dialog-text","on-success-dialog","re-frame.core/dispatch","open-dialog","webapp.quickstarts.views.main-modal/main","tasks","re_frame.core.subscribe","user","user-groups","admin?","p1__30380#","cljs.core/some","results","status","quickstart-modal-disabled","cljs.core/empty?"],"sourcesContent":["(ns webapp.quickstarts.views.main-modal\n  (:require [clojure.string :as s]\n            [re-frame.core :as rf]\n            [reagent.core :as r]\n            [webapp.quickstarts.events]\n            [webapp.components.button :as button]\n            [webapp.components.divider :as divider]\n            [webapp.components.headings :as headings]\n            [webapp.components.stepper :as stepper]\n            [webapp.http.runops-api :as runops-api]\n            [webapp.quickstarts.utilities :as utils]\n            [webapp.quickstarts.views.configration-inputs :as config-inputs]\n            [webapp.quickstarts.views.connection-card :as connection-card]\n            [webapp.quickstarts.views.environment-step-modal :as environment-step]\n            [webapp.quickstarts.views.snackbar :as show-snackbar]\n            [webapp.quickstarts.views.task-step-modal :as task-step]\n            [webapp.subs :as subs]\n            [webapp.connections.constants :as constants]))\n\n(defn checkbox\n  [{:keys [name description checked text]}]\n  [:div {:class \"relative flex items-start\"}\n   [:div {:class \"flex items-center h-5\"}\n    [:input {:id (str \"checkbox-\" name)\n             :name (str \"checkbox-name-\" name)\n             \"aria-describedby\" description\n             :type \"checkbox\"\n             :checked @checked\n             :on-change #(do\n                           (.setItem js/localStorage \"quickstart-modal-disabled\" (not @checked))\n                           (reset! checked (not @checked)))\n             :class \"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"}]]\n   [:div {:class \"ml-3 text-sm\"}\n    [:span {:id description\n            :class \"text-gray-500\"}\n     text]]])\n\n(def checkbox-disabled-quickstart (r/atom false))\n\n(defn manage->main-area\n  [{:keys [current-step\n           config-atom\n           fx-change-step\n           connection-name-atom\n           connection-type-atom\n           fx-create-connection-request\n           fx-get-current-step-infos]}]\n  (case current-step\n    :agent [environment-step/main (config-inputs/main config-atom) fx-create-connection-request {:target-name connection-name-atom\n                                                                                                 :target-type connection-type-atom\n                                                                                                 :fx-get-current-step-infos fx-get-current-step-infos}]\n    :task [task-step/main fx-change-step @connection-name-atom]))\n\n(defn container\n  []\n  (let [steppers (r/atom {:agent {:status \"current\"\n                                  :title \"Connection's configuration\"\n                                  :text \"It will create your connection.\"}\n                          :task {:status \"upcoming\"\n                                 :title \"Task running\"\n                                 :text \"It will test your connection running a task of yours.\"}})\n        current-step (r/atom :agent)\n        connection-type (r/atom \"\")\n        connection-name (r/atom \"\")\n        connection-img (r/atom \"\")\n        configs (r/atom (utils/get-config-keys (keyword @connection-type)))\n\n        get-current-step-infos #(@current-step @steppers)\n        get-index #(s/index-of (keys @steppers) @current-step)\n        get-step (fn [direction] (nth (keys @steppers) (case direction\n                                                         \"next\" (+ (get-index) 1)\n                                                         \"back\" (- (get-index) 1)) false))\n\n        go-next-step #(reset! current-step (if (get-step \"next\") (get-step \"next\") @current-step))\n        go-back-step #(reset! current-step (if (get-step \"back\") (get-step \"back\") @current-step))\n\n        change-step (fn [step new-status] (swap! steppers update-in [step] assoc :status new-status))\n        create-connection-request #(runops-api/request {:method \"POST\"\n                                                        :uri \"/v1/targets\"\n                                                        :body (merge {:name @connection-name\n                                                                      :type @connection-type\n                                                                      :groups nil\n                                                                      :secret_provider \"runops\"\n                                                                      :tags \"test\"\n                                                                      :config (utils/config->json-stringify @configs)})\n                                                        :on-failure (fn [_]\n                                                                      (show-snackbar/main :connection-failure))\n                                                        :on-success (fn [_]\n                                                                      (change-step :agent \"complete\")\n                                                                      (change-step :task \"current\")\n                                                                      (show-snackbar/main :verified))})]\n\n    (fn []\n      [:<>\n       [:div {:class \"grid grid-cols-4 items-center mb-large\"}\n        [headings/h2 \"Quickstarts\"]]\n       [:div {:class \"py-6\"}\n        (if (s/blank? @connection-type)\n          [:<>\n           [:p {:class \"mb-large\"}\n            \"What would you like to connect?\"]\n           [:div {:role \"list\"\n                  :class \"grid gap-6 grid-cols-3 xl:grid-cols-4\"}\n            (map #(connection-card/main % connection-type connection-img configs) constants/connections-types-list)]\n\n           [:div {:class \"mt-large\"}\n            [checkbox {:name \"cancel-quickstart-modal\"\n                       :description \"checkbox for disabled quickstart modal\"\n                       :checked checkbox-disabled-quickstart\n                       :text \"I do not want to see this quickstart anymore.\"}]]]\n\n          [:<>\n           [:div {:class \"flex gap-4 px-8 mb-large\"}\n            [:button {:on-click (fn []\n                                  (reset! connection-type \"\")\n                                  (reset! connection-img \"\"))}\n             [:figure {:class \"w-5\"}\n              [:img {:src \"/icons/icon-arrow-left-blue.svg\"}]]]\n            [:img {:src @connection-img\n                   :alt (str \"logo \" @connection-type)}]]\n           [:div {:class \"max-w-7xl px-8 grid grid-cols-12 gap-16\"}\n            [:div {:class \"col-span-4 flex flex-col justify-between my-large\"}\n             [:nav {:class \"sticky top-6 divide-y divide-gray-300\"}\n              (stepper/main @steppers)]\n             [checkbox {:name \"cancel-quickstart-modal\"\n                        :description \"checkbox for disabled quickstart modal\"\n                        :checked checkbox-disabled-quickstart\n                        :text \"I do not want to see this quickstart anymore.\"}]]\n\n            [:main {:class \"col-span-8\"}\n             [manage->main-area {:current-step @current-step\n                                 :config-atom configs\n                                 :fx-change-step change-step\n                                 :connection-name-atom connection-name\n                                 :connection-type-atom connection-type\n                                 :fx-create-connection-request create-connection-request\n                                 :fx-get-current-step-infos get-current-step-infos}]\n             (divider/main)\n             [:div {:class \"grid grid-cols-2 gap-x-x-large\"}\n              (if (get-step \"back\")\n                (button/secondary {:text \"Back\"\n                                   :outlined true\n                                   :on-click #(go-back-step)})\n                [:div {:class \"col-span-1\"}])\n              (if (and (get-step \"next\") (= (:status (get-current-step-infos)) \"complete\"))\n                (button/primary {:text \"Next\"\n                                 :disabled (not= (:status (get-current-step-infos)) \"complete\")\n                                 :on-click #(go-next-step)})\n                [:div {:class \"col-span-1\"}])]]]])]])))\n\n(defn close-modal-dialog []\n  (let [dialog-text (str \"Are you sure you want to discard this new connection?\")\n        on-success-dialog #(rf/dispatch [:close-modal])\n        open-dialog #(rf/dispatch [:open-dialog {:text dialog-text\n                                                 :on-success on-success-dialog}])]\n    (open-dialog)))\n\n(defn main []\n  (let [tasks (rf/subscribe [::subs/quickstart-tasks])\n        user (rf/subscribe [::subs/user])]\n    (rf/dispatch [:quickstart-tasks->get-tasks])\n    (fn []\n      (let [user-groups (:groups @user)\n            admin? (some #(= \"admin\" %) user-groups)\n            results (:results @tasks)\n            status (:status @tasks)\n            quickstart-modal-disabled (if (= \"true\" (.getItem js/localStorage \"quickstart-modal-disabled\")) true false)]\n        (when-not quickstart-modal-disabled\n          (when (and (empty? results) (= status :success) admin?)\n            (rf/dispatch [:open-modal [container] :large close-modal-dialog])))))))\n"]}