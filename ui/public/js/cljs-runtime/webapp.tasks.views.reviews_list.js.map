{"version":3,"sources":["webapp/tasks/views/reviews_list.cljs"],"mappings":";AAMA,4CAAA,5CAAMA,gGACHC;AADH,AAEE,IAAMC,cAAY,4CAAA,AAAAC,6QAAA,zTAACC,4DAAK,sDAAA,mFAAA,zIAACC;IACnBC,WAAS,8OAAA,AAAA,4DAAA,xSAAM,AAACC,6CAAE,AAAA,gFAAKL,aAAa,AAAA,wFAAUD;AADpD,AAEE,OAACO,yEAAwBF,SAASL;;AAEtC,+CAAA,/CAAMQ,sGACHC;AADH,AAAA,0FAAA,4JAGG,AAACC,8CAAM,AAACC,4CAAIZ,0CAAUU","names":["webapp.tasks.views.reviews-list/list-item","review","active-task","cljs.core/deref","cljs.core.get","re_frame.core.subscribe","selected","cljs.core._EQ_","webapp.tasks.views.review-item/review-item","webapp.tasks.views.reviews-list/reviews-list","reviews","cljs.core.doall","cljs.core.map"],"sourcesContent":["(ns webapp.tasks.views.reviews-list\n  (:require\n   [re-frame.core :as rf]\n   [webapp.subs :as subs]\n   [webapp.tasks.views.review-item :as review-item]))\n\n(defn list-item\n  [review]\n  (let [active-task (get @(rf/subscribe [::subs/active-task-to-review]) :task)\n        selected (when (= (:id active-task) (:task_id review)) :selected)]\n    (review-item/review-item selected review)))\n\n(defn reviews-list\n  [reviews]\n  [:div.border-r.overflow-auto.h-full.relative.h-tasks-list\n   (doall (map list-item reviews))])\n"]}