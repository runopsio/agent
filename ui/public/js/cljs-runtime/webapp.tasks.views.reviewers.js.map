{"version":3,"sources":["webapp/tasks/views/reviewers.cljs"],"mappings":"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","names":["js/webapp","js/webapp.tasks","js/webapp.tasks.views","js/webapp.tasks.views.reviewers","js/webapp.tasks.views.reviewers.on-review-cb","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__30681","cljs.core/MultiFn","cljs.core.symbol","webapp.tasks.views.reviewers/on-review-cb","cljs.core/identity","_","task-id","review-status","re-frame.core/dispatch","webapp.tasks.views.reviewers/confirm-task-approval","body","source","webapp.tasks.views.reviewers/confirm-task-rejection","webapp.tasks.views.reviewers/review-buttons","review-body","approve-icon","reject-icon","webapp.components.button/red","webapp.components.button/green","js/webapp.tasks.views.reviewers.review-status-icon","fexpr__30709","webapp.tasks.views.reviewers/review-status-icon","webapp.tasks.views.reviewers/review-information","review","task","cljs.core/deref","user","re_frame.core.subscribe","can-review?","and__4251__auto__","cljs.core._EQ_","p1__30710#","cljs.core/some","or__4253__auto__","webapp.components.divider/main","js/webapp.tasks.views.reviewers.groups-list","fexpr__30730","webapp.tasks.views.reviewers/groups-list","cljs.core/count","iter__4652__auto__","s__30745","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","b__30747","cljs.core/chunk-buffer","i__30746","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__30744","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","webapp.tasks.views.reviewers/reviewers","status","cljs.core/chunk-first"],"sourcesContent":["(ns webapp.tasks.views.reviewers\n  (:require\n   [re-frame.core :as rf]\n   [webapp.subs :as subs]\n   [webapp.tasks.events :as events]\n   [webapp.components.button :as button]\n   [webapp.components.divider :as divider]))\n\n(defmulti ^:private on-review-cb identity)\n(defmethod on-review-cb :tasks [_ task-id review-status]\n  (rf/dispatch\n   [:show-snackbar\n    {:level :success\n     :text (str \"Task \" task-id \" was !\" review-status \"!\")}])\n  (rf/dispatch [::events/refetch-current-task task-id]))\n(defmethod on-review-cb :reviews [_ task-id review-status]\n  (rf/dispatch\n   [:show-snackbar\n    {:level :success\n     :text (str \"Task \" task-id \" was \" review-status \"!\")}])\n  (rf/dispatch [:get-task-to-review task-id])\n  (rf/dispatch [:get-reviews]))\n\n(defn confirm-task-approval [body source]\n  (rf/dispatch\n   [::events/confirm-task-approval\n    {:message (str \"Do you really want to approve task \" (:task-id body) \"?\")\n     :body body\n     :on-success #(on-review-cb source (:task-id body) \"approved\")}]))\n\n(defn confirm-task-rejection [body source]\n  (rf/dispatch\n   [::events/confirm-task-rejection\n    {:message (str \"Do you really want to reject task \" (:task-id body) \"?\")\n     :body body\n     :on-success #(on-review-cb source (:task-id body) \"rejected\")}]))\n\n(defn review-buttons [review-body source]\n  (let [approve-icon [:figure [:img.align-center {:src \"/icons/icon-check-white.svg\"}]]\n        reject-icon [:figure [:img.align-center {:src \"/icons/icon-close-red.svg\"}]]]\n    [:div.flex.flex-grow.gap-small.place-content-end\n     [:div.w-8\n      (button/red\n       :rounded-transparent\n       {:text reject-icon\n        :on-click #(confirm-task-rejection review-body source)})]\n     [:div.w-8\n      (button/green\n       :rounded\n       {:text approve-icon\n        :on-click #(confirm-task-approval review-body source)})]\n     ]))\n\n(defmulti review-status-icon identity)\n(defmethod review-status-icon :default [_ _] \"/icons/icon-waiting-circle-yellow.svg\")\n(defmethod review-status-icon \"approved\" [_ _] \"/icons/icon-check-green.svg\")\n(defmethod review-status-icon \"rejected\" [_ _] \"/icons/icon-close-red.svg\")\n\n(defn review-information [review task source]\n  (let [user @(rf/subscribe [::subs/user])\n        can-review? (and (= (:status review) \"pending-review\") (some #(= (:group review) %) (:groups user)))\n        review-body {:task-id (:id task) :group (:group review)}]\n    (fn [review task]\n      [:div\n       {:key (str (:group review) (:created review) (:id task))}\n       [:div.flex.items-center.mb-small\n        [:div.flex.items-center\n         [:div.flex-shrink-0.w-4.mr-small\n          [:figure\n           [:img {:src \"/icons/icon-user-couple.svg\"}]]]\n         [:span.flex-shrink-0.text-sm.text-gray-800 (:group review)]]\n        [:div.w-6\n         [:figure\n          [:img {:src (review-status-icon (:status review))}]]]\n        (when (or (and (= \"anyone\" (:group review)) (= (:status review) \"pending-review\")) can-review?) (review-buttons review-body source))]\n       (divider/main)])))\n\n(defmulti groups-list identity)\n(defmethod groups-list :loading [_]\n  [:div.animate-pulse\n   [:div.flex.mb-small.gap-small\n    [:div.h-5.w-5.rounded-lg.bg-gray-300]\n    [:div.h-5.flex-grow.rounded-lg.bg-gray-300]]\n   (divider/main)\n   [:div.flex.mb-small.gap-small\n    [:div.h-5.w-5.rounded-lg.bg-gray-300]\n    [:div.h-5.flex-grow.rounded-lg.bg-gray-300]]\n   (divider/main)])\n\n(defmethod groups-list :default [_ task source]\n  [:div\n   (when (= (count (:reviews task)) 0)\n     [:div.text-xs.italic.text-gray-400 \"No review needed\"])\n   (for [review (:reviews task)]\n     ^{:key (str\n             (:group review)\n             (:created review)\n             (:id task))} [review-information review task source])])\n\n(defn reviewers\n  \"task -> the task to be reviewed\n   status -> the request status for the task, to manage loading state\n   source -> the source that is rendering the component, used to take decisions regards which list and informations update. Check more information of possible values on `on-review-cb` function on this file\"\n  [status task source]\n  [:section\n   [:header.flex.mb-regular.items-center\n    [:span.text-sm.font-semibold.flex-grow \"Reviewers\"]]\n   [:div.mb-regular\n    [groups-list status task source]]])\n"]}